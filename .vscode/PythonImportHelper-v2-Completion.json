[
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "argparse",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "argparse",
        "description": "argparse",
        "detail": "argparse",
        "documentation": {}
    },
    {
        "label": "pformat",
        "importPath": "pprint",
        "description": "pprint",
        "isExtraImport": true,
        "detail": "pprint",
        "documentation": {}
    },
    {
        "label": "jmespath",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "jmespath",
        "description": "jmespath",
        "detail": "jmespath",
        "documentation": {}
    },
    {
        "label": "exceptions",
        "importPath": "jmespath",
        "description": "jmespath",
        "isExtraImport": true,
        "detail": "jmespath",
        "documentation": {}
    },
    {
        "label": "print_function",
        "importPath": "__future__",
        "description": "__future__",
        "isExtraImport": true,
        "detail": "__future__",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "transaction",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "transaction",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "transaction",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "Tax",
        "importPath": "addon.models",
        "description": "addon.models",
        "isExtraImport": true,
        "detail": "addon.models",
        "documentation": {}
    },
    {
        "label": "ConfigSettings",
        "importPath": "addon.models",
        "description": "addon.models",
        "isExtraImport": true,
        "detail": "addon.models",
        "documentation": {}
    },
    {
        "label": "ConfigSettings",
        "importPath": "addon.models",
        "description": "addon.models",
        "isExtraImport": true,
        "detail": "addon.models",
        "documentation": {}
    },
    {
        "label": "Tax",
        "importPath": "addon.models",
        "description": "addon.models",
        "isExtraImport": true,
        "detail": "addon.models",
        "documentation": {}
    },
    {
        "label": "ConfigSettings",
        "importPath": "addon.models",
        "description": "addon.models",
        "isExtraImport": true,
        "detail": "addon.models",
        "documentation": {}
    },
    {
        "label": "ConfigSettings",
        "importPath": "addon.models",
        "description": "addon.models",
        "isExtraImport": true,
        "detail": "addon.models",
        "documentation": {}
    },
    {
        "label": "Tax",
        "importPath": "addon.models",
        "description": "addon.models",
        "isExtraImport": true,
        "detail": "addon.models",
        "documentation": {}
    },
    {
        "label": "Tax",
        "importPath": "addon.models",
        "description": "addon.models",
        "isExtraImport": true,
        "detail": "addon.models",
        "documentation": {}
    },
    {
        "label": "ConfigSettings",
        "importPath": "addon.models",
        "description": "addon.models",
        "isExtraImport": true,
        "detail": "addon.models",
        "documentation": {}
    },
    {
        "label": "Tax",
        "importPath": "addon.models",
        "description": "addon.models",
        "isExtraImport": true,
        "detail": "addon.models",
        "documentation": {}
    },
    {
        "label": "ImportExportModelAdmin",
        "importPath": "import_export.admin",
        "description": "import_export.admin",
        "isExtraImport": true,
        "detail": "import_export.admin",
        "documentation": {}
    },
    {
        "label": "ImportExportModelAdmin",
        "importPath": "import_export.admin",
        "description": "import_export.admin",
        "isExtraImport": true,
        "detail": "import_export.admin",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "mark_safe",
        "importPath": "django.utils.html",
        "description": "django.utils.html",
        "isExtraImport": true,
        "detail": "django.utils.html",
        "documentation": {}
    },
    {
        "label": "mark_safe",
        "importPath": "django.utils.html",
        "description": "django.utils.html",
        "isExtraImport": true,
        "detail": "django.utils.html",
        "documentation": {}
    },
    {
        "label": "mark_safe",
        "importPath": "django.utils.html",
        "description": "django.utils.html",
        "isExtraImport": true,
        "detail": "django.utils.html",
        "documentation": {}
    },
    {
        "label": "mark_safe",
        "importPath": "django.utils.html",
        "description": "django.utils.html",
        "isExtraImport": true,
        "detail": "django.utils.html",
        "documentation": {}
    },
    {
        "label": "slugify",
        "importPath": "django.utils.text",
        "description": "django.utils.text",
        "isExtraImport": true,
        "detail": "django.utils.text",
        "documentation": {}
    },
    {
        "label": "slugify",
        "importPath": "django.utils.text",
        "description": "django.utils.text",
        "isExtraImport": true,
        "detail": "django.utils.text",
        "documentation": {}
    },
    {
        "label": "slugify",
        "importPath": "django.utils.text",
        "description": "django.utils.text",
        "isExtraImport": true,
        "detail": "django.utils.text",
        "documentation": {}
    },
    {
        "label": "shortuuid.django_fields",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "shortuuid.django_fields",
        "description": "shortuuid.django_fields",
        "detail": "shortuuid.django_fields",
        "documentation": {}
    },
    {
        "label": "ShortUUIDField",
        "importPath": "shortuuid.django_fields",
        "description": "shortuuid.django_fields",
        "isExtraImport": true,
        "detail": "shortuuid.django_fields",
        "documentation": {}
    },
    {
        "label": "ShortUUIDField",
        "importPath": "shortuuid.django_fields",
        "description": "shortuuid.django_fields",
        "isExtraImport": true,
        "detail": "shortuuid.django_fields",
        "documentation": {}
    },
    {
        "label": "ShortUUIDField",
        "importPath": "shortuuid.django_fields",
        "description": "shortuuid.django_fields",
        "isExtraImport": true,
        "detail": "shortuuid.django_fields",
        "documentation": {}
    },
    {
        "label": "ShortUUIDField",
        "importPath": "shortuuid.django_fields",
        "description": "shortuuid.django_fields",
        "isExtraImport": true,
        "detail": "shortuuid.django_fields",
        "documentation": {}
    },
    {
        "label": "shortuuid",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "shortuuid",
        "description": "shortuuid",
        "detail": "shortuuid",
        "documentation": {}
    },
    {
        "label": "datetime",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "datetime",
        "description": "datetime",
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "userauths",
        "description": "userauths",
        "isExtraImport": true,
        "detail": "userauths",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "store",
        "description": "store",
        "isExtraImport": true,
        "detail": "store",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "store",
        "description": "store",
        "isExtraImport": true,
        "detail": "store",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "customer",
        "description": "customer",
        "isExtraImport": true,
        "detail": "customer",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "vendor",
        "description": "vendor",
        "isExtraImport": true,
        "detail": "vendor",
        "documentation": {}
    },
    {
        "label": "TokenRefreshView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "TokenObtainPairView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "TokenObtainPairView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "TokenObtainPairView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "TokenObtainPairView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Env",
        "importPath": "environs",
        "description": "environs",
        "isExtraImport": true,
        "detail": "environs",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "permissions",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "generics",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "generics",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "generics",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "generics",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "get_schema_view",
        "importPath": "drf_yasg.views",
        "description": "drf_yasg.views",
        "isExtraImport": true,
        "detail": "drf_yasg.views",
        "documentation": {}
    },
    {
        "label": "openapi",
        "importPath": "drf_yasg",
        "description": "drf_yasg",
        "isExtraImport": true,
        "detail": "drf_yasg",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponseNotFound",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponseNotFound",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponseNotFound",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "method_decorator",
        "importPath": "django.utils.decorators",
        "description": "django.utils.decorators",
        "isExtraImport": true,
        "detail": "django.utils.decorators",
        "documentation": {}
    },
    {
        "label": "method_decorator",
        "importPath": "django.utils.decorators",
        "description": "django.utils.decorators",
        "isExtraImport": true,
        "detail": "django.utils.decorators",
        "documentation": {}
    },
    {
        "label": "method_decorator",
        "importPath": "django.utils.decorators",
        "description": "django.utils.decorators",
        "isExtraImport": true,
        "detail": "django.utils.decorators",
        "documentation": {}
    },
    {
        "label": "csrf_exempt",
        "importPath": "django.views.decorators.csrf",
        "description": "django.views.decorators.csrf",
        "isExtraImport": true,
        "detail": "django.views.decorators.csrf",
        "documentation": {}
    },
    {
        "label": "csrf_exempt",
        "importPath": "django.views.decorators.csrf",
        "description": "django.views.decorators.csrf",
        "isExtraImport": true,
        "detail": "django.views.decorators.csrf",
        "documentation": {}
    },
    {
        "label": "csrf_exempt",
        "importPath": "django.views.decorators.csrf",
        "description": "django.views.decorators.csrf",
        "isExtraImport": true,
        "detail": "django.views.decorators.csrf",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Max",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "permission_classes",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "permission_classes",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "permission_classes",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "permission_classes",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "AllowAny",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "AllowAny",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "AllowAny",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "AllowAny",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "MyTokenObtainPairSerializer",
        "importPath": "userauths.serializer",
        "description": "userauths.serializer",
        "isExtraImport": true,
        "detail": "userauths.serializer",
        "documentation": {}
    },
    {
        "label": "ProfileSerializer",
        "importPath": "userauths.serializer",
        "description": "userauths.serializer",
        "isExtraImport": true,
        "detail": "userauths.serializer",
        "documentation": {}
    },
    {
        "label": "RegisterSerializer",
        "importPath": "userauths.serializer",
        "description": "userauths.serializer",
        "isExtraImport": true,
        "detail": "userauths.serializer",
        "documentation": {}
    },
    {
        "label": "ProfileSerializer",
        "importPath": "userauths.serializer",
        "description": "userauths.serializer",
        "isExtraImport": true,
        "detail": "userauths.serializer",
        "documentation": {}
    },
    {
        "label": "UserSerializer",
        "importPath": "userauths.serializer",
        "description": "userauths.serializer",
        "isExtraImport": true,
        "detail": "userauths.serializer",
        "documentation": {}
    },
    {
        "label": "MyTokenObtainPairSerializer",
        "importPath": "userauths.serializer",
        "description": "userauths.serializer",
        "isExtraImport": true,
        "detail": "userauths.serializer",
        "documentation": {}
    },
    {
        "label": "RegisterSerializer",
        "importPath": "userauths.serializer",
        "description": "userauths.serializer",
        "isExtraImport": true,
        "detail": "userauths.serializer",
        "documentation": {}
    },
    {
        "label": "MyTokenObtainPairSerializer",
        "importPath": "userauths.serializer",
        "description": "userauths.serializer",
        "isExtraImport": true,
        "detail": "userauths.serializer",
        "documentation": {}
    },
    {
        "label": "ProfileSerializer",
        "importPath": "userauths.serializer",
        "description": "userauths.serializer",
        "isExtraImport": true,
        "detail": "userauths.serializer",
        "documentation": {}
    },
    {
        "label": "RegisterSerializer",
        "importPath": "userauths.serializer",
        "description": "userauths.serializer",
        "isExtraImport": true,
        "detail": "userauths.serializer",
        "documentation": {}
    },
    {
        "label": "UserSerializer",
        "importPath": "userauths.serializer",
        "description": "userauths.serializer",
        "isExtraImport": true,
        "detail": "userauths.serializer",
        "documentation": {}
    },
    {
        "label": "MyTokenObtainPairSerializer",
        "importPath": "userauths.serializer",
        "description": "userauths.serializer",
        "isExtraImport": true,
        "detail": "userauths.serializer",
        "documentation": {}
    },
    {
        "label": "ProfileSerializer",
        "importPath": "userauths.serializer",
        "description": "userauths.serializer",
        "isExtraImport": true,
        "detail": "userauths.serializer",
        "documentation": {}
    },
    {
        "label": "RegisterSerializer",
        "importPath": "userauths.serializer",
        "description": "userauths.serializer",
        "isExtraImport": true,
        "detail": "userauths.serializer",
        "documentation": {}
    },
    {
        "label": "CancelledOrderSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "NotificationSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "CartSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "CartOrderItemSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "CouponUsersSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "ProductSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "TagSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "CategorySerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "DeliveryCouriersSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "CartOrderSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "GallerySerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "BrandSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "ProductFaqSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "ReviewSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "SpecificationSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "CouponSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "ColorSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "SizeSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "AddressSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "WishlistSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "ConfigSettingsSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "CancelledOrderSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "CartSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "CartOrderItemSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "CouponUsersSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "ProductSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "TagSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "CategorySerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "DeliveryCouriersSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "CartOrderSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "GallerySerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "BrandSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "ProductFaqSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "ReviewSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "SpecificationSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "CouponSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "ColorSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "SizeSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "AddressSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "WishlistSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "ConfigSettingsSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "CancelledOrderSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "CouponSummarySerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "EarningSummarySerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "NotificationSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "CartSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "NotificationSummarySerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "SummarySerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "CartOrderItemSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "CouponUsersSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "ProductSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "TagSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "CategorySerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "DeliveryCouriersSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "CartOrderSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "GallerySerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "BrandSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "ProductFaqSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "ReviewSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "SpecificationSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "CouponSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "ColorSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "SizeSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "AddressSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "WishlistSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "ConfigSettingsSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "VendorSerializer",
        "importPath": "store.serializers",
        "description": "store.serializers",
        "isExtraImport": true,
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "userauths.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "userauths.models",
        "description": "userauths.models",
        "detail": "userauths.models",
        "documentation": {}
    },
    {
        "label": "Profile",
        "importPath": "userauths.models",
        "description": "userauths.models",
        "isExtraImport": true,
        "detail": "userauths.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "userauths.models",
        "description": "userauths.models",
        "isExtraImport": true,
        "detail": "userauths.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "userauths.models",
        "description": "userauths.models",
        "isExtraImport": true,
        "detail": "userauths.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "userauths.models",
        "description": "userauths.models",
        "isExtraImport": true,
        "detail": "userauths.models",
        "documentation": {}
    },
    {
        "label": "user_directory_path",
        "importPath": "userauths.models",
        "description": "userauths.models",
        "isExtraImport": true,
        "detail": "userauths.models",
        "documentation": {}
    },
    {
        "label": "Profile",
        "importPath": "userauths.models",
        "description": "userauths.models",
        "isExtraImport": true,
        "detail": "userauths.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "userauths.models",
        "description": "userauths.models",
        "isExtraImport": true,
        "detail": "userauths.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "userauths.models",
        "description": "userauths.models",
        "isExtraImport": true,
        "detail": "userauths.models",
        "documentation": {}
    },
    {
        "label": "Profile",
        "importPath": "userauths.models",
        "description": "userauths.models",
        "isExtraImport": true,
        "detail": "userauths.models",
        "documentation": {}
    },
    {
        "label": "Profile",
        "importPath": "userauths.models",
        "description": "userauths.models",
        "isExtraImport": true,
        "detail": "userauths.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "userauths.models",
        "description": "userauths.models",
        "isExtraImport": true,
        "detail": "userauths.models",
        "documentation": {}
    },
    {
        "label": "Profile",
        "importPath": "userauths.models",
        "description": "userauths.models",
        "isExtraImport": true,
        "detail": "userauths.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "userauths.models",
        "description": "userauths.models",
        "isExtraImport": true,
        "detail": "userauths.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "userauths.models",
        "description": "userauths.models",
        "isExtraImport": true,
        "detail": "userauths.models",
        "documentation": {}
    },
    {
        "label": "user_directory_path",
        "importPath": "userauths.models",
        "description": "userauths.models",
        "isExtraImport": true,
        "detail": "userauths.models",
        "documentation": {}
    },
    {
        "label": "Profile",
        "importPath": "userauths.models",
        "description": "userauths.models",
        "isExtraImport": true,
        "detail": "userauths.models",
        "documentation": {}
    },
    {
        "label": "Profile",
        "importPath": "userauths.models",
        "description": "userauths.models",
        "isExtraImport": true,
        "detail": "userauths.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "userauths.models",
        "description": "userauths.models",
        "isExtraImport": true,
        "detail": "userauths.models",
        "documentation": {}
    },
    {
        "label": "CancelledOrder",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Notification",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "CartOrderItem",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "CouponUsers",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Cart",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Tag",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "DeliveryCouriers",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "CartOrder",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Gallery",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Brand",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "ProductFaq",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Review",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Specification",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Coupon",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Color",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Size",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Address",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Wishlist",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "CartOrderItem",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "CouponUsers",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Notification",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Tag",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Cart",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "DeliveryCouriers",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "CartOrder",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Gallery",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Brand",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "ProductFaq",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Review",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Specification",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Coupon",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Color",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Size",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Address",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Wishlist",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Vendor",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "CancelledOrder",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Cart",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "CartOrderItem",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Notification",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "CouponUsers",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Tag",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "DeliveryCouriers",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "CartOrder",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Gallery",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Brand",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "ProductFaq",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Review",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Specification",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Coupon",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Color",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Size",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Address",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Wishlist",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Vendor",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Gallery",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "CancelledOrder",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "CartOrderItem",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "CouponUsers",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Cart",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Notification",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Tag",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "DeliveryCouriers",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "CartOrder",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Gallery",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Brand",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "ProductFaq",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Review",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Specification",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Coupon",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Color",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Size",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Address",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Wishlist",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "CancelledOrder",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Notification",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "CartOrderItem",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "CouponUsers",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Cart",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Tag",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "DeliveryCouriers",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "CartOrder",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Gallery",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Brand",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "ProductFaq",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Review",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Specification",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Coupon",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Color",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Size",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Address",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Wishlist",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Vendor",
        "importPath": "vendor.models",
        "description": "vendor.models",
        "isExtraImport": true,
        "detail": "vendor.models",
        "documentation": {}
    },
    {
        "label": "Vendor",
        "importPath": "vendor.models",
        "description": "vendor.models",
        "isExtraImport": true,
        "detail": "vendor.models",
        "documentation": {}
    },
    {
        "label": "Vendor",
        "importPath": "vendor.models",
        "description": "vendor.models",
        "isExtraImport": true,
        "detail": "vendor.models",
        "documentation": {}
    },
    {
        "label": "Vendor",
        "importPath": "vendor.models",
        "description": "vendor.models",
        "isExtraImport": true,
        "detail": "vendor.models",
        "documentation": {}
    },
    {
        "label": "Vendor",
        "importPath": "vendor.models",
        "description": "vendor.models",
        "isExtraImport": true,
        "detail": "vendor.models",
        "documentation": {}
    },
    {
        "label": "Decimal",
        "importPath": "decimal",
        "description": "decimal",
        "isExtraImport": true,
        "detail": "decimal",
        "documentation": {}
    },
    {
        "label": "Decimal",
        "importPath": "decimal",
        "description": "decimal",
        "isExtraImport": true,
        "detail": "decimal",
        "documentation": {}
    },
    {
        "label": "Decimal",
        "importPath": "decimal",
        "description": "decimal",
        "isExtraImport": true,
        "detail": "decimal",
        "documentation": {}
    },
    {
        "label": "stripe",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "stripe",
        "description": "stripe",
        "detail": "stripe",
        "documentation": {}
    },
    {
        "label": "requests",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "requests",
        "description": "requests",
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "django.core.validators",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.core.validators",
        "description": "django.core.validators",
        "detail": "django.core.validators",
        "documentation": {}
    },
    {
        "label": "MinValueValidator",
        "importPath": "django.core.validators",
        "description": "django.core.validators",
        "isExtraImport": true,
        "detail": "django.core.validators",
        "documentation": {}
    },
    {
        "label": "MaxValueValidator",
        "importPath": "django.core.validators",
        "description": "django.core.validators",
        "isExtraImport": true,
        "detail": "django.core.validators",
        "documentation": {}
    },
    {
        "label": "MinValueValidator",
        "importPath": "django.core.validators",
        "description": "django.core.validators",
        "isExtraImport": true,
        "detail": "django.core.validators",
        "documentation": {}
    },
    {
        "label": "MaxValueValidator",
        "importPath": "django.core.validators",
        "description": "django.core.validators",
        "isExtraImport": true,
        "detail": "django.core.validators",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "tinymce.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "tinymce.models",
        "description": "tinymce.models",
        "detail": "tinymce.models",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "escape",
        "importPath": "django.template.defaultfilters",
        "description": "django.template.defaultfilters",
        "isExtraImport": true,
        "detail": "django.template.defaultfilters",
        "documentation": {}
    },
    {
        "label": "receiver",
        "importPath": "django.dispatch",
        "description": "django.dispatch",
        "isExtraImport": true,
        "detail": "django.dispatch",
        "documentation": {}
    },
    {
        "label": "receiver",
        "importPath": "django.dispatch",
        "description": "django.dispatch",
        "isExtraImport": true,
        "detail": "django.dispatch",
        "documentation": {}
    },
    {
        "label": "post_save",
        "importPath": "django.db.models.signals",
        "description": "django.db.models.signals",
        "isExtraImport": true,
        "detail": "django.db.models.signals",
        "documentation": {}
    },
    {
        "label": "post_save",
        "importPath": "django.db.models.signals",
        "description": "django.db.models.signals",
        "isExtraImport": true,
        "detail": "django.db.models.signals",
        "documentation": {}
    },
    {
        "label": "TokenObtainPairSerializer",
        "importPath": "rest_framework_simplejwt.serializers",
        "description": "rest_framework_simplejwt.serializers",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.serializers",
        "documentation": {}
    },
    {
        "label": "TokenObtainPairSerializer",
        "importPath": "rest_framework_simplejwt.serializers",
        "description": "rest_framework_simplejwt.serializers",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.serializers",
        "documentation": {}
    },
    {
        "label": "TokenObtainPairSerializer",
        "importPath": "rest_framework_simplejwt.serializers",
        "description": "rest_framework_simplejwt.serializers",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.serializers",
        "documentation": {}
    },
    {
        "label": "UniqueValidator",
        "importPath": "rest_framework.validators",
        "description": "rest_framework.validators",
        "isExtraImport": true,
        "detail": "rest_framework.validators",
        "documentation": {}
    },
    {
        "label": "UniqueValidator",
        "importPath": "rest_framework.validators",
        "description": "rest_framework.validators",
        "isExtraImport": true,
        "detail": "rest_framework.validators",
        "documentation": {}
    },
    {
        "label": "EmailMultiAlternatives",
        "importPath": "django.core.mail",
        "description": "django.core.mail",
        "isExtraImport": true,
        "detail": "django.core.mail",
        "documentation": {}
    },
    {
        "label": "send_mail",
        "importPath": "django.core.mail",
        "description": "django.core.mail",
        "isExtraImport": true,
        "detail": "django.core.mail",
        "documentation": {}
    },
    {
        "label": "EmailMultiAlternatives",
        "importPath": "django.core.mail",
        "description": "django.core.mail",
        "isExtraImport": true,
        "detail": "django.core.mail",
        "documentation": {}
    },
    {
        "label": "render_to_string",
        "importPath": "django.template.loader",
        "description": "django.template.loader",
        "isExtraImport": true,
        "detail": "django.template.loader",
        "documentation": {}
    },
    {
        "label": "render_to_string",
        "importPath": "django.template.loader",
        "description": "django.template.loader",
        "isExtraImport": true,
        "detail": "django.template.loader",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "uuid",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "uuid",
        "description": "uuid",
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "validate_password",
        "importPath": "django.contrib.auth.password_validation",
        "description": "django.contrib.auth.password_validation",
        "isExtraImport": true,
        "detail": "django.contrib.auth.password_validation",
        "documentation": {}
    },
    {
        "label": "default_token_generator",
        "importPath": "django.contrib.auth.tokens",
        "description": "django.contrib.auth.tokens",
        "isExtraImport": true,
        "detail": "django.contrib.auth.tokens",
        "documentation": {}
    },
    {
        "label": "urlsafe_base64_encode",
        "importPath": "django.utils.http",
        "description": "django.utils.http",
        "isExtraImport": true,
        "detail": "django.utils.http",
        "documentation": {}
    },
    {
        "label": "force_bytes",
        "importPath": "django.utils.encoding",
        "description": "django.utils.encoding",
        "isExtraImport": true,
        "detail": "django.utils.encoding",
        "documentation": {}
    },
    {
        "label": "RefreshToken",
        "importPath": "rest_framework_simplejwt.tokens",
        "description": "rest_framework_simplejwt.tokens",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.tokens",
        "documentation": {}
    },
    {
        "label": "random",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "random",
        "description": "random",
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "ExtractMonth",
        "importPath": "django.db.models.functions",
        "description": "django.db.models.functions",
        "isExtraImport": true,
        "detail": "django.db.models.functions",
        "documentation": {}
    },
    {
        "label": "MultiPartParser",
        "importPath": "rest_framework.parsers",
        "description": "rest_framework.parsers",
        "isExtraImport": true,
        "detail": "rest_framework.parsers",
        "documentation": {}
    },
    {
        "label": "FormParser",
        "importPath": "rest_framework.parsers",
        "description": "rest_framework.parsers",
        "isExtraImport": true,
        "detail": "rest_framework.parsers",
        "documentation": {}
    },
    {
        "label": "calendar",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "calendar",
        "description": "calendar",
        "detail": "calendar",
        "documentation": {}
    },
    {
        "label": "urllib",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "urllib",
        "description": "urllib",
        "detail": "urllib",
        "documentation": {}
    },
    {
        "label": "ctypes",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "ctypes",
        "description": "ctypes",
        "detail": "ctypes",
        "documentation": {}
    },
    {
        "label": "platform",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "platform",
        "description": "platform",
        "detail": "platform",
        "documentation": {}
    },
    {
        "label": "ElementTree",
        "importPath": "xml.etree",
        "description": "xml.etree",
        "isExtraImport": true,
        "detail": "xml.etree",
        "documentation": {}
    },
    {
        "label": "stringify",
        "importPath": "flatted",
        "description": "flatted",
        "isExtraImport": true,
        "detail": "flatted",
        "documentation": {}
    },
    {
        "label": "parse",
        "importPath": "flatted",
        "description": "flatted",
        "isExtraImport": true,
        "detail": "flatted",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "backend..venv.Scripts.jp",
        "description": "backend..venv.Scripts.jp",
        "peekOfCode": "def main():\n    parser = argparse.ArgumentParser()\n    parser.add_argument('expression')\n    parser.add_argument('-f', '--filename',\n                        help=('The filename containing the input data.  '\n                              'If a filename is not given then data is '\n                              'read from stdin.'))\n    parser.add_argument('--ast', action='store_true',\n                        help=('Pretty print the AST, do not search the data.'))\n    args = parser.parse_args()",
        "detail": "backend..venv.Scripts.jp",
        "documentation": {}
    },
    {
        "label": "cmd_doc",
        "kind": 5,
        "importPath": "backend..venv.Scripts.runxlrd",
        "description": "backend..venv.Scripts.runxlrd",
        "peekOfCode": "cmd_doc = \"\"\"\nCommands:\n2rows           Print the contents of first and last row in each sheet\n3rows           Print the contents of first, second and last row in each sheet\nbench           Same as \"show\", but doesn't print -- for profiling\nbiff_count[1]   Print a count of each type of BIFF record in the file\nbiff_dump[1]    Print a dump (char and hex) of the BIFF records in the file\nfonts           hdr + print a dump of all font objects\nhdr             Mini-overview of file (no per-sheet information)\nhotshot         Do a hotshot profile run e.g. ... -f1 hotshot bench bigfile*.xls",
        "detail": "backend..venv.Scripts.runxlrd",
        "documentation": {}
    },
    {
        "label": "options",
        "kind": 5,
        "importPath": "backend..venv.Scripts.runxlrd",
        "description": "backend..venv.Scripts.runxlrd",
        "peekOfCode": "options = None\nif __name__ == \"__main__\":\n    import xlrd\n    import sys\n    import time\n    import glob\n    import traceback\n    import gc\n    from xlrd.timemachine import xrange, REPR\n    class LogHandler(object):",
        "detail": "backend..venv.Scripts.runxlrd",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.addon.migrations.0001_initial",
        "description": "backend.addon.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Settings',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('view_more', models.CharField(default='View All', max_length=10)),",
        "detail": "backend.addon.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.addon.migrations.0002_rename_settings_configsettings",
        "description": "backend.addon.migrations.0002_rename_settings_configsettings",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('addon', '0001_initial'),\n    ]\n    operations = [\n        migrations.RenameModel(\n            old_name='Settings',\n            new_name='ConfigSettings',\n        ),\n    ]",
        "detail": "backend.addon.migrations.0002_rename_settings_configsettings",
        "documentation": {}
    },
    {
        "label": "TaxAdmin",
        "kind": 6,
        "importPath": "backend.addon.admin",
        "description": "backend.addon.admin",
        "peekOfCode": "class TaxAdmin(ImportExportModelAdmin):\n    list_editable = [ 'rate', 'active']\n    list_display = ['country', 'rate', 'active']\nadmin.site.register(Tax, TaxAdmin)\nadmin.site.register(ConfigSettings)\n# Register your models here.",
        "detail": "backend.addon.admin",
        "documentation": {}
    },
    {
        "label": "AddonConfig",
        "kind": 6,
        "importPath": "backend.addon.apps",
        "description": "backend.addon.apps",
        "peekOfCode": "class AddonConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'addon'",
        "detail": "backend.addon.apps",
        "documentation": {}
    },
    {
        "label": "ConfigSettings",
        "kind": 6,
        "importPath": "backend.addon.models",
        "description": "backend.addon.models",
        "peekOfCode": "class ConfigSettings(models.Model):\n    view_more = models.CharField(default=\"Alle Anzeigen\", max_length=10)\n    currency_sign = models.CharField(default=\"€\", max_length=10)\n    currency_abbreviation = models.CharField(default=\"EUR\", max_length=10)\n    service_fee_percentage = models.IntegerField(\n        default=5, help_text=\"NOTE: Numbers added here are in percentage (%)ve.g 4%\"\n    )\n    service_fee_flat_rate = models.DecimalField(\n        default=0.7,\n        max_digits=12,",
        "detail": "backend.addon.models",
        "documentation": {}
    },
    {
        "label": "Tax",
        "kind": 6,
        "importPath": "backend.addon.models",
        "description": "backend.addon.models",
        "peekOfCode": "class Tax(models.Model):\n    country = models.CharField(max_length=500)\n    rate = models.IntegerField(\n        default=5, help_text=\"Numbers added here are in percentage (5 = 5%)\"\n    )\n    active = models.BooleanField(default=True)\n    date = models.DateTimeField(auto_now_add=True)\n    class Meta:\n        verbose_name_plural = \"Steuersatz\"\n    def __str__(self):",
        "detail": "backend.addon.models",
        "documentation": {}
    },
    {
        "label": "SERVICE_FEE_CHARGE_TYPE",
        "kind": 5,
        "importPath": "backend.addon.models",
        "description": "backend.addon.models",
        "peekOfCode": "SERVICE_FEE_CHARGE_TYPE = (\n    (\"percentage\", \"Percentage\"),\n    (\"flat_rate\", \"Flat Rate\"),\n)\nAFFILIATE_COMMISSION_TYPE = (\n    (\"percentage\", \"Percentage\"),\n    (\"flat_rate\", \"Flat Rate\"),\n)\nclass ConfigSettings(models.Model):\n    view_more = models.CharField(default=\"Alle Anzeigen\", max_length=10)",
        "detail": "backend.addon.models",
        "documentation": {}
    },
    {
        "label": "AFFILIATE_COMMISSION_TYPE",
        "kind": 5,
        "importPath": "backend.addon.models",
        "description": "backend.addon.models",
        "peekOfCode": "AFFILIATE_COMMISSION_TYPE = (\n    (\"percentage\", \"Percentage\"),\n    (\"flat_rate\", \"Flat Rate\"),\n)\nclass ConfigSettings(models.Model):\n    view_more = models.CharField(default=\"Alle Anzeigen\", max_length=10)\n    currency_sign = models.CharField(default=\"€\", max_length=10)\n    currency_abbreviation = models.CharField(default=\"EUR\", max_length=10)\n    service_fee_percentage = models.IntegerField(\n        default=5, help_text=\"NOTE: Numbers added here are in percentage (%)ve.g 4%\"",
        "detail": "backend.addon.models",
        "documentation": {}
    },
    {
        "label": "ApiConfig",
        "kind": 6,
        "importPath": "backend.api.apps",
        "description": "backend.api.apps",
        "peekOfCode": "class ApiConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'api'",
        "detail": "backend.api.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "backend.api.urls",
        "description": "backend.api.urls",
        "peekOfCode": "urlpatterns = [\n    path('', userauths_views.getRoutes),\n    # Userauths API Endpoints\n    path('user/token/', userauths_views.MyTokenObtainPairView.as_view(), name='token_obtain_pair'),\n    path('user/token/refresh/', TokenRefreshView.as_view(), name='token_refresh'),\n    path('user/register/', userauths_views.RegisterView.as_view(), name='auth_register'),\n    path('user/profile/<user_id>/', userauths_views.ProfileView.as_view(), name='user_profile'),\n    path('user/test/', userauths_views.testEndPoint, name='auth_register'),\n    path('user/password-reset/<email>/', userauths_views.PasswordEmailVerify.as_view(), name='password_reset'),\n    path('user/password-change/', userauths_views.PasswordChangeView.as_view(), name='password_reset'),",
        "detail": "backend.api.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "backend.backend.asgi",
        "description": "backend.backend.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "backend.backend.asgi",
        "documentation": {}
    },
    {
        "label": "env",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "env = Env()\nenv.read_env()\n# Build paths inside the project like this: BASE_DIR / 'subdir'.\nBASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = \"django-insecure-b*tuoe%^o+=^35$0fufrm=oamh^(o0tabn39(7ni12(i-oup+4\"\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = \"django-insecure-b*tuoe%^o+=^35$0fufrm=oamh^(o0tabn39(7ni12(i-oup+4\"\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = [\"website-domain.com\", \"127.0.0.1\"]\nCSRF_TRUSTED_ORIGINS = [\"https://website-domain.com\", \"https://127.0.0.1\"]\nSECURE_CROSS_ORIGIN_OPENER_POLICY = \"same-origin-allow-popups\"",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "SECRET_KEY = \"django-insecure-b*tuoe%^o+=^35$0fufrm=oamh^(o0tabn39(7ni12(i-oup+4\"\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = [\"website-domain.com\", \"127.0.0.1\"]\nCSRF_TRUSTED_ORIGINS = [\"https://website-domain.com\", \"https://127.0.0.1\"]\nSECURE_CROSS_ORIGIN_OPENER_POLICY = \"same-origin-allow-popups\"\n# Application definition\nINSTALLED_APPS = [\n    \"jazzmin\",\n    \"drf_yasg\",",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = [\"website-domain.com\", \"127.0.0.1\"]\nCSRF_TRUSTED_ORIGINS = [\"https://website-domain.com\", \"https://127.0.0.1\"]\nSECURE_CROSS_ORIGIN_OPENER_POLICY = \"same-origin-allow-popups\"\n# Application definition\nINSTALLED_APPS = [\n    \"jazzmin\",\n    \"drf_yasg\",\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "ALLOWED_HOSTS = [\"website-domain.com\", \"127.0.0.1\"]\nCSRF_TRUSTED_ORIGINS = [\"https://website-domain.com\", \"https://127.0.0.1\"]\nSECURE_CROSS_ORIGIN_OPENER_POLICY = \"same-origin-allow-popups\"\n# Application definition\nINSTALLED_APPS = [\n    \"jazzmin\",\n    \"drf_yasg\",\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "CSRF_TRUSTED_ORIGINS",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "CSRF_TRUSTED_ORIGINS = [\"https://website-domain.com\", \"https://127.0.0.1\"]\nSECURE_CROSS_ORIGIN_OPENER_POLICY = \"same-origin-allow-popups\"\n# Application definition\nINSTALLED_APPS = [\n    \"jazzmin\",\n    \"drf_yasg\",\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "SECURE_CROSS_ORIGIN_OPENER_POLICY",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "SECURE_CROSS_ORIGIN_OPENER_POLICY = \"same-origin-allow-popups\"\n# Application definition\nINSTALLED_APPS = [\n    \"jazzmin\",\n    \"drf_yasg\",\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    \"jazzmin\",\n    \"drf_yasg\",\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    # Custom Apps",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "MIDDLEWARE = [\n    \"django.middleware.security.SecurityMiddleware\",\n    # Add Cors Middle ware here\n    \"corsheaders.middleware.CorsMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "ROOT_URLCONF = \"backend.urls\"\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [BASE_DIR / \"templates\"],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [BASE_DIR / \"templates\"],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",\n                \"django.contrib.auth.context_processors.auth\",",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "WSGI_APPLICATION = \"backend.wsgi.application\"\n# Database\n# https://docs.djangoproject.com/en/4.2/ref/settings/#databases\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": BASE_DIR / \"db.sqlite3\",\n    }\n}\n# db_from_env = dj_database_url.config(conn_max_age=600)",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "DATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": BASE_DIR / \"db.sqlite3\",\n    }\n}\n# db_from_env = dj_database_url.config(conn_max_age=600)\n# DATABASES[\"default\"].update(db_from_env)\n# Password validation\n# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\",\n    },",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "LANGUAGE_CODE = \"en-us\"\nTIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = \"static/\"\nSTATICFILES_DIRS = [BASE_DIR / \"static\"]\nSTATIC_ROOT = BASE_DIR / \"staticfiles\"\nMEDIA_URL = \"media/\"",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "TIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = \"static/\"\nSTATICFILES_DIRS = [BASE_DIR / \"static\"]\nSTATIC_ROOT = BASE_DIR / \"staticfiles\"\nMEDIA_URL = \"media/\"\nMEDIA_ROOT = BASE_DIR / \"media\"",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = \"static/\"\nSTATICFILES_DIRS = [BASE_DIR / \"static\"]\nSTATIC_ROOT = BASE_DIR / \"staticfiles\"\nMEDIA_URL = \"media/\"\nMEDIA_ROOT = BASE_DIR / \"media\"\n# AWS Configs",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = \"static/\"\nSTATICFILES_DIRS = [BASE_DIR / \"static\"]\nSTATIC_ROOT = BASE_DIR / \"staticfiles\"\nMEDIA_URL = \"media/\"\nMEDIA_ROOT = BASE_DIR / \"media\"\n# AWS Configs\n# AWS_ACCESS_KEY_ID = env(\"AWS_ACCESS_KEY_ID\")",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "STATIC_URL = \"static/\"\nSTATICFILES_DIRS = [BASE_DIR / \"static\"]\nSTATIC_ROOT = BASE_DIR / \"staticfiles\"\nMEDIA_URL = \"media/\"\nMEDIA_ROOT = BASE_DIR / \"media\"\n# AWS Configs\n# AWS_ACCESS_KEY_ID = env(\"AWS_ACCESS_KEY_ID\")\n# AWS_SECRET_ACCESS_KEY = env(\"AWS_SECRET_ACCESS_KEY\")\n# AWS_STORAGE_BUCKET_NAME = env(\"AWS_STORAGE_BUCKET_NAME\")\n# AWS_S3_FILE_OVERWRITE = False",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "STATICFILES_DIRS = [BASE_DIR / \"static\"]\nSTATIC_ROOT = BASE_DIR / \"staticfiles\"\nMEDIA_URL = \"media/\"\nMEDIA_ROOT = BASE_DIR / \"media\"\n# AWS Configs\n# AWS_ACCESS_KEY_ID = env(\"AWS_ACCESS_KEY_ID\")\n# AWS_SECRET_ACCESS_KEY = env(\"AWS_SECRET_ACCESS_KEY\")\n# AWS_STORAGE_BUCKET_NAME = env(\"AWS_STORAGE_BUCKET_NAME\")\n# AWS_S3_FILE_OVERWRITE = False\n# AWS_DEFAULT_ACL = 'public-read'",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "STATIC_ROOT = BASE_DIR / \"staticfiles\"\nMEDIA_URL = \"media/\"\nMEDIA_ROOT = BASE_DIR / \"media\"\n# AWS Configs\n# AWS_ACCESS_KEY_ID = env(\"AWS_ACCESS_KEY_ID\")\n# AWS_SECRET_ACCESS_KEY = env(\"AWS_SECRET_ACCESS_KEY\")\n# AWS_STORAGE_BUCKET_NAME = env(\"AWS_STORAGE_BUCKET_NAME\")\n# AWS_S3_FILE_OVERWRITE = False\n# AWS_DEFAULT_ACL = 'public-read'\n# DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "MEDIA_URL = \"media/\"\nMEDIA_ROOT = BASE_DIR / \"media\"\n# AWS Configs\n# AWS_ACCESS_KEY_ID = env(\"AWS_ACCESS_KEY_ID\")\n# AWS_SECRET_ACCESS_KEY = env(\"AWS_SECRET_ACCESS_KEY\")\n# AWS_STORAGE_BUCKET_NAME = env(\"AWS_STORAGE_BUCKET_NAME\")\n# AWS_S3_FILE_OVERWRITE = False\n# AWS_DEFAULT_ACL = 'public-read'\n# DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'\n# STATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "MEDIA_ROOT = BASE_DIR / \"media\"\n# AWS Configs\n# AWS_ACCESS_KEY_ID = env(\"AWS_ACCESS_KEY_ID\")\n# AWS_SECRET_ACCESS_KEY = env(\"AWS_SECRET_ACCESS_KEY\")\n# AWS_STORAGE_BUCKET_NAME = env(\"AWS_STORAGE_BUCKET_NAME\")\n# AWS_S3_FILE_OVERWRITE = False\n# AWS_DEFAULT_ACL = 'public-read'\n# DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'\n# STATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'\n# AWS_S3_OBJECT_PARAMETERS = {'CacheControl': 'max-age=86400'}",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = \"userauths.User\"\n# Site URL\nSITE_URL = env(\"SITE_URL\")\n# Stripe API Keys\nSTRIPE_PUBLIC_KEY = env(\"STRIPE_PUBLIC_KEY\")\nSTRIPE_SECRET_KEY = env(\"STRIPE_SECRET_KEY\")\n# Paypal API Keys\nPAYPAL_CLIENT_ID = env(\"PAYPAL_CLIENT_ID\")\nPAYPAL_SECRET_ID = env(\"PAYPAL_SECRET_ID\")",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "AUTH_USER_MODEL = \"userauths.User\"\n# Site URL\nSITE_URL = env(\"SITE_URL\")\n# Stripe API Keys\nSTRIPE_PUBLIC_KEY = env(\"STRIPE_PUBLIC_KEY\")\nSTRIPE_SECRET_KEY = env(\"STRIPE_SECRET_KEY\")\n# Paypal API Keys\nPAYPAL_CLIENT_ID = env(\"PAYPAL_CLIENT_ID\")\nPAYPAL_SECRET_ID = env(\"PAYPAL_SECRET_ID\")\nREST_FRAMEWORK = {",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "SITE_URL",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "SITE_URL = env(\"SITE_URL\")\n# Stripe API Keys\nSTRIPE_PUBLIC_KEY = env(\"STRIPE_PUBLIC_KEY\")\nSTRIPE_SECRET_KEY = env(\"STRIPE_SECRET_KEY\")\n# Paypal API Keys\nPAYPAL_CLIENT_ID = env(\"PAYPAL_CLIENT_ID\")\nPAYPAL_SECRET_ID = env(\"PAYPAL_SECRET_ID\")\nREST_FRAMEWORK = {\n    \"DEFAULT_AUTHENTICATION_CLASSES\": (\n        \"rest_framework_simplejwt.authentication.JWTAuthentication\",",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "STRIPE_PUBLIC_KEY",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "STRIPE_PUBLIC_KEY = env(\"STRIPE_PUBLIC_KEY\")\nSTRIPE_SECRET_KEY = env(\"STRIPE_SECRET_KEY\")\n# Paypal API Keys\nPAYPAL_CLIENT_ID = env(\"PAYPAL_CLIENT_ID\")\nPAYPAL_SECRET_ID = env(\"PAYPAL_SECRET_ID\")\nREST_FRAMEWORK = {\n    \"DEFAULT_AUTHENTICATION_CLASSES\": (\n        \"rest_framework_simplejwt.authentication.JWTAuthentication\",\n    )\n}",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "STRIPE_SECRET_KEY",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "STRIPE_SECRET_KEY = env(\"STRIPE_SECRET_KEY\")\n# Paypal API Keys\nPAYPAL_CLIENT_ID = env(\"PAYPAL_CLIENT_ID\")\nPAYPAL_SECRET_ID = env(\"PAYPAL_SECRET_ID\")\nREST_FRAMEWORK = {\n    \"DEFAULT_AUTHENTICATION_CLASSES\": (\n        \"rest_framework_simplejwt.authentication.JWTAuthentication\",\n    )\n}\nANYMAIL = {",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "PAYPAL_CLIENT_ID",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "PAYPAL_CLIENT_ID = env(\"PAYPAL_CLIENT_ID\")\nPAYPAL_SECRET_ID = env(\"PAYPAL_SECRET_ID\")\nREST_FRAMEWORK = {\n    \"DEFAULT_AUTHENTICATION_CLASSES\": (\n        \"rest_framework_simplejwt.authentication.JWTAuthentication\",\n    )\n}\nANYMAIL = {\n    \"MAILGUN_API_KEY\": os.environ.get(\"MAILGUN_API_KEY\"),\n    \"MAILGUN_SENDER_DOMAIN\": os.environ.get(\"MAILGUN_SENDER_DOMAIN\"),",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "PAYPAL_SECRET_ID",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "PAYPAL_SECRET_ID = env(\"PAYPAL_SECRET_ID\")\nREST_FRAMEWORK = {\n    \"DEFAULT_AUTHENTICATION_CLASSES\": (\n        \"rest_framework_simplejwt.authentication.JWTAuthentication\",\n    )\n}\nANYMAIL = {\n    \"MAILGUN_API_KEY\": os.environ.get(\"MAILGUN_API_KEY\"),\n    \"MAILGUN_SENDER_DOMAIN\": os.environ.get(\"MAILGUN_SENDER_DOMAIN\"),\n}",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n    \"DEFAULT_AUTHENTICATION_CLASSES\": (\n        \"rest_framework_simplejwt.authentication.JWTAuthentication\",\n    )\n}\nANYMAIL = {\n    \"MAILGUN_API_KEY\": os.environ.get(\"MAILGUN_API_KEY\"),\n    \"MAILGUN_SENDER_DOMAIN\": os.environ.get(\"MAILGUN_SENDER_DOMAIN\"),\n}\nFROM_EMAIL = \" youremail@gmail.com\"",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "ANYMAIL",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "ANYMAIL = {\n    \"MAILGUN_API_KEY\": os.environ.get(\"MAILGUN_API_KEY\"),\n    \"MAILGUN_SENDER_DOMAIN\": os.environ.get(\"MAILGUN_SENDER_DOMAIN\"),\n}\nFROM_EMAIL = \" youremail@gmail.com\"\nEMAIL_BACKEND = \"anymail.backends.mailgun.EmailBackend\"\nDEFAULT_FROM_EMAIL = \" youremail@gmail.com\"\nSERVER_EMAIL = \" youremail@gmail.com\"\nCORS_ALLOW_ALL_ORIGINS = True\nSIMPLE_JWT = {",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "FROM_EMAIL",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "FROM_EMAIL = \" youremail@gmail.com\"\nEMAIL_BACKEND = \"anymail.backends.mailgun.EmailBackend\"\nDEFAULT_FROM_EMAIL = \" youremail@gmail.com\"\nSERVER_EMAIL = \" youremail@gmail.com\"\nCORS_ALLOW_ALL_ORIGINS = True\nSIMPLE_JWT = {\n    \"ACCESS_TOKEN_LIFETIME\": timedelta(minutes=5),\n    \"REFRESH_TOKEN_LIFETIME\": timedelta(days=50),\n    \"ROTATE_REFRESH_TOKENS\": True,\n    \"BLACKLIST_AFTER_ROTATION\": True,",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_BACKEND",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "EMAIL_BACKEND = \"anymail.backends.mailgun.EmailBackend\"\nDEFAULT_FROM_EMAIL = \" youremail@gmail.com\"\nSERVER_EMAIL = \" youremail@gmail.com\"\nCORS_ALLOW_ALL_ORIGINS = True\nSIMPLE_JWT = {\n    \"ACCESS_TOKEN_LIFETIME\": timedelta(minutes=5),\n    \"REFRESH_TOKEN_LIFETIME\": timedelta(days=50),\n    \"ROTATE_REFRESH_TOKENS\": True,\n    \"BLACKLIST_AFTER_ROTATION\": True,\n    \"UPDATE_LAST_LOGIN\": False,",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_FROM_EMAIL",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "DEFAULT_FROM_EMAIL = \" youremail@gmail.com\"\nSERVER_EMAIL = \" youremail@gmail.com\"\nCORS_ALLOW_ALL_ORIGINS = True\nSIMPLE_JWT = {\n    \"ACCESS_TOKEN_LIFETIME\": timedelta(minutes=5),\n    \"REFRESH_TOKEN_LIFETIME\": timedelta(days=50),\n    \"ROTATE_REFRESH_TOKENS\": True,\n    \"BLACKLIST_AFTER_ROTATION\": True,\n    \"UPDATE_LAST_LOGIN\": False,\n    \"ALGORITHM\": \"HS256\",",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "SERVER_EMAIL",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "SERVER_EMAIL = \" youremail@gmail.com\"\nCORS_ALLOW_ALL_ORIGINS = True\nSIMPLE_JWT = {\n    \"ACCESS_TOKEN_LIFETIME\": timedelta(minutes=5),\n    \"REFRESH_TOKEN_LIFETIME\": timedelta(days=50),\n    \"ROTATE_REFRESH_TOKENS\": True,\n    \"BLACKLIST_AFTER_ROTATION\": True,\n    \"UPDATE_LAST_LOGIN\": False,\n    \"ALGORITHM\": \"HS256\",\n    \"VERIFYING_KEY\": None,",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ALLOW_ALL_ORIGINS",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "CORS_ALLOW_ALL_ORIGINS = True\nSIMPLE_JWT = {\n    \"ACCESS_TOKEN_LIFETIME\": timedelta(minutes=5),\n    \"REFRESH_TOKEN_LIFETIME\": timedelta(days=50),\n    \"ROTATE_REFRESH_TOKENS\": True,\n    \"BLACKLIST_AFTER_ROTATION\": True,\n    \"UPDATE_LAST_LOGIN\": False,\n    \"ALGORITHM\": \"HS256\",\n    \"VERIFYING_KEY\": None,\n    \"AUDIENCE\": None,",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "SIMPLE_JWT",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "SIMPLE_JWT = {\n    \"ACCESS_TOKEN_LIFETIME\": timedelta(minutes=5),\n    \"REFRESH_TOKEN_LIFETIME\": timedelta(days=50),\n    \"ROTATE_REFRESH_TOKENS\": True,\n    \"BLACKLIST_AFTER_ROTATION\": True,\n    \"UPDATE_LAST_LOGIN\": False,\n    \"ALGORITHM\": \"HS256\",\n    \"VERIFYING_KEY\": None,\n    \"AUDIENCE\": None,\n    \"ISSUER\": None,",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "JAZZMIN_SETTINGS",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "JAZZMIN_SETTINGS = {\n    \"site_title\": \"Zeynel Software\",\n    \"site_header\": \"Mina Service\",\n    \"site_brand\": \"Speed.Codes \",\n    \"site_icon\": \"images/favicon.ico\",\n    \"site_logo\": \"images/logos/logo.jpg\",\n    \"welcome_sign\": \"Speed.Codes Admin\",\n    \"copyright\": \"Developed by Speed.Codes under Mina Order\",\n    \"user_avatar\": \"images/photos/logo.jpg\",\n    \"topmenu_links\": [",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "JAZZMIN_UI_TWEAKS",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "JAZZMIN_UI_TWEAKS = {\n    \"navbar_small_text\": False,\n    \"footer_small_text\": False,\n    \"body_small_text\": True,\n    \"brand_small_text\": False,\n    \"brand_colour\": \"navbar-green\",\n    \"accent\": \"accent-green\",\n    \"navbar\": \"navbar-white navbar-light\",\n    \"no_navbar_border\": False,\n    \"navbar_fixed\": False,",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "schema_view",
        "kind": 5,
        "importPath": "backend.backend.urls",
        "description": "backend.backend.urls",
        "peekOfCode": "schema_view = get_schema_view(\n    openapi.Info(\n        title=\"E-Mina Backend APIs\",\n        default_version=\"v1\",\n        description=\"This is the API documentation for e-commerce project APIs\",\n        terms_of_service=\"https://www.google.com/policies/terms/\",\n        contact=openapi.Contact(email=\"info@speed.codes\"),\n        license=openapi.License(name=\"BSD License\"),\n    ),\n    public=True,",
        "detail": "backend.backend.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "backend.backend.urls",
        "description": "backend.backend.urls",
        "peekOfCode": "urlpatterns = [\n    path(\n        \"swagger<format>/\", schema_view.without_ui(cache_timeout=0), name=\"schema-json\"\n    ),\n    path(\"\", schema_view.with_ui(\"swagger\", cache_timeout=0), name=\"schema-swagger-ui\"),\n    path(\"redoc/\", schema_view.with_ui(\"redoc\", cache_timeout=0), name=\"schema-redoc\"),\n    # API V1 Urls\n    path(\"api/v1/\", include(\"api.urls\")),\n    # Admin URL\n    path(\"zeynel/\", admin.site.urls),",
        "detail": "backend.backend.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "backend.backend.wsgi",
        "description": "backend.backend.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "backend.backend.wsgi",
        "documentation": {}
    },
    {
        "label": "CustomerConfig",
        "kind": 6,
        "importPath": "backend.customer.apps",
        "description": "backend.customer.apps",
        "peekOfCode": "class CustomerConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'customer'",
        "detail": "backend.customer.apps",
        "documentation": {}
    },
    {
        "label": "OrdersAPIView",
        "kind": 6,
        "importPath": "backend.customer.views",
        "description": "backend.customer.views",
        "peekOfCode": "class OrdersAPIView(generics.ListAPIView):\n    serializer_class = CartOrderSerializer\n    permission_classes = (AllowAny,)\n    def get_queryset(self):\n        user_id = self.kwargs['user_id']\n        user = User.objects.get(id=user_id)\n        orders = CartOrder.objects.filter(buyer=user, payment_status=\"paid\")\n        return orders\nclass OrdersDetailAPIView(generics.RetrieveAPIView):\n    serializer_class = CartOrderSerializer",
        "detail": "backend.customer.views",
        "documentation": {}
    },
    {
        "label": "OrdersDetailAPIView",
        "kind": 6,
        "importPath": "backend.customer.views",
        "description": "backend.customer.views",
        "peekOfCode": "class OrdersDetailAPIView(generics.RetrieveAPIView):\n    serializer_class = CartOrderSerializer\n    permission_classes = (AllowAny,)\n    lookup_field = 'user_id'\n    def get_object(self):\n        user_id = self.kwargs['user_id']\n        order_oid = self.kwargs['order_oid']\n        user = User.objects.get(id=user_id)\n        order = CartOrder.objects.get(buyer=user, payment_status=\"paid\", oid=order_oid)\n        return order",
        "detail": "backend.customer.views",
        "documentation": {}
    },
    {
        "label": "WishlistCreateAPIView",
        "kind": 6,
        "importPath": "backend.customer.views",
        "description": "backend.customer.views",
        "peekOfCode": "class WishlistCreateAPIView(generics.CreateAPIView):\n    serializer_class = WishlistSerializer\n    permission_classes = (AllowAny, )\n    def create(self, request):\n        payload = request.data \n        product_id = payload['product_id']\n        user_id = payload['user_id']\n        product = Product.objects.get(id=product_id)\n        user = User.objects.get(id=user_id)\n        wishlist = Wishlist.objects.filter(product=product,user=user)",
        "detail": "backend.customer.views",
        "documentation": {}
    },
    {
        "label": "WishlistAPIView",
        "kind": 6,
        "importPath": "backend.customer.views",
        "description": "backend.customer.views",
        "peekOfCode": "class WishlistAPIView(generics.ListAPIView):\n    serializer_class = WishlistSerializer\n    permission_classes = (AllowAny, )\n    def get_queryset(self):\n        user_id = self.kwargs['user_id']\n        user = User.objects.get(id=user_id)\n        wishlist = Wishlist.objects.filter(user=user,)\n        return wishlist\nclass CustomerNotificationView(generics.ListAPIView):\n    serializer_class = NotificationSerializer",
        "detail": "backend.customer.views",
        "documentation": {}
    },
    {
        "label": "CustomerNotificationView",
        "kind": 6,
        "importPath": "backend.customer.views",
        "description": "backend.customer.views",
        "peekOfCode": "class CustomerNotificationView(generics.ListAPIView):\n    serializer_class = NotificationSerializer\n    permission_classes = (AllowAny, )\n    def get_queryset(self):\n        user_id = self.kwargs['user_id']\n        user = User.objects.get(id=user_id)\n        return Notification.objects.filter(user=user)\nclass CustomerUpdateView(generics.RetrieveUpdateAPIView):\n    queryset = Profile.objects.all()\n    serializer_class = ProfileSerializer",
        "detail": "backend.customer.views",
        "documentation": {}
    },
    {
        "label": "CustomerUpdateView",
        "kind": 6,
        "importPath": "backend.customer.views",
        "description": "backend.customer.views",
        "peekOfCode": "class CustomerUpdateView(generics.RetrieveUpdateAPIView):\n    queryset = Profile.objects.all()\n    serializer_class = ProfileSerializer\n    permission_classes = (AllowAny, )",
        "detail": "backend.customer.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.store.migrations.0001_initial",
        "description": "backend.store.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        ('vendor', '0001_initial'),\n        ('addon', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Brand',",
        "detail": "backend.store.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.store.migrations.0002_remove_product_user",
        "description": "backend.store.migrations.0002_remove_product_user",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('store', '0001_initial'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='product',\n            name='user',\n        ),\n    ]",
        "detail": "backend.store.migrations.0002_remove_product_user",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.store.migrations.0003_rename_color_name_color_name_color_image",
        "description": "backend.store.migrations.0003_rename_color_name_color_name_color_image",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('store', '0002_remove_product_user'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='color',\n            old_name='color_name',\n            new_name='name',\n        ),",
        "detail": "backend.store.migrations.0003_rename_color_name_color_name_color_image",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.store.migrations.0004_remove_brand_bid_remove_category_cid",
        "description": "backend.store.migrations.0004_remove_brand_bid_remove_category_cid",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('store', '0003_rename_color_name_color_name_color_image'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='brand',\n            name='bid',\n        ),\n        migrations.RemoveField(",
        "detail": "backend.store.migrations.0004_remove_brand_bid_remove_category_cid",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.store.migrations.0005_product_user",
        "description": "backend.store.migrations.0005_product_user",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        ('store', '0004_remove_brand_bid_remove_category_cid'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='product',\n            name='user',\n            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user', to=settings.AUTH_USER_MODEL),",
        "detail": "backend.store.migrations.0005_product_user",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.store.migrations.0006_remove_product_user",
        "description": "backend.store.migrations.0006_remove_product_user",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('store', '0005_product_user'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='product',\n            name='user',\n        ),\n    ]",
        "detail": "backend.store.migrations.0006_remove_product_user",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.store.migrations.0007_alter_color_image_alter_gallery_image",
        "description": "backend.store.migrations.0007_alter_color_image_alter_gallery_image",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('store', '0006_remove_product_user'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='color',\n            name='image',\n            field=models.FileField(blank=True, null=True, upload_to=userauths.models.user_directory_path),\n        ),",
        "detail": "backend.store.migrations.0007_alter_color_image_alter_gallery_image",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.store.migrations.0008_alter_brand_image_alter_category_image",
        "description": "backend.store.migrations.0008_alter_brand_image_alter_category_image",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('store', '0007_alter_color_image_alter_gallery_image'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='brand',\n            name='image',\n            field=models.ImageField(blank=True, default='brand.jpg', null=True, upload_to=userauths.models.user_directory_path),\n        ),",
        "detail": "backend.store.migrations.0008_alter_brand_image_alter_category_image",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.store.migrations.0009_cart",
        "description": "backend.store.migrations.0009_cart",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('store', '0008_alter_brand_image_alter_category_image'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Cart',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('qty', models.PositiveIntegerField(default=0)),",
        "detail": "backend.store.migrations.0009_cart",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.store.migrations.0010_cart_user",
        "description": "backend.store.migrations.0010_cart_user",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        ('store', '0009_cart'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='cart',\n            name='user',\n            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),",
        "detail": "backend.store.migrations.0010_cart_user",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.store.migrations.0011_alter_cart_price_alter_cart_qty_and_more",
        "description": "backend.store.migrations.0011_alter_cart_price_alter_cart_qty_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('store', '0010_cart_user'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='cart',\n            name='price',\n            field=models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=12, null=True),\n        ),",
        "detail": "backend.store.migrations.0011_alter_cart_price_alter_cart_qty_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.store.migrations.0012_cart_total",
        "description": "backend.store.migrations.0012_cart_total",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('store', '0011_alter_cart_price_alter_cart_qty_and_more'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='cart',\n            name='total',\n            field=models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=12, null=True),\n        ),",
        "detail": "backend.store.migrations.0012_cart_total",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.store.migrations.0013_cart_sub_total",
        "description": "backend.store.migrations.0013_cart_sub_total",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('store', '0012_cart_total'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='cart',\n            name='sub_total',\n            field=models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=12, null=True),\n        ),",
        "detail": "backend.store.migrations.0013_cart_sub_total",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.store.migrations.0014_rename_town_city_cartorder_city_and_more",
        "description": "backend.store.migrations.0014_rename_town_city_cartorder_city_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('store', '0013_cart_sub_total'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='cartorder',\n            old_name='town_city',\n            new_name='city',\n        ),",
        "detail": "backend.store.migrations.0014_rename_town_city_cartorder_city_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.store.migrations.0015_rename_shipping_cartorder_shipping_amount_and_more",
        "description": "backend.store.migrations.0015_rename_shipping_cartorder_shipping_amount_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('store', '0014_rename_town_city_cartorder_city_and_more'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='cartorder',\n            old_name='shipping',\n            new_name='shipping_amount',\n        ),",
        "detail": "backend.store.migrations.0015_rename_shipping_cartorder_shipping_amount_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.store.migrations.0016_rename_original_total_cartorder_initial_total",
        "description": "backend.store.migrations.0016_rename_original_total_cartorder_initial_total",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('store', '0015_rename_shipping_cartorder_shipping_amount_and_more'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='cartorder',\n            old_name='original_total',\n            new_name='initial_total',\n        ),",
        "detail": "backend.store.migrations.0016_rename_original_total_cartorder_initial_total",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.store.migrations.0017_rename_stripe_payment_intent_cartorder_stripe_session_id",
        "description": "backend.store.migrations.0017_rename_stripe_payment_intent_cartorder_stripe_session_id",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('store', '0016_rename_original_total_cartorder_initial_total'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='cartorder',\n            old_name='stripe_payment_intent',\n            new_name='stripe_session_id',\n        ),",
        "detail": "backend.store.migrations.0017_rename_stripe_payment_intent_cartorder_stripe_session_id",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.store.migrations.0018_remove_coupon_make_public_remove_coupon_redemption_and_more",
        "description": "backend.store.migrations.0018_remove_coupon_make_public_remove_coupon_redemption_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('store', '0017_rename_stripe_payment_intent_cartorder_stripe_session_id'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='coupon',\n            name='make_public',\n        ),\n        migrations.RemoveField(",
        "detail": "backend.store.migrations.0018_remove_coupon_make_public_remove_coupon_redemption_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.store.migrations.0019_alter_cartorder_order_status_notification",
        "description": "backend.store.migrations.0019_alter_cartorder_order_status_notification",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('vendor', '0001_initial'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        ('store', '0018_remove_coupon_make_public_remove_coupon_redemption_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='cartorder',\n            name='order_status',",
        "detail": "backend.store.migrations.0019_alter_cartorder_order_status_notification",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.store.migrations.0020_alter_cartorder_date_alter_product_brand_and_more",
        "description": "backend.store.migrations.0020_alter_cartorder_date_alter_product_brand_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('store', '0019_alter_cartorder_order_status_notification'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='cartorder',\n            name='date',\n            field=models.DateTimeField(default=django.utils.timezone.now),\n        ),",
        "detail": "backend.store.migrations.0020_alter_cartorder_date_alter_product_brand_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.store.migrations.0021_remove_product_tags_product_tags",
        "description": "backend.store.migrations.0021_remove_product_tags_product_tags",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('store', '0020_alter_cartorder_date_alter_product_brand_and_more'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='product',\n            name='tags',\n        ),\n        migrations.AddField(",
        "detail": "backend.store.migrations.0021_remove_product_tags_product_tags",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.store.migrations.0022_alter_product_options_alter_product_status_and_more",
        "description": "backend.store.migrations.0022_alter_product_options_alter_product_status_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('store', '0021_remove_product_tags_product_tags'),\n    ]\n    operations = [\n        migrations.AlterModelOptions(\n            name='product',\n            options={'ordering': ['-id'], 'verbose_name_plural': 'Products'},\n        ),\n        migrations.AlterField(",
        "detail": "backend.store.migrations.0022_alter_product_options_alter_product_status_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.store.migrations.0023_alter_gallery_product",
        "description": "backend.store.migrations.0023_alter_gallery_product",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('store', '0022_alter_product_options_alter_product_status_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='gallery',\n            name='product',\n            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='store.product'),\n        ),",
        "detail": "backend.store.migrations.0023_alter_gallery_product",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.store.migrations.0024_alter_cartorderitem_date",
        "description": "backend.store.migrations.0024_alter_cartorderitem_date",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('store', '0023_alter_gallery_product'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='cartorderitem',\n            name='date',\n            field=models.DateTimeField(default=django.utils.timezone.now),\n        ),",
        "detail": "backend.store.migrations.0024_alter_cartorderitem_date",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.store.migrations.0025_alter_product_description",
        "description": "backend.store.migrations.0025_alter_product_description",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('store', '0024_alter_cartorderitem_date'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='product',\n            name='description',\n            field=models.TextField(blank=True, null=True),\n        ),",
        "detail": "backend.store.migrations.0025_alter_product_description",
        "documentation": {}
    },
    {
        "label": "ProductImagesAdmin",
        "kind": 6,
        "importPath": "backend.store.admin",
        "description": "backend.store.admin",
        "peekOfCode": "class ProductImagesAdmin(admin.TabularInline):\n    model = Gallery\nclass SpecificationAdmin(admin.TabularInline):\n    model = Specification\nclass ColorAdmin(admin.TabularInline):\n    model = Color\nclass SizeAdmin(admin.TabularInline):\n    model = Size\nclass CartOrderItemsInlineAdmin(admin.TabularInline):\n    model = CartOrderItem",
        "detail": "backend.store.admin",
        "documentation": {}
    },
    {
        "label": "SpecificationAdmin",
        "kind": 6,
        "importPath": "backend.store.admin",
        "description": "backend.store.admin",
        "peekOfCode": "class SpecificationAdmin(admin.TabularInline):\n    model = Specification\nclass ColorAdmin(admin.TabularInline):\n    model = Color\nclass SizeAdmin(admin.TabularInline):\n    model = Size\nclass CartOrderItemsInlineAdmin(admin.TabularInline):\n    model = CartOrderItem\nclass CouponUsersInlineAdmin(admin.TabularInline):\n    model = CouponUsers",
        "detail": "backend.store.admin",
        "documentation": {}
    },
    {
        "label": "ColorAdmin",
        "kind": 6,
        "importPath": "backend.store.admin",
        "description": "backend.store.admin",
        "peekOfCode": "class ColorAdmin(admin.TabularInline):\n    model = Color\nclass SizeAdmin(admin.TabularInline):\n    model = Size\nclass CartOrderItemsInlineAdmin(admin.TabularInline):\n    model = CartOrderItem\nclass CouponUsersInlineAdmin(admin.TabularInline):\n    model = CouponUsers\nclass ProductAdminForm(forms.ModelForm):\n    class Meta:",
        "detail": "backend.store.admin",
        "documentation": {}
    },
    {
        "label": "SizeAdmin",
        "kind": 6,
        "importPath": "backend.store.admin",
        "description": "backend.store.admin",
        "peekOfCode": "class SizeAdmin(admin.TabularInline):\n    model = Size\nclass CartOrderItemsInlineAdmin(admin.TabularInline):\n    model = CartOrderItem\nclass CouponUsersInlineAdmin(admin.TabularInline):\n    model = CouponUsers\nclass ProductAdminForm(forms.ModelForm):\n    class Meta:\n        model = Product\n        fields = '__all__'",
        "detail": "backend.store.admin",
        "documentation": {}
    },
    {
        "label": "CartOrderItemsInlineAdmin",
        "kind": 6,
        "importPath": "backend.store.admin",
        "description": "backend.store.admin",
        "peekOfCode": "class CartOrderItemsInlineAdmin(admin.TabularInline):\n    model = CartOrderItem\nclass CouponUsersInlineAdmin(admin.TabularInline):\n    model = CouponUsers\nclass ProductAdminForm(forms.ModelForm):\n    class Meta:\n        model = Product\n        fields = '__all__'\n    vendor = forms.ModelChoiceField(queryset=Vendor.objects.filter(user__is_staff=True))\nclass ProductAdmin(ImportExportModelAdmin):",
        "detail": "backend.store.admin",
        "documentation": {}
    },
    {
        "label": "CouponUsersInlineAdmin",
        "kind": 6,
        "importPath": "backend.store.admin",
        "description": "backend.store.admin",
        "peekOfCode": "class CouponUsersInlineAdmin(admin.TabularInline):\n    model = CouponUsers\nclass ProductAdminForm(forms.ModelForm):\n    class Meta:\n        model = Product\n        fields = '__all__'\n    vendor = forms.ModelChoiceField(queryset=Vendor.objects.filter(user__is_staff=True))\nclass ProductAdmin(ImportExportModelAdmin):\n    inlines = [ProductImagesAdmin, SpecificationAdmin, ColorAdmin, SizeAdmin]\n    search_fields = ['title', 'price', 'slug']",
        "detail": "backend.store.admin",
        "documentation": {}
    },
    {
        "label": "ProductAdminForm",
        "kind": 6,
        "importPath": "backend.store.admin",
        "description": "backend.store.admin",
        "peekOfCode": "class ProductAdminForm(forms.ModelForm):\n    class Meta:\n        model = Product\n        fields = '__all__'\n    vendor = forms.ModelChoiceField(queryset=Vendor.objects.filter(user__is_staff=True))\nclass ProductAdmin(ImportExportModelAdmin):\n    inlines = [ProductImagesAdmin, SpecificationAdmin, ColorAdmin, SizeAdmin]\n    search_fields = ['title', 'price', 'slug']\n    list_filter = ['featured', 'status', 'in_stock', 'type', 'vendor']\n    list_editable = [ 'price', 'featured', 'status',  'shipping_amount', 'hot_deal', 'special_offer']",
        "detail": "backend.store.admin",
        "documentation": {}
    },
    {
        "label": "ProductAdmin",
        "kind": 6,
        "importPath": "backend.store.admin",
        "description": "backend.store.admin",
        "peekOfCode": "class ProductAdmin(ImportExportModelAdmin):\n    inlines = [ProductImagesAdmin, SpecificationAdmin, ColorAdmin, SizeAdmin]\n    search_fields = ['title', 'price', 'slug']\n    list_filter = ['featured', 'status', 'in_stock', 'type', 'vendor']\n    list_editable = [ 'price', 'featured', 'status',  'shipping_amount', 'hot_deal', 'special_offer']\n    list_display = ['product_image', 'title',   'price', 'featured', 'shipping_amount', 'in_stock' ,'stock_qty', 'order_count', 'vendor' ,'status', 'featured', 'special_offer' ,'hot_deal']\n    actions = [make_published, make_in_review, make_featured]\n    list_per_page = 100\n    prepopulated_fields = {\"slug\": (\"title\", )}\n    form = ProductAdminForm",
        "detail": "backend.store.admin",
        "documentation": {}
    },
    {
        "label": "CartAdmin",
        "kind": 6,
        "importPath": "backend.store.admin",
        "description": "backend.store.admin",
        "peekOfCode": "class CartAdmin(ImportExportModelAdmin):\n    list_display = ['product', 'cart_id', 'qty', 'price', 'sub_total' , 'shipping_amount', 'service_fee', 'tax_fee', 'total', 'country', 'size', 'color', 'date']\nclass CategoryAdmin(ImportExportModelAdmin):\n    list_editable = [ 'active']\n    list_display = ['title', 'thumbnail', 'active']\nclass TagAdmin(ImportExportModelAdmin):\n    list_display = ['title', 'category', 'active']\n    prepopulated_fields = {\"slug\": (\"title\", )}\nclass CartOrderAdmin(ImportExportModelAdmin):\n    inlines = [CartOrderItemsInlineAdmin]",
        "detail": "backend.store.admin",
        "documentation": {}
    },
    {
        "label": "CategoryAdmin",
        "kind": 6,
        "importPath": "backend.store.admin",
        "description": "backend.store.admin",
        "peekOfCode": "class CategoryAdmin(ImportExportModelAdmin):\n    list_editable = [ 'active']\n    list_display = ['title', 'thumbnail', 'active']\nclass TagAdmin(ImportExportModelAdmin):\n    list_display = ['title', 'category', 'active']\n    prepopulated_fields = {\"slug\": (\"title\", )}\nclass CartOrderAdmin(ImportExportModelAdmin):\n    inlines = [CartOrderItemsInlineAdmin]\n    search_fields = ['oid', 'full_name', 'email', 'mobile']\n    list_editable = ['order_status', 'payment_status']",
        "detail": "backend.store.admin",
        "documentation": {}
    },
    {
        "label": "TagAdmin",
        "kind": 6,
        "importPath": "backend.store.admin",
        "description": "backend.store.admin",
        "peekOfCode": "class TagAdmin(ImportExportModelAdmin):\n    list_display = ['title', 'category', 'active']\n    prepopulated_fields = {\"slug\": (\"title\", )}\nclass CartOrderAdmin(ImportExportModelAdmin):\n    inlines = [CartOrderItemsInlineAdmin]\n    search_fields = ['oid', 'full_name', 'email', 'mobile']\n    list_editable = ['order_status', 'payment_status']\n    list_filter = ['payment_status', 'order_status']\n    list_display = ['oid', 'payment_status', 'order_status', 'sub_total', 'shipping_amount', 'tax_fee', 'service_fee' ,'total', 'saved' ,'date']\nclass CartOrderItemsAdmin(ImportExportModelAdmin):",
        "detail": "backend.store.admin",
        "documentation": {}
    },
    {
        "label": "CartOrderAdmin",
        "kind": 6,
        "importPath": "backend.store.admin",
        "description": "backend.store.admin",
        "peekOfCode": "class CartOrderAdmin(ImportExportModelAdmin):\n    inlines = [CartOrderItemsInlineAdmin]\n    search_fields = ['oid', 'full_name', 'email', 'mobile']\n    list_editable = ['order_status', 'payment_status']\n    list_filter = ['payment_status', 'order_status']\n    list_display = ['oid', 'payment_status', 'order_status', 'sub_total', 'shipping_amount', 'tax_fee', 'service_fee' ,'total', 'saved' ,'date']\nclass CartOrderItemsAdmin(ImportExportModelAdmin):\n    list_filter = ['delivery_couriers', 'applied_coupon']\n    list_editable = ['date']\n    list_display = ['order_id', 'vendor', 'product' ,'qty', 'price', 'sub_total', 'shipping_amount' , 'service_fee', 'tax_fee', 'total' , 'delivery_couriers', 'applied_coupon', 'date']",
        "detail": "backend.store.admin",
        "documentation": {}
    },
    {
        "label": "CartOrderItemsAdmin",
        "kind": 6,
        "importPath": "backend.store.admin",
        "description": "backend.store.admin",
        "peekOfCode": "class CartOrderItemsAdmin(ImportExportModelAdmin):\n    list_filter = ['delivery_couriers', 'applied_coupon']\n    list_editable = ['date']\n    list_display = ['order_id', 'vendor', 'product' ,'qty', 'price', 'sub_total', 'shipping_amount' , 'service_fee', 'tax_fee', 'total' , 'delivery_couriers', 'applied_coupon', 'date']\nclass BrandAdmin(ImportExportModelAdmin):\n    list_editable = [ 'active']\n    list_display = ['title', 'brand_image', 'active']\nclass ProductFaqAdmin(ImportExportModelAdmin):\n    list_editable = [ 'active', 'answer']\n    list_display = ['user', 'question', 'answer' ,'active']",
        "detail": "backend.store.admin",
        "documentation": {}
    },
    {
        "label": "BrandAdmin",
        "kind": 6,
        "importPath": "backend.store.admin",
        "description": "backend.store.admin",
        "peekOfCode": "class BrandAdmin(ImportExportModelAdmin):\n    list_editable = [ 'active']\n    list_display = ['title', 'brand_image', 'active']\nclass ProductFaqAdmin(ImportExportModelAdmin):\n    list_editable = [ 'active', 'answer']\n    list_display = ['user', 'question', 'answer' ,'active']\nclass ProductOfferAdmin(ImportExportModelAdmin):\n    list_display = ['user', 'product', 'price','status', 'email']\nclass CouponAdmin(ImportExportModelAdmin):\n    inlines = [CouponUsersInlineAdmin]",
        "detail": "backend.store.admin",
        "documentation": {}
    },
    {
        "label": "ProductFaqAdmin",
        "kind": 6,
        "importPath": "backend.store.admin",
        "description": "backend.store.admin",
        "peekOfCode": "class ProductFaqAdmin(ImportExportModelAdmin):\n    list_editable = [ 'active', 'answer']\n    list_display = ['user', 'question', 'answer' ,'active']\nclass ProductOfferAdmin(ImportExportModelAdmin):\n    list_display = ['user', 'product', 'price','status', 'email']\nclass CouponAdmin(ImportExportModelAdmin):\n    inlines = [CouponUsersInlineAdmin]\n    list_editable = ['code', 'active', ]\n    list_display = ['vendor' ,'code', 'discount', 'active', 'date']\nclass ProductReviewAdmin(ImportExportModelAdmin):",
        "detail": "backend.store.admin",
        "documentation": {}
    },
    {
        "label": "ProductOfferAdmin",
        "kind": 6,
        "importPath": "backend.store.admin",
        "description": "backend.store.admin",
        "peekOfCode": "class ProductOfferAdmin(ImportExportModelAdmin):\n    list_display = ['user', 'product', 'price','status', 'email']\nclass CouponAdmin(ImportExportModelAdmin):\n    inlines = [CouponUsersInlineAdmin]\n    list_editable = ['code', 'active', ]\n    list_display = ['vendor' ,'code', 'discount', 'active', 'date']\nclass ProductReviewAdmin(ImportExportModelAdmin):\n    list_editable = ['active']\n    list_editable = ['active']\n    list_display = ['user', 'product', 'review', 'reply' ,'rating', 'active']",
        "detail": "backend.store.admin",
        "documentation": {}
    },
    {
        "label": "CouponAdmin",
        "kind": 6,
        "importPath": "backend.store.admin",
        "description": "backend.store.admin",
        "peekOfCode": "class CouponAdmin(ImportExportModelAdmin):\n    inlines = [CouponUsersInlineAdmin]\n    list_editable = ['code', 'active', ]\n    list_display = ['vendor' ,'code', 'discount', 'active', 'date']\nclass ProductReviewAdmin(ImportExportModelAdmin):\n    list_editable = ['active']\n    list_editable = ['active']\n    list_display = ['user', 'product', 'review', 'reply' ,'rating', 'active']\nclass AddressAdmin(ImportExportModelAdmin):\n    list_editable = ['status']",
        "detail": "backend.store.admin",
        "documentation": {}
    },
    {
        "label": "ProductReviewAdmin",
        "kind": 6,
        "importPath": "backend.store.admin",
        "description": "backend.store.admin",
        "peekOfCode": "class ProductReviewAdmin(ImportExportModelAdmin):\n    list_editable = ['active']\n    list_editable = ['active']\n    list_display = ['user', 'product', 'review', 'reply' ,'rating', 'active']\nclass AddressAdmin(ImportExportModelAdmin):\n    list_editable = ['status']\n    list_display = ['user', 'full_name', 'status']\nclass DeliveryCouriersAdmin(ImportExportModelAdmin):\n    list_editable = ['couriers_tracking_website_address', 'url_parameter']\n    list_display = ['couriers_name', 'couriers_tracking_website_address', 'url_parameter']",
        "detail": "backend.store.admin",
        "documentation": {}
    },
    {
        "label": "AddressAdmin",
        "kind": 6,
        "importPath": "backend.store.admin",
        "description": "backend.store.admin",
        "peekOfCode": "class AddressAdmin(ImportExportModelAdmin):\n    list_editable = ['status']\n    list_display = ['user', 'full_name', 'status']\nclass DeliveryCouriersAdmin(ImportExportModelAdmin):\n    list_editable = ['couriers_tracking_website_address', 'url_parameter']\n    list_display = ['couriers_name', 'couriers_tracking_website_address', 'url_parameter']\nclass NotificationAdmin(ImportExportModelAdmin):\n    list_editable = ['seen']\n    list_display = ['order', 'seen', 'user', 'vendor', 'date']\nadmin.site.register(Review, ProductReviewAdmin)",
        "detail": "backend.store.admin",
        "documentation": {}
    },
    {
        "label": "DeliveryCouriersAdmin",
        "kind": 6,
        "importPath": "backend.store.admin",
        "description": "backend.store.admin",
        "peekOfCode": "class DeliveryCouriersAdmin(ImportExportModelAdmin):\n    list_editable = ['couriers_tracking_website_address', 'url_parameter']\n    list_display = ['couriers_name', 'couriers_tracking_website_address', 'url_parameter']\nclass NotificationAdmin(ImportExportModelAdmin):\n    list_editable = ['seen']\n    list_display = ['order', 'seen', 'user', 'vendor', 'date']\nadmin.site.register(Review, ProductReviewAdmin)\nadmin.site.register(Product, ProductAdmin)\nadmin.site.register(Category, CategoryAdmin)\nadmin.site.register(Tag, TagAdmin)",
        "detail": "backend.store.admin",
        "documentation": {}
    },
    {
        "label": "NotificationAdmin",
        "kind": 6,
        "importPath": "backend.store.admin",
        "description": "backend.store.admin",
        "peekOfCode": "class NotificationAdmin(ImportExportModelAdmin):\n    list_editable = ['seen']\n    list_display = ['order', 'seen', 'user', 'vendor', 'date']\nadmin.site.register(Review, ProductReviewAdmin)\nadmin.site.register(Product, ProductAdmin)\nadmin.site.register(Category, CategoryAdmin)\nadmin.site.register(Tag, TagAdmin)\nadmin.site.register(CartOrder, CartOrderAdmin)\nadmin.site.register(Cart, CartAdmin)\nadmin.site.register(CartOrderItem, CartOrderItemsAdmin)",
        "detail": "backend.store.admin",
        "documentation": {}
    },
    {
        "label": "make_published",
        "kind": 2,
        "importPath": "backend.store.admin",
        "description": "backend.store.admin",
        "peekOfCode": "def make_published(modeladmin, request, queryset):\n    queryset.update(status=\"published\")\n@admin.action(description=\"Mark selected products as In Review\")\ndef make_in_review(modeladmin, request, queryset):\n    queryset.update(status=\"in_review\")\n@admin.action(description=\"Mark selected products as Featured\")\ndef make_featured(modeladmin, request, queryset):\n    queryset.update(featured=True)\nclass ProductImagesAdmin(admin.TabularInline):\n    model = Gallery",
        "detail": "backend.store.admin",
        "documentation": {}
    },
    {
        "label": "make_in_review",
        "kind": 2,
        "importPath": "backend.store.admin",
        "description": "backend.store.admin",
        "peekOfCode": "def make_in_review(modeladmin, request, queryset):\n    queryset.update(status=\"in_review\")\n@admin.action(description=\"Mark selected products as Featured\")\ndef make_featured(modeladmin, request, queryset):\n    queryset.update(featured=True)\nclass ProductImagesAdmin(admin.TabularInline):\n    model = Gallery\nclass SpecificationAdmin(admin.TabularInline):\n    model = Specification\nclass ColorAdmin(admin.TabularInline):",
        "detail": "backend.store.admin",
        "documentation": {}
    },
    {
        "label": "make_featured",
        "kind": 2,
        "importPath": "backend.store.admin",
        "description": "backend.store.admin",
        "peekOfCode": "def make_featured(modeladmin, request, queryset):\n    queryset.update(featured=True)\nclass ProductImagesAdmin(admin.TabularInline):\n    model = Gallery\nclass SpecificationAdmin(admin.TabularInline):\n    model = Specification\nclass ColorAdmin(admin.TabularInline):\n    model = Color\nclass SizeAdmin(admin.TabularInline):\n    model = Size",
        "detail": "backend.store.admin",
        "documentation": {}
    },
    {
        "label": "StoreConfig",
        "kind": 6,
        "importPath": "backend.store.apps",
        "description": "backend.store.apps",
        "peekOfCode": "class StoreConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'store'",
        "detail": "backend.store.apps",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": "backend.store.models",
        "description": "backend.store.models",
        "peekOfCode": "class Category(models.Model):\n    # Category title\n    title = models.CharField(max_length=100)\n    # Image for the category\n    image = models.ImageField(\n        upload_to=user_directory_path, default=\"category.jpg\", null=True, blank=True\n    )\n    # Is the category active?\n    active = models.BooleanField(default=True)\n    # Slug for SEO-friendly URLs",
        "detail": "backend.store.models",
        "documentation": {}
    },
    {
        "label": "Tag",
        "kind": 6,
        "importPath": "backend.store.models",
        "description": "backend.store.models",
        "peekOfCode": "class Tag(models.Model):\n    # Tag title\n    title = models.CharField(max_length=30)\n    # Category associated with the tag\n    category = models.ForeignKey(\n        Category, default=\"\", verbose_name=\"Category\", on_delete=models.PROTECT\n    )\n    # Is the tag active?\n    active = models.BooleanField(default=True)\n    # Unique slug for SEO-friendly URLs",
        "detail": "backend.store.models",
        "documentation": {}
    },
    {
        "label": "Brand",
        "kind": 6,
        "importPath": "backend.store.models",
        "description": "backend.store.models",
        "peekOfCode": "class Brand(models.Model):\n    # Brand title\n    title = models.CharField(max_length=100)\n    # Image for the brand\n    image = models.ImageField(\n        upload_to=user_directory_path, default=\"brand.jpg\", null=True, blank=True\n    )\n    # Is the brand active?\n    active = models.BooleanField(default=True)\n    class Meta:",
        "detail": "backend.store.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "kind": 6,
        "importPath": "backend.store.models",
        "description": "backend.store.models",
        "peekOfCode": "class Product(models.Model):\n    # Product title\n    title = models.CharField(max_length=100)\n    # Image for the product\n    image = models.FileField(\n        upload_to=user_directory_path, blank=True, null=True, default=\"product.jpg\"\n    )\n    # Description for the product using HTML\n    description = models.TextField(null=True, blank=True)\n    # Categories that the product belongs to",
        "detail": "backend.store.models",
        "documentation": {}
    },
    {
        "label": "Gallery",
        "kind": 6,
        "importPath": "backend.store.models",
        "description": "backend.store.models",
        "peekOfCode": "class Gallery(models.Model):\n    # Product associated with the gallery\n    product = models.ForeignKey(Product, on_delete=models.CASCADE, null=True)\n    # Image for the gallery\n    image = models.FileField(upload_to=user_directory_path, default=\"gallery.jpg\")\n    # Is the image active?\n    active = models.BooleanField(default=True)\n    # Date of gallery image creation\n    date = models.DateTimeField(auto_now_add=True)\n    # Unique short UUID for gallery image",
        "detail": "backend.store.models",
        "documentation": {}
    },
    {
        "label": "Specification",
        "kind": 6,
        "importPath": "backend.store.models",
        "description": "backend.store.models",
        "peekOfCode": "class Specification(models.Model):\n    # Product associated with the specification\n    product = models.ForeignKey(Product, on_delete=models.CASCADE, null=True)\n    # Specification title\n    title = models.CharField(max_length=100, blank=True, null=True)\n    # Specification content\n    content = models.CharField(max_length=1000, blank=True, null=True)\n# Model for Product Sizes\nclass Size(models.Model):\n    # Product associated with the size",
        "detail": "backend.store.models",
        "documentation": {}
    },
    {
        "label": "Size",
        "kind": 6,
        "importPath": "backend.store.models",
        "description": "backend.store.models",
        "peekOfCode": "class Size(models.Model):\n    # Product associated with the size\n    product = models.ForeignKey(Product, on_delete=models.CASCADE, null=True)\n    # Size name\n    name = models.CharField(max_length=100, blank=True, null=True)\n    # Price for the size\n    price = models.DecimalField(default=0.00, decimal_places=2, max_digits=12)\n# Model for Product Colors\nclass Color(models.Model):\n    # Product associated with the color",
        "detail": "backend.store.models",
        "documentation": {}
    },
    {
        "label": "Color",
        "kind": 6,
        "importPath": "backend.store.models",
        "description": "backend.store.models",
        "peekOfCode": "class Color(models.Model):\n    # Product associated with the color\n    product = models.ForeignKey(Product, on_delete=models.CASCADE, null=True)\n    # Color name\n    name = models.CharField(max_length=100, blank=True, null=True)\n    # Color code (if applicable)\n    color_code = models.CharField(max_length=100, blank=True, null=True)\n    # Image for the color\n    image = models.FileField(upload_to=user_directory_path, blank=True, null=True)\n# Model for Product FAQs",
        "detail": "backend.store.models",
        "documentation": {}
    },
    {
        "label": "ProductFaq",
        "kind": 6,
        "importPath": "backend.store.models",
        "description": "backend.store.models",
        "peekOfCode": "class ProductFaq(models.Model):\n    # User who asked the FAQ\n    user = models.ForeignKey(User, on_delete=models.CASCADE, null=True)\n    # Unique short UUID for FAQ\n    pid = ShortUUIDField(\n        unique=True, length=10, max_length=20, alphabet=\"abcdefghijklmnopqrstuvxyz\"\n    )\n    # Product associated with the FAQ\n    product = models.ForeignKey(\n        Product, on_delete=models.CASCADE, null=True, related_name=\"product_faq\"",
        "detail": "backend.store.models",
        "documentation": {}
    },
    {
        "label": "Cart",
        "kind": 6,
        "importPath": "backend.store.models",
        "description": "backend.store.models",
        "peekOfCode": "class Cart(models.Model):\n    product = models.ForeignKey(Product, on_delete=models.CASCADE)\n    user = models.ForeignKey(User, on_delete=models.SET_NULL, null=True, blank=True)\n    qty = models.PositiveIntegerField(default=0, null=True, blank=True)\n    price = models.DecimalField(\n        decimal_places=2, max_digits=12, default=0.00, null=True, blank=True\n    )\n    sub_total = models.DecimalField(\n        decimal_places=2, max_digits=12, default=0.00, null=True, blank=True\n    )",
        "detail": "backend.store.models",
        "documentation": {}
    },
    {
        "label": "CartOrder",
        "kind": 6,
        "importPath": "backend.store.models",
        "description": "backend.store.models",
        "peekOfCode": "class CartOrder(models.Model):\n    # Vendors associated with the order\n    vendor = models.ManyToManyField(Vendor, blank=True)\n    # Buyer of the order\n    buyer = models.ForeignKey(\n        User, on_delete=models.SET_NULL, null=True, related_name=\"buyer\", blank=True\n    )\n    # Total price of the order\n    sub_total = models.DecimalField(default=0.00, max_digits=12, decimal_places=2)\n    # Shipping cost",
        "detail": "backend.store.models",
        "documentation": {}
    },
    {
        "label": "CartOrderItem",
        "kind": 6,
        "importPath": "backend.store.models",
        "description": "backend.store.models",
        "peekOfCode": "class CartOrderItem(models.Model):\n    # A foreign key relationship to the CartOrder model with CASCADE deletion\n    order = models.ForeignKey(\n        CartOrder, on_delete=models.CASCADE, related_name=\"orderitem\"\n    )\n    # A foreign key relationship to the Product model with CASCADE deletion\n    product = models.ForeignKey(\n        Product, on_delete=models.CASCADE, related_name=\"order_item\"\n    )\n    # Integer field to store the quantity (default is 0)",
        "detail": "backend.store.models",
        "documentation": {}
    },
    {
        "label": "Review",
        "kind": 6,
        "importPath": "backend.store.models",
        "description": "backend.store.models",
        "peekOfCode": "class Review(models.Model):\n    # A foreign key relationship to the User model with SET_NULL option, allowing null and blank values\n    user = models.ForeignKey(User, on_delete=models.SET_NULL, blank=True, null=True)\n    # A foreign key relationship to the Product model with SET_NULL option, allowing null and blank values, and specifying a related name\n    product = models.ForeignKey(\n        Product,\n        on_delete=models.SET_NULL,\n        blank=True,\n        null=True,\n        related_name=\"reviews\",",
        "detail": "backend.store.models",
        "documentation": {}
    },
    {
        "label": "Wishlist",
        "kind": 6,
        "importPath": "backend.store.models",
        "description": "backend.store.models",
        "peekOfCode": "class Wishlist(models.Model):\n    # A foreign key relationship to the User model with CASCADE deletion\n    user = models.ForeignKey(User, on_delete=models.CASCADE, null=True, blank=True)\n    # A foreign key relationship to the Product model with CASCADE deletion, specifying a related name\n    product = models.ForeignKey(\n        Product, on_delete=models.CASCADE, related_name=\"wishlist\"\n    )\n    # Date and time field\n    date = models.DateTimeField(auto_now_add=True)\n    class Meta:",
        "detail": "backend.store.models",
        "documentation": {}
    },
    {
        "label": "Notification",
        "kind": 6,
        "importPath": "backend.store.models",
        "description": "backend.store.models",
        "peekOfCode": "class Notification(models.Model):\n    # A foreign key relationship to the User model with CASCADE deletion\n    user = models.ForeignKey(User, on_delete=models.SET_NULL, null=True, blank=True)\n    # A foreign key relationship to the Vendor model with CASCADE deletion\n    vendor = models.ForeignKey(Vendor, on_delete=models.SET_NULL, null=True, blank=True)\n    # A foreign key relationship to the CartOrder model with CASCADE deletion, specifying a related name\n    order = models.ForeignKey(\n        CartOrder, on_delete=models.SET_NULL, null=True, blank=True\n    )\n    # A foreign key relationship to the CartOrderItem model with CASCADE deletion, specifying a related name",
        "detail": "backend.store.models",
        "documentation": {}
    },
    {
        "label": "Address",
        "kind": 6,
        "importPath": "backend.store.models",
        "description": "backend.store.models",
        "peekOfCode": "class Address(models.Model):\n    # A foreign key relationship to the User model with CASCADE deletion\n    user = models.ForeignKey(User, on_delete=models.CASCADE, null=True)\n    # Fields for full name, mobile, email, country, state, town/city, address, zip code, and status\n    full_name = models.CharField(max_length=200)\n    mobile = models.CharField(max_length=50)\n    email = models.CharField(max_length=100)\n    country = models.ForeignKey(\n        \"addon.Tax\",\n        on_delete=models.SET_NULL,",
        "detail": "backend.store.models",
        "documentation": {}
    },
    {
        "label": "CancelledOrder",
        "kind": 6,
        "importPath": "backend.store.models",
        "description": "backend.store.models",
        "peekOfCode": "class CancelledOrder(models.Model):\n    # A foreign key relationship to the User model with CASCADE deletion\n    user = models.ForeignKey(User, on_delete=models.CASCADE, null=True)\n    # A foreign key relationship to the CartOrderItem model with SET_NULL option, allowing null values\n    orderitem = models.ForeignKey(\n        \"store.CartOrderItem\", on_delete=models.SET_NULL, null=True\n    )\n    # Field for email with max length 100\n    email = models.CharField(max_length=100)\n    # Boolean field for the refunded status",
        "detail": "backend.store.models",
        "documentation": {}
    },
    {
        "label": "Coupon",
        "kind": 6,
        "importPath": "backend.store.models",
        "description": "backend.store.models",
        "peekOfCode": "class Coupon(models.Model):\n    # A foreign key relationship to the Vendor model with SET_NULL option, allowing null values, and specifying a related name\n    vendor = models.ForeignKey(\n        Vendor, on_delete=models.SET_NULL, null=True, related_name=\"coupon_vendor\"\n    )\n    # Many-to-many relationship with User model for users who used the coupon\n    used_by = models.ManyToManyField(User, blank=True)\n    # Fields for code, type, discount, redemption, date, and more\n    code = models.CharField(max_length=1000)\n    # type = models.CharField(max_length=100, choices=DISCOUNT_TYPE, default=\"Percentage\")",
        "detail": "backend.store.models",
        "documentation": {}
    },
    {
        "label": "CouponUsers",
        "kind": 6,
        "importPath": "backend.store.models",
        "description": "backend.store.models",
        "peekOfCode": "class CouponUsers(models.Model):\n    # A foreign key relationship to the Coupon model with CASCADE deletion\n    coupon = models.ForeignKey(Coupon, on_delete=models.CASCADE)\n    # A foreign key relationship to the CartOrder model with CASCADE deletion\n    order = models.ForeignKey(CartOrder, on_delete=models.CASCADE)\n    # Fields for full name, email, and mobile\n    full_name = models.CharField(max_length=1000)\n    email = models.CharField(max_length=1000)\n    mobile = models.CharField(max_length=1000)\n    # Method to return a string representation of the coupon code",
        "detail": "backend.store.models",
        "documentation": {}
    },
    {
        "label": "DeliveryCouriers",
        "kind": 6,
        "importPath": "backend.store.models",
        "description": "backend.store.models",
        "peekOfCode": "class DeliveryCouriers(models.Model):\n    # Field for courier name with max length 1000, allowing null and blank values\n    couriers_name = models.CharField(max_length=1000, null=True, blank=True)\n    # Field for courier tracking website address as a URL, allowing null and blank values\n    couriers_tracking_website_address = models.URLField(null=True, blank=True)\n    # Field for URL parameters with max length 1000, allowing null and blank values\n    url_parameter = models.CharField(max_length=1000, null=True, blank=True)\n    # Date and time field\n    date = models.DateTimeField(auto_now_add=True)\n    class Meta:",
        "detail": "backend.store.models",
        "documentation": {}
    },
    {
        "label": "update_product_rating",
        "kind": 2,
        "importPath": "backend.store.models",
        "description": "backend.store.models",
        "peekOfCode": "def update_product_rating(sender, instance, **kwargs):\n    if instance.product:\n        instance.product.save()\n# Define a model for Wishlist\nclass Wishlist(models.Model):\n    # A foreign key relationship to the User model with CASCADE deletion\n    user = models.ForeignKey(User, on_delete=models.CASCADE, null=True, blank=True)\n    # A foreign key relationship to the Product model with CASCADE deletion, specifying a related name\n    product = models.ForeignKey(\n        Product, on_delete=models.CASCADE, related_name=\"wishlist\"",
        "detail": "backend.store.models",
        "documentation": {}
    },
    {
        "label": "DISCOUNT_TYPE",
        "kind": 5,
        "importPath": "backend.store.models",
        "description": "backend.store.models",
        "peekOfCode": "DISCOUNT_TYPE = (\n    (\"Percentage\", \"Prozent\"),\n    (\"Flat Rate\", \"Pauschalrate\"),\n)\nSTATUS_CHOICE = (\n    (\"processing\", \"Prozess\"),\n    (\"shipped\", \"verschickt\"),\n    (\"delivered\", \"geliefert\"),\n)\nSTATUS = (",
        "detail": "backend.store.models",
        "documentation": {}
    },
    {
        "label": "STATUS_CHOICE",
        "kind": 5,
        "importPath": "backend.store.models",
        "description": "backend.store.models",
        "peekOfCode": "STATUS_CHOICE = (\n    (\"processing\", \"Prozess\"),\n    (\"shipped\", \"verschickt\"),\n    (\"delivered\", \"geliefert\"),\n)\nSTATUS = (\n    (\"draft\", \"vorlage\"),\n    (\"disabled\", \"unmöglich\"),\n    (\"rejected\", \"abgelehnt\"),\n    (\"in_review\", \"vorschau\"),",
        "detail": "backend.store.models",
        "documentation": {}
    },
    {
        "label": "STATUS",
        "kind": 5,
        "importPath": "backend.store.models",
        "description": "backend.store.models",
        "peekOfCode": "STATUS = (\n    (\"draft\", \"vorlage\"),\n    (\"disabled\", \"unmöglich\"),\n    (\"rejected\", \"abgelehnt\"),\n    (\"in_review\", \"vorschau\"),\n    (\"published\", \"veröffentlicht\"),\n)\nPAYMENT_STATUS = (\n    (\"paid\", \"bezahlt\"),\n    (\"pending\", \"wartend\"),",
        "detail": "backend.store.models",
        "documentation": {}
    },
    {
        "label": "PAYMENT_STATUS",
        "kind": 5,
        "importPath": "backend.store.models",
        "description": "backend.store.models",
        "peekOfCode": "PAYMENT_STATUS = (\n    (\"paid\", \"bezahlt\"),\n    (\"pending\", \"wartend\"),\n    (\"processing\", \"Prozess\"),\n    (\"cancelled\", \"abgebrochen\"),\n    (\"initiated\", \"initialisiert\"),\n    (\"failed\", \"fehler\"),\n    (\"refunding\", \"wird erstattet\"),\n    (\"refunded\", \"wurde erstatted\"),\n    (\"unpaid\", \"nicht bezahlt\"),",
        "detail": "backend.store.models",
        "documentation": {}
    },
    {
        "label": "ORDER_STATUS",
        "kind": 5,
        "importPath": "backend.store.models",
        "description": "backend.store.models",
        "peekOfCode": "ORDER_STATUS = (\n    (\"Pending\", \"wartend\"),\n    (\"Fulfilled\", \"erledigt\"),\n    (\"Partially Fulfilled\", \"teilweise erledigt\"),\n    (\"Cancelled\", \"abgebrochen\"),\n)\nAUCTION_STATUS = (\n    (\"on_going\", \"laufend\"),\n    (\"finished\", \"beendet\"),\n    (\"cancelled\", \"abgebrochen\"),",
        "detail": "backend.store.models",
        "documentation": {}
    },
    {
        "label": "AUCTION_STATUS",
        "kind": 5,
        "importPath": "backend.store.models",
        "description": "backend.store.models",
        "peekOfCode": "AUCTION_STATUS = (\n    (\"on_going\", \"laufend\"),\n    (\"finished\", \"beendet\"),\n    (\"cancelled\", \"abgebrochen\"),\n)\nWIN_STATUS = ((\"won\", \"gewonnen\"), (\"lost\", \"Verloren\"), (\"pending\", \"wartend\"))\nPRODUCT_TYPE = ((\"regular\", \"regulär\"), (\"auction\", \"Auktion\"), (\"offer\", \"angebot\"))\nOFFER_STATUS = (\n    (\"accepted\", \"akzeptiert\"),\n    (\"rejected\", \"abgelehnt\"),",
        "detail": "backend.store.models",
        "documentation": {}
    },
    {
        "label": "WIN_STATUS",
        "kind": 5,
        "importPath": "backend.store.models",
        "description": "backend.store.models",
        "peekOfCode": "WIN_STATUS = ((\"won\", \"gewonnen\"), (\"lost\", \"Verloren\"), (\"pending\", \"wartend\"))\nPRODUCT_TYPE = ((\"regular\", \"regulär\"), (\"auction\", \"Auktion\"), (\"offer\", \"angebot\"))\nOFFER_STATUS = (\n    (\"accepted\", \"akzeptiert\"),\n    (\"rejected\", \"abgelehnt\"),\n    (\"pending\", \"wartend\"),\n)\nPRODUCT_CONDITION = (\n    (\"new\", \"New\"),\n    (\"old_2nd_hand\", \"“Used or 2nd Hand\"),",
        "detail": "backend.store.models",
        "documentation": {}
    },
    {
        "label": "PRODUCT_TYPE",
        "kind": 5,
        "importPath": "backend.store.models",
        "description": "backend.store.models",
        "peekOfCode": "PRODUCT_TYPE = ((\"regular\", \"regulär\"), (\"auction\", \"Auktion\"), (\"offer\", \"angebot\"))\nOFFER_STATUS = (\n    (\"accepted\", \"akzeptiert\"),\n    (\"rejected\", \"abgelehnt\"),\n    (\"pending\", \"wartend\"),\n)\nPRODUCT_CONDITION = (\n    (\"new\", \"New\"),\n    (\"old_2nd_hand\", \"“Used or 2nd Hand\"),\n    (\"custom\", \"Custom\"),",
        "detail": "backend.store.models",
        "documentation": {}
    },
    {
        "label": "OFFER_STATUS",
        "kind": 5,
        "importPath": "backend.store.models",
        "description": "backend.store.models",
        "peekOfCode": "OFFER_STATUS = (\n    (\"accepted\", \"akzeptiert\"),\n    (\"rejected\", \"abgelehnt\"),\n    (\"pending\", \"wartend\"),\n)\nPRODUCT_CONDITION = (\n    (\"new\", \"New\"),\n    (\"old_2nd_hand\", \"“Used or 2nd Hand\"),\n    (\"custom\", \"Custom\"),\n)",
        "detail": "backend.store.models",
        "documentation": {}
    },
    {
        "label": "PRODUCT_CONDITION",
        "kind": 5,
        "importPath": "backend.store.models",
        "description": "backend.store.models",
        "peekOfCode": "PRODUCT_CONDITION = (\n    (\"new\", \"New\"),\n    (\"old_2nd_hand\", \"“Used or 2nd Hand\"),\n    (\"custom\", \"Custom\"),\n)\nPRODUCT_CONDITION_RATING = (\n    (1, \"1/10\"),\n    (2, \"2/10\"),\n    (3, \"3/10\"),\n    (4, \"4/10\"),",
        "detail": "backend.store.models",
        "documentation": {}
    },
    {
        "label": "PRODUCT_CONDITION_RATING",
        "kind": 5,
        "importPath": "backend.store.models",
        "description": "backend.store.models",
        "peekOfCode": "PRODUCT_CONDITION_RATING = (\n    (1, \"1/10\"),\n    (2, \"2/10\"),\n    (3, \"3/10\"),\n    (4, \"4/10\"),\n    (5, \"5/10\"),\n    (6, \"6/10\"),\n    (7, \"7/10\"),\n    (8, \"8/10\"),\n    (9, \"9/10\"),",
        "detail": "backend.store.models",
        "documentation": {}
    },
    {
        "label": "DELIVERY_STATUS",
        "kind": 5,
        "importPath": "backend.store.models",
        "description": "backend.store.models",
        "peekOfCode": "DELIVERY_STATUS = (\n    (\"On Hold\", \"wartend\"),\n    (\"Shipping Processing\", \"Prozess\"),\n    (\"Shipped\", \"versendet\"),\n    (\"Arrived\", \"erreicht\"),\n    (\"Delivered\", \"geliefert\"),\n    (\"Returning\", \"wird erstattet\"),\n    (\"Returned\", \"Rückerstattet\"),\n)\nPAYMENT_METHOD = (",
        "detail": "backend.store.models",
        "documentation": {}
    },
    {
        "label": "PAYMENT_METHOD",
        "kind": 5,
        "importPath": "backend.store.models",
        "description": "backend.store.models",
        "peekOfCode": "PAYMENT_METHOD = (\n    (\"Paypal\", \"Paypal\"),\n    (\"Credit/Debit Card\", \"Credit/Debit Card\"),\n    # (\"Wallet Points\", \"Wallet Points\"),\n)\nRATING = (\n    (1, \"★☆☆☆☆\"),\n    (2, \"★★☆☆☆\"),\n    (3, \"★★★☆☆\"),\n    (4, \"★★★★☆\"),",
        "detail": "backend.store.models",
        "documentation": {}
    },
    {
        "label": "RATING",
        "kind": 5,
        "importPath": "backend.store.models",
        "description": "backend.store.models",
        "peekOfCode": "RATING = (\n    (1, \"★☆☆☆☆\"),\n    (2, \"★★☆☆☆\"),\n    (3, \"★★★☆☆\"),\n    (4, \"★★★★☆\"),\n    (5, \"★★★★★\"),\n)\n# Model for Product Categories\nclass Category(models.Model):\n    # Category title",
        "detail": "backend.store.models",
        "documentation": {}
    },
    {
        "label": "ConfigSettingsSerializer",
        "kind": 6,
        "importPath": "backend.store.serializers",
        "description": "backend.store.serializers",
        "peekOfCode": "class ConfigSettingsSerializer(serializers.ModelSerializer):\n    class Meta:\n            model = ConfigSettings\n            fields = '__all__'\n# Define a serializer for the Category model\nclass CategorySerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Category\n        fields = '__all__'\n# Define a serializer for the Tag model",
        "detail": "backend.store.serializers",
        "documentation": {}
    },
    {
        "label": "CategorySerializer",
        "kind": 6,
        "importPath": "backend.store.serializers",
        "description": "backend.store.serializers",
        "peekOfCode": "class CategorySerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Category\n        fields = '__all__'\n# Define a serializer for the Tag model\nclass TagSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Tag\n        fields = '__all__'\n# Define a serializer for the Brand model",
        "detail": "backend.store.serializers",
        "documentation": {}
    },
    {
        "label": "TagSerializer",
        "kind": 6,
        "importPath": "backend.store.serializers",
        "description": "backend.store.serializers",
        "peekOfCode": "class TagSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Tag\n        fields = '__all__'\n# Define a serializer for the Brand model\nclass BrandSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Brand\n        fields = '__all__'\n        # Define a serializer for the Gallery model",
        "detail": "backend.store.serializers",
        "documentation": {}
    },
    {
        "label": "BrandSerializer",
        "kind": 6,
        "importPath": "backend.store.serializers",
        "description": "backend.store.serializers",
        "peekOfCode": "class BrandSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Brand\n        fields = '__all__'\n        # Define a serializer for the Gallery model\nclass GallerySerializer(serializers.ModelSerializer):\n    # Serialize the related Product model\n    class Meta:\n        model = Gallery\n        fields = '__all__'",
        "detail": "backend.store.serializers",
        "documentation": {}
    },
    {
        "label": "GallerySerializer",
        "kind": 6,
        "importPath": "backend.store.serializers",
        "description": "backend.store.serializers",
        "peekOfCode": "class GallerySerializer(serializers.ModelSerializer):\n    # Serialize the related Product model\n    class Meta:\n        model = Gallery\n        fields = '__all__'\n# Define a serializer for the Specification model\nclass SpecificationSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Specification\n        fields = '__all__'",
        "detail": "backend.store.serializers",
        "documentation": {}
    },
    {
        "label": "SpecificationSerializer",
        "kind": 6,
        "importPath": "backend.store.serializers",
        "description": "backend.store.serializers",
        "peekOfCode": "class SpecificationSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Specification\n        fields = '__all__'\n# Define a serializer for the Size model\nclass SizeSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Size\n        fields = '__all__'\n# Define a serializer for the Color model",
        "detail": "backend.store.serializers",
        "documentation": {}
    },
    {
        "label": "SizeSerializer",
        "kind": 6,
        "importPath": "backend.store.serializers",
        "description": "backend.store.serializers",
        "peekOfCode": "class SizeSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Size\n        fields = '__all__'\n# Define a serializer for the Color model\nclass ColorSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Color\n        fields = '__all__'\n# Define a serializer for the Product model",
        "detail": "backend.store.serializers",
        "documentation": {}
    },
    {
        "label": "ColorSerializer",
        "kind": 6,
        "importPath": "backend.store.serializers",
        "description": "backend.store.serializers",
        "peekOfCode": "class ColorSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Color\n        fields = '__all__'\n# Define a serializer for the Product model\nclass ProductSerializer(serializers.ModelSerializer):\n    # Serialize related Category, Tag, and Brand models\n    # category = CategorySerializer(many=True, read_only=True)\n    # tags = TagSerializer(many=True, read_only=True)\n    gallery = GallerySerializer(many=True, read_only=True)",
        "detail": "backend.store.serializers",
        "documentation": {}
    },
    {
        "label": "ProductSerializer",
        "kind": 6,
        "importPath": "backend.store.serializers",
        "description": "backend.store.serializers",
        "peekOfCode": "class ProductSerializer(serializers.ModelSerializer):\n    # Serialize related Category, Tag, and Brand models\n    # category = CategorySerializer(many=True, read_only=True)\n    # tags = TagSerializer(many=True, read_only=True)\n    gallery = GallerySerializer(many=True, read_only=True)\n    color = ColorSerializer(many=True, read_only=True)\n    size = SizeSerializer(many=True, read_only=True)\n    specification = SpecificationSerializer(many=True, read_only=True)\n    # rating = serializers.IntegerField(required=False)\n    # specification = SpecificationSerializer(many=True, required=False)",
        "detail": "backend.store.serializers",
        "documentation": {}
    },
    {
        "label": "ProductFaqSerializer",
        "kind": 6,
        "importPath": "backend.store.serializers",
        "description": "backend.store.serializers",
        "peekOfCode": "class ProductFaqSerializer(serializers.ModelSerializer):\n    # Serialize the related Product model\n    product = ProductSerializer()\n    class Meta:\n        model = ProductFaq\n        fields = '__all__'\n    def __init__(self, *args, **kwargs):\n        super(ProductFaqSerializer, self).__init__(*args, **kwargs)\n        # Customize serialization depth based on the request method.\n        request = self.context.get('request')",
        "detail": "backend.store.serializers",
        "documentation": {}
    },
    {
        "label": "CartSerializer",
        "kind": 6,
        "importPath": "backend.store.serializers",
        "description": "backend.store.serializers",
        "peekOfCode": "class CartSerializer(serializers.ModelSerializer):\n    # Serialize the related Product model\n    product = ProductSerializer()  \n    class Meta:\n        model = Cart\n        fields = '__all__'\n    def __init__(self, *args, **kwargs):\n        super(CartSerializer, self).__init__(*args, **kwargs)\n        # Customize serialization depth based on the request method.\n        request = self.context.get('request')",
        "detail": "backend.store.serializers",
        "documentation": {}
    },
    {
        "label": "CartOrderItemSerializer",
        "kind": 6,
        "importPath": "backend.store.serializers",
        "description": "backend.store.serializers",
        "peekOfCode": "class CartOrderItemSerializer(serializers.ModelSerializer):\n    # Serialize the related Product model\n    # product = ProductSerializer()  \n    class Meta:\n        model = CartOrderItem\n        fields = '__all__'\n    def __init__(self, *args, **kwargs):\n        super(CartOrderItemSerializer, self).__init__(*args, **kwargs)\n        # Customize serialization depth based on the request method.\n        request = self.context.get('request')",
        "detail": "backend.store.serializers",
        "documentation": {}
    },
    {
        "label": "CartOrderSerializer",
        "kind": 6,
        "importPath": "backend.store.serializers",
        "description": "backend.store.serializers",
        "peekOfCode": "class CartOrderSerializer(serializers.ModelSerializer):\n    # Serialize related CartOrderItem models\n    orderitem = CartOrderItemSerializer(many=True, read_only=True)\n    class Meta:\n        model = CartOrder\n        fields = '__all__'\n    def __init__(self, *args, **kwargs):\n        super(CartOrderSerializer, self).__init__(*args, **kwargs)\n        # Customize serialization depth based on the request method.\n        request = self.context.get('request')",
        "detail": "backend.store.serializers",
        "documentation": {}
    },
    {
        "label": "VendorSerializer",
        "kind": 6,
        "importPath": "backend.store.serializers",
        "description": "backend.store.serializers",
        "peekOfCode": "class VendorSerializer(serializers.ModelSerializer):\n    # Serialize related CartOrderItem models\n    user = UserSerializer(read_only=True)\n    class Meta:\n        model = Vendor\n        fields = '__all__'\n    def __init__(self, *args, **kwargs):\n        super(VendorSerializer, self).__init__(*args, **kwargs)\n        # Customize serialization depth based on the request method.\n        request = self.context.get('request')",
        "detail": "backend.store.serializers",
        "documentation": {}
    },
    {
        "label": "ReviewSerializer",
        "kind": 6,
        "importPath": "backend.store.serializers",
        "description": "backend.store.serializers",
        "peekOfCode": "class ReviewSerializer(serializers.ModelSerializer):\n    # Serialize the related Product model\n    product = ProductSerializer()\n    profile = ProfileSerializer()\n    class Meta:\n        model = Review\n        fields = '__all__'\n    def __init__(self, *args, **kwargs):\n        super(ReviewSerializer, self).__init__(*args, **kwargs)\n        # Customize serialization depth based on the request method.",
        "detail": "backend.store.serializers",
        "documentation": {}
    },
    {
        "label": "WishlistSerializer",
        "kind": 6,
        "importPath": "backend.store.serializers",
        "description": "backend.store.serializers",
        "peekOfCode": "class WishlistSerializer(serializers.ModelSerializer):\n    # Serialize the related Product model\n    product = ProductSerializer()\n    class Meta:\n        model = Wishlist\n        fields = '__all__'\n    def __init__(self, *args, **kwargs):\n        super(WishlistSerializer, self).__init__(*args, **kwargs)\n        # Customize serialization depth based on the request method.\n        request = self.context.get('request')",
        "detail": "backend.store.serializers",
        "documentation": {}
    },
    {
        "label": "AddressSerializer",
        "kind": 6,
        "importPath": "backend.store.serializers",
        "description": "backend.store.serializers",
        "peekOfCode": "class AddressSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Address\n        fields = '__all__'\n    def __init__(self, *args, **kwargs):\n        super(AddressSerializer, self).__init__(*args, **kwargs)\n        # Customize serialization depth based on the request method.\n        request = self.context.get('request')\n        if request and request.method == 'POST':\n            # When creating a new address, set serialization depth to 0.",
        "detail": "backend.store.serializers",
        "documentation": {}
    },
    {
        "label": "CancelledOrderSerializer",
        "kind": 6,
        "importPath": "backend.store.serializers",
        "description": "backend.store.serializers",
        "peekOfCode": "class CancelledOrderSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = CancelledOrder\n        fields = '__all__'\n    def __init__(self, *args, **kwargs):\n        super(CancelledOrderSerializer, self).__init__(*args, **kwargs)\n        # Customize serialization depth based on the request method.\n        request = self.context.get('request')\n        if request and request.method == 'POST':\n            # When creating a new cancelled order, set serialization depth to 0.",
        "detail": "backend.store.serializers",
        "documentation": {}
    },
    {
        "label": "CouponSerializer",
        "kind": 6,
        "importPath": "backend.store.serializers",
        "description": "backend.store.serializers",
        "peekOfCode": "class CouponSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Coupon\n        fields = '__all__'\n    def __init__(self, *args, **kwargs):\n        super(CouponSerializer, self).__init__(*args, **kwargs)\n        # Customize serialization depth based on the request method.\n        request = self.context.get('request')\n        if request and request.method == 'POST':\n            # When creating a new coupon, set serialization depth to 0.",
        "detail": "backend.store.serializers",
        "documentation": {}
    },
    {
        "label": "CouponUsersSerializer",
        "kind": 6,
        "importPath": "backend.store.serializers",
        "description": "backend.store.serializers",
        "peekOfCode": "class CouponUsersSerializer(serializers.ModelSerializer):\n    # Serialize the related Coupon model\n    coupon =  CouponSerializer()\n    class Meta:\n        model = CouponUsers\n        fields = '__all__'\n    def __init__(self, *args, **kwargs):\n        super(CouponUsersSerializer, self).__init__(*args, **kwargs)\n        # Customize serialization depth based on the request method.\n        request = self.context.get('request')",
        "detail": "backend.store.serializers",
        "documentation": {}
    },
    {
        "label": "DeliveryCouriersSerializer",
        "kind": 6,
        "importPath": "backend.store.serializers",
        "description": "backend.store.serializers",
        "peekOfCode": "class DeliveryCouriersSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = DeliveryCouriers\n        fields = '__all__'\nclass NotificationSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Notification\n        fields = '__all__'\n    def __init__(self, *args, **kwargs):\n        super(NotificationSerializer, self).__init__(*args, **kwargs)",
        "detail": "backend.store.serializers",
        "documentation": {}
    },
    {
        "label": "NotificationSerializer",
        "kind": 6,
        "importPath": "backend.store.serializers",
        "description": "backend.store.serializers",
        "peekOfCode": "class NotificationSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Notification\n        fields = '__all__'\n    def __init__(self, *args, **kwargs):\n        super(NotificationSerializer, self).__init__(*args, **kwargs)\n        # Customize serialization depth based on the request method.\n        request = self.context.get('request')\n        if request and request.method == 'POST':\n            # When creating a new coupon user, set serialization depth to 0.",
        "detail": "backend.store.serializers",
        "documentation": {}
    },
    {
        "label": "SummarySerializer",
        "kind": 6,
        "importPath": "backend.store.serializers",
        "description": "backend.store.serializers",
        "peekOfCode": "class SummarySerializer(serializers.Serializer):\n    products = serializers.IntegerField()\n    orders = serializers.IntegerField()\n    revenue = serializers.DecimalField(max_digits=10, decimal_places=2)\nclass EarningSummarySerializer(serializers.Serializer):\n    monthly_revenue = serializers.DecimalField(max_digits=10, decimal_places=2)\n    total_revenue = serializers.DecimalField(max_digits=10, decimal_places=2)\nclass CouponSummarySerializer(serializers.Serializer):\n    total_coupons = serializers.IntegerField(default=0)\n    active_coupons = serializers.IntegerField(default=0)",
        "detail": "backend.store.serializers",
        "documentation": {}
    },
    {
        "label": "EarningSummarySerializer",
        "kind": 6,
        "importPath": "backend.store.serializers",
        "description": "backend.store.serializers",
        "peekOfCode": "class EarningSummarySerializer(serializers.Serializer):\n    monthly_revenue = serializers.DecimalField(max_digits=10, decimal_places=2)\n    total_revenue = serializers.DecimalField(max_digits=10, decimal_places=2)\nclass CouponSummarySerializer(serializers.Serializer):\n    total_coupons = serializers.IntegerField(default=0)\n    active_coupons = serializers.IntegerField(default=0)\nclass NotificationSummarySerializer(serializers.Serializer):\n    un_read_noti = serializers.IntegerField(default=0)\n    read_noti = serializers.IntegerField(default=0)\n    all_noti = serializers.IntegerField(default=0)",
        "detail": "backend.store.serializers",
        "documentation": {}
    },
    {
        "label": "CouponSummarySerializer",
        "kind": 6,
        "importPath": "backend.store.serializers",
        "description": "backend.store.serializers",
        "peekOfCode": "class CouponSummarySerializer(serializers.Serializer):\n    total_coupons = serializers.IntegerField(default=0)\n    active_coupons = serializers.IntegerField(default=0)\nclass NotificationSummarySerializer(serializers.Serializer):\n    un_read_noti = serializers.IntegerField(default=0)\n    read_noti = serializers.IntegerField(default=0)\n    all_noti = serializers.IntegerField(default=0)",
        "detail": "backend.store.serializers",
        "documentation": {}
    },
    {
        "label": "NotificationSummarySerializer",
        "kind": 6,
        "importPath": "backend.store.serializers",
        "description": "backend.store.serializers",
        "peekOfCode": "class NotificationSummarySerializer(serializers.Serializer):\n    un_read_noti = serializers.IntegerField(default=0)\n    read_noti = serializers.IntegerField(default=0)\n    all_noti = serializers.IntegerField(default=0)",
        "detail": "backend.store.serializers",
        "documentation": {}
    },
    {
        "label": "ConfigSettingsDetailView",
        "kind": 6,
        "importPath": "backend.store.views",
        "description": "backend.store.views",
        "peekOfCode": "class ConfigSettingsDetailView(generics.RetrieveAPIView):\n    serializer_class = ConfigSettingsSerializer\n    def get_object(self):\n        # Use the get method to retrieve the first ConfigSettings object\n        return ConfigSettings.objects.first()\n    permission_classes = (AllowAny,)\nclass CategoryListView(generics.ListAPIView):\n    serializer_class = CategorySerializer\n    queryset = Category.objects.filter(active=True)\n    permission_classes = (AllowAny,)",
        "detail": "backend.store.views",
        "documentation": {}
    },
    {
        "label": "CategoryListView",
        "kind": 6,
        "importPath": "backend.store.views",
        "description": "backend.store.views",
        "peekOfCode": "class CategoryListView(generics.ListAPIView):\n    serializer_class = CategorySerializer\n    queryset = Category.objects.filter(active=True)\n    permission_classes = (AllowAny,)\nclass BrandListView(generics.ListAPIView):\n    serializer_class = BrandSerializer\n    queryset = Brand.objects.filter(active=True)\n    permission_classes = (AllowAny,)\nclass FeaturedProductListView(generics.ListAPIView):\n    serializer_class = ProductSerializer",
        "detail": "backend.store.views",
        "documentation": {}
    },
    {
        "label": "BrandListView",
        "kind": 6,
        "importPath": "backend.store.views",
        "description": "backend.store.views",
        "peekOfCode": "class BrandListView(generics.ListAPIView):\n    serializer_class = BrandSerializer\n    queryset = Brand.objects.filter(active=True)\n    permission_classes = (AllowAny,)\nclass FeaturedProductListView(generics.ListAPIView):\n    serializer_class = ProductSerializer\n    queryset = Product.objects.filter(status=\"published\", featured=True)[:3]\n    permission_classes = (AllowAny,)\nclass ProductListView(generics.ListAPIView):\n    serializer_class = ProductSerializer",
        "detail": "backend.store.views",
        "documentation": {}
    },
    {
        "label": "FeaturedProductListView",
        "kind": 6,
        "importPath": "backend.store.views",
        "description": "backend.store.views",
        "peekOfCode": "class FeaturedProductListView(generics.ListAPIView):\n    serializer_class = ProductSerializer\n    queryset = Product.objects.filter(status=\"published\", featured=True)[:3]\n    permission_classes = (AllowAny,)\nclass ProductListView(generics.ListAPIView):\n    serializer_class = ProductSerializer\n    queryset = Product.objects.filter(status=\"published\")\n    permission_classes = (AllowAny,)\nclass ProductDetailView(generics.RetrieveAPIView):\n    serializer_class = ProductSerializer",
        "detail": "backend.store.views",
        "documentation": {}
    },
    {
        "label": "ProductListView",
        "kind": 6,
        "importPath": "backend.store.views",
        "description": "backend.store.views",
        "peekOfCode": "class ProductListView(generics.ListAPIView):\n    serializer_class = ProductSerializer\n    queryset = Product.objects.filter(status=\"published\")\n    permission_classes = (AllowAny,)\nclass ProductDetailView(generics.RetrieveAPIView):\n    serializer_class = ProductSerializer\n    def get_object(self):\n        # Retrieve the product using the provided slug from the URL\n        slug = self.kwargs.get(\"slug\")\n        return Product.objects.get(slug=slug)",
        "detail": "backend.store.views",
        "documentation": {}
    },
    {
        "label": "ProductDetailView",
        "kind": 6,
        "importPath": "backend.store.views",
        "description": "backend.store.views",
        "peekOfCode": "class ProductDetailView(generics.RetrieveAPIView):\n    serializer_class = ProductSerializer\n    def get_object(self):\n        # Retrieve the product using the provided slug from the URL\n        slug = self.kwargs.get(\"slug\")\n        return Product.objects.get(slug=slug)\nclass CartApiView(generics.ListCreateAPIView):\n    serializer_class = CartSerializer\n    queryset = Cart.objects.all()\n    permission_classes = (AllowAny,)",
        "detail": "backend.store.views",
        "documentation": {}
    },
    {
        "label": "CartApiView",
        "kind": 6,
        "importPath": "backend.store.views",
        "description": "backend.store.views",
        "peekOfCode": "class CartApiView(generics.ListCreateAPIView):\n    serializer_class = CartSerializer\n    queryset = Cart.objects.all()\n    permission_classes = (AllowAny,)\n    def create(self, request, *args, **kwargs):\n        payload = request.data\n        product_id = payload[\"product\"]\n        user_id = payload[\"user\"]\n        qty = payload[\"qty\"]\n        price = payload[\"price\"]",
        "detail": "backend.store.views",
        "documentation": {}
    },
    {
        "label": "CartListView",
        "kind": 6,
        "importPath": "backend.store.views",
        "description": "backend.store.views",
        "peekOfCode": "class CartListView(generics.ListAPIView):\n    serializer_class = CartSerializer\n    permission_classes = (AllowAny,)\n    def get_queryset(self):\n        cart_id = self.kwargs[\"cart_id\"]\n        user_id = self.kwargs.get(\n            \"user_id\"\n        )  # Use get() method to handle the case where user_id is not present\n        if user_id is not None:\n            user = User.objects.get(id=user_id)",
        "detail": "backend.store.views",
        "documentation": {}
    },
    {
        "label": "CartTotalView",
        "kind": 6,
        "importPath": "backend.store.views",
        "description": "backend.store.views",
        "peekOfCode": "class CartTotalView(generics.ListAPIView):\n    serializer_class = CartSerializer\n    permission_classes = (AllowAny,)\n    def get_queryset(self):\n        cart_id = self.kwargs[\"cart_id\"]\n        user_id = self.kwargs.get(\n            \"user_id\"\n        )  # Use get() method to handle the case where user_id is not present\n        if user_id is not None:\n            user = User.objects.get(id=user_id)",
        "detail": "backend.store.views",
        "documentation": {}
    },
    {
        "label": "CartDetailView",
        "kind": 6,
        "importPath": "backend.store.views",
        "description": "backend.store.views",
        "peekOfCode": "class CartDetailView(generics.RetrieveAPIView):\n    # Define the serializer class for the view\n    serializer_class = CartSerializer\n    # Specify the lookup field for retrieving objects using 'cart_id'\n    lookup_field = \"cart_id\"\n    # Add a permission class for the view\n    permission_classes = (AllowAny,)\n    def get_queryset(self):\n        # Get 'cart_id' and 'user_id' from the URL kwargs\n        cart_id = self.kwargs[\"cart_id\"]",
        "detail": "backend.store.views",
        "documentation": {}
    },
    {
        "label": "CartItemDeleteView",
        "kind": 6,
        "importPath": "backend.store.views",
        "description": "backend.store.views",
        "peekOfCode": "class CartItemDeleteView(generics.DestroyAPIView):\n    serializer_class = CartSerializer\n    lookup_field = \"cart_id\"\n    def get_object(self):\n        cart_id = self.kwargs[\"cart_id\"]\n        item_id = self.kwargs[\"item_id\"]\n        user_id = self.kwargs.get(\"user_id\")\n        if user_id is not None:\n            user = get_object_or_404(User, id=user_id)\n            cart = get_object_or_404(Cart, cart_id=cart_id, id=item_id, user=user)",
        "detail": "backend.store.views",
        "documentation": {}
    },
    {
        "label": "CreateOrderView",
        "kind": 6,
        "importPath": "backend.store.views",
        "description": "backend.store.views",
        "peekOfCode": "class CreateOrderView(generics.CreateAPIView):\n    serializer_class = CartOrderSerializer\n    queryset = CartOrder.objects.all()\n    permission_classes = (AllowAny,)\n    def create(self, request, *args, **kwargs):\n        payload = request.data\n        full_name = payload[\"full_name\"]\n        email = payload[\"email\"]\n        mobile = payload[\"mobile\"]\n        address = payload[\"address\"]",
        "detail": "backend.store.views",
        "documentation": {}
    },
    {
        "label": "CheckoutView",
        "kind": 6,
        "importPath": "backend.store.views",
        "description": "backend.store.views",
        "peekOfCode": "class CheckoutView(generics.RetrieveAPIView):\n    serializer_class = CartOrderSerializer\n    lookup_field = \"order_oid\"\n    def get_object(self):\n        order_oid = self.kwargs[\"order_oid\"]\n        cart = get_object_or_404(CartOrder, oid=order_oid)\n        return cart\nclass CouponApiView(generics.CreateAPIView):\n    serializer_class = CartOrderSerializer\n    def create(self, request, *args, **kwargs):",
        "detail": "backend.store.views",
        "documentation": {}
    },
    {
        "label": "CouponApiView",
        "kind": 6,
        "importPath": "backend.store.views",
        "description": "backend.store.views",
        "peekOfCode": "class CouponApiView(generics.CreateAPIView):\n    serializer_class = CartOrderSerializer\n    def create(self, request, *args, **kwargs):\n        payload = request.data\n        order_oid = payload[\"order_oid\"]\n        coupon_code = payload[\"coupon_code\"]\n        print(\"order_oid =======\", order_oid)\n        print(\"coupon_code =======\", coupon_code)\n        order = CartOrder.objects.get(oid=order_oid)\n        coupon = Coupon.objects.filter(code__iexact=coupon_code, active=True).first()",
        "detail": "backend.store.views",
        "documentation": {}
    },
    {
        "label": "StripeCheckoutView",
        "kind": 6,
        "importPath": "backend.store.views",
        "description": "backend.store.views",
        "peekOfCode": "class StripeCheckoutView(generics.CreateAPIView):\n    serializer_class = CartOrderSerializer\n    def create(self, request, *args, **kwargs):\n        order_oid = self.kwargs[\"order_oid\"]\n        order = CartOrder.objects.filter(oid=order_oid).first()\n        if not order:\n            return Response(\n                {\"error\": \"Order not found\"}, status=status.HTTP_404_NOT_FOUND\n            )\n        try:",
        "detail": "backend.store.views",
        "documentation": {}
    },
    {
        "label": "PaymentSuccessView",
        "kind": 6,
        "importPath": "backend.store.views",
        "description": "backend.store.views",
        "peekOfCode": "class PaymentSuccessView(generics.CreateAPIView):\n    serializer_class = CartOrderSerializer\n    queryset = CartOrder.objects.all()\n    def create(self, request, *args, **kwargs):\n        payload = request.data\n        order_oid = payload[\"order_oid\"]\n        session_id = payload[\"session_id\"]\n        payapl_order_id = payload[\"payapl_order_id\"]\n        order = CartOrder.objects.get(oid=order_oid)\n        order_items = CartOrderItem.objects.filter(order=order)",
        "detail": "backend.store.views",
        "documentation": {}
    },
    {
        "label": "ReviewRatingAPIView",
        "kind": 6,
        "importPath": "backend.store.views",
        "description": "backend.store.views",
        "peekOfCode": "class ReviewRatingAPIView(generics.CreateAPIView):\n    serializer_class = ReviewSerializer\n    queryset = Review.objects.all()\n    permission_classes = (AllowAny,)\n    def create(self, request, *args, **kwargs):\n        payload = request.data\n        user_id = payload[\"user_id\"]\n        product_id = payload[\"product_id\"]\n        rating = payload[\"rating\"]\n        review = payload[\"review\"]",
        "detail": "backend.store.views",
        "documentation": {}
    },
    {
        "label": "ReviewListView",
        "kind": 6,
        "importPath": "backend.store.views",
        "description": "backend.store.views",
        "peekOfCode": "class ReviewListView(generics.ListAPIView):\n    serializer_class = ReviewSerializer\n    permission_classes = (AllowAny,)\n    def get_queryset(self):\n        product_id = self.kwargs[\"product_id\"]\n        product = Product.objects.get(id=product_id)\n        reviews = Review.objects.filter(product=product)\n        return reviews\nclass SearchProductsAPIView(generics.ListAPIView):\n    serializer_class = ProductSerializer",
        "detail": "backend.store.views",
        "documentation": {}
    },
    {
        "label": "SearchProductsAPIView",
        "kind": 6,
        "importPath": "backend.store.views",
        "description": "backend.store.views",
        "peekOfCode": "class SearchProductsAPIView(generics.ListAPIView):\n    serializer_class = ProductSerializer\n    permission_classes = (AllowAny,)\n    def get_queryset(self):\n        query = self.request.GET.get(\"query\")\n        print(\"query =======\", query)\n        products = Product.objects.filter(status=\"published\", title__icontains=query)\n        return products",
        "detail": "backend.store.views",
        "documentation": {}
    },
    {
        "label": "send_notification",
        "kind": 2,
        "importPath": "backend.store.views",
        "description": "backend.store.views",
        "peekOfCode": "def send_notification(user=None, vendor=None, order=None, order_item=None):\n    Notification.objects.create(\n        user=user,\n        vendor=vendor,\n        order=order,\n        order_item=order_item,\n    )\nclass ConfigSettingsDetailView(generics.RetrieveAPIView):\n    serializer_class = ConfigSettingsSerializer\n    def get_object(self):",
        "detail": "backend.store.views",
        "documentation": {}
    },
    {
        "label": "get_access_token",
        "kind": 2,
        "importPath": "backend.store.views",
        "description": "backend.store.views",
        "peekOfCode": "def get_access_token(client_id, secret_key):\n    # Function to get access token from PayPal API\n    token_url = \"https://api.sandbox.paypal.com/v1/oauth2/token\"\n    data = {\"grant_type\": \"client_credentials\"}\n    auth = (client_id, secret_key)\n    response = requests.post(token_url, data=data, auth=auth)\n    if response.status_code == 200:\n        print(\"access_token ====\", response.json()[\"access_token\"])\n        return response.json()[\"access_token\"]\n    else:",
        "detail": "backend.store.views",
        "documentation": {}
    },
    {
        "label": "stripe.api_key",
        "kind": 5,
        "importPath": "backend.store.views",
        "description": "backend.store.views",
        "peekOfCode": "stripe.api_key = settings.STRIPE_SECRET_KEY\nPAYPAL_CLIENT_ID = settings.PAYPAL_CLIENT_ID\nPAYPAL_SECRET_ID = settings.PAYPAL_SECRET_ID\ndef send_notification(user=None, vendor=None, order=None, order_item=None):\n    Notification.objects.create(\n        user=user,\n        vendor=vendor,\n        order=order,\n        order_item=order_item,\n    )",
        "detail": "backend.store.views",
        "documentation": {}
    },
    {
        "label": "PAYPAL_CLIENT_ID",
        "kind": 5,
        "importPath": "backend.store.views",
        "description": "backend.store.views",
        "peekOfCode": "PAYPAL_CLIENT_ID = settings.PAYPAL_CLIENT_ID\nPAYPAL_SECRET_ID = settings.PAYPAL_SECRET_ID\ndef send_notification(user=None, vendor=None, order=None, order_item=None):\n    Notification.objects.create(\n        user=user,\n        vendor=vendor,\n        order=order,\n        order_item=order_item,\n    )\nclass ConfigSettingsDetailView(generics.RetrieveAPIView):",
        "detail": "backend.store.views",
        "documentation": {}
    },
    {
        "label": "PAYPAL_SECRET_ID",
        "kind": 5,
        "importPath": "backend.store.views",
        "description": "backend.store.views",
        "peekOfCode": "PAYPAL_SECRET_ID = settings.PAYPAL_SECRET_ID\ndef send_notification(user=None, vendor=None, order=None, order_item=None):\n    Notification.objects.create(\n        user=user,\n        vendor=vendor,\n        order=order,\n        order_item=order_item,\n    )\nclass ConfigSettingsDetailView(generics.RetrieveAPIView):\n    serializer_class = ConfigSettingsSerializer",
        "detail": "backend.store.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.userauths.migrations.0001_initial",
        "description": "backend.userauths.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n        ('addon', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='User',\n            fields=[",
        "detail": "backend.userauths.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.userauths.migrations.0002_alter_profile_country",
        "description": "backend.userauths.migrations.0002_alter_profile_country",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('userauths', '0001_initial'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='profile',\n            name='country',\n            field=models.CharField(blank=True, max_length=1000, null=True),\n        ),",
        "detail": "backend.userauths.migrations.0002_alter_profile_country",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.userauths.migrations.0003_user_reset_token_alter_user_otp",
        "description": "backend.userauths.migrations.0003_user_reset_token_alter_user_otp",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('userauths', '0002_alter_profile_country'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='user',\n            name='reset_token',\n            field=models.CharField(blank=True, max_length=1000, null=True),\n        ),",
        "detail": "backend.userauths.migrations.0003_user_reset_token_alter_user_otp",
        "documentation": {}
    },
    {
        "label": "UserAdmin",
        "kind": 6,
        "importPath": "backend.userauths.admin",
        "description": "backend.userauths.admin",
        "peekOfCode": "class UserAdmin(admin.ModelAdmin):\n    search_fields  = ['full_name', 'username', 'email',  'phone']\n    list_display  = ['username', 'email', 'phone']\nclass ProfileAdmin(admin.ModelAdmin):\n    search_fields  = ['user']\n    list_display = ['thumbnail', 'user', 'full_name']\nadmin.site.register(User, UserAdmin)\nadmin.site.register(Profile, ProfileAdmin)",
        "detail": "backend.userauths.admin",
        "documentation": {}
    },
    {
        "label": "ProfileAdmin",
        "kind": 6,
        "importPath": "backend.userauths.admin",
        "description": "backend.userauths.admin",
        "peekOfCode": "class ProfileAdmin(admin.ModelAdmin):\n    search_fields  = ['user']\n    list_display = ['thumbnail', 'user', 'full_name']\nadmin.site.register(User, UserAdmin)\nadmin.site.register(Profile, ProfileAdmin)",
        "detail": "backend.userauths.admin",
        "documentation": {}
    },
    {
        "label": "UserauthsConfig",
        "kind": 6,
        "importPath": "backend.userauths.apps",
        "description": "backend.userauths.apps",
        "peekOfCode": "class UserauthsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'userauths'",
        "detail": "backend.userauths.apps",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "backend.userauths.models",
        "description": "backend.userauths.models",
        "peekOfCode": "class User(AbstractUser):\n    username = models.CharField(max_length=500, null=True, blank=True)\n    email = models.EmailField(unique=True)\n    full_name = models.CharField(max_length=500, null=True, blank=True)\n    phone = models.CharField(max_length=500)\n    otp = models.CharField(max_length=1000, null=True, blank=True)\n    reset_token  = models.CharField(max_length=1000, null=True, blank=True)\n    USERNAME_FIELD = 'email'\n    REQUIRED_FIELDS = ['username']\n    def __str__(self):",
        "detail": "backend.userauths.models",
        "documentation": {}
    },
    {
        "label": "Profile",
        "kind": 6,
        "importPath": "backend.userauths.models",
        "description": "backend.userauths.models",
        "peekOfCode": "class Profile(models.Model):\n    user = models.OneToOneField(User, on_delete=models.CASCADE)\n    image = models.ImageField(upload_to='accounts/users', default='default/default-user.jpg', null=True, blank=True)\n    full_name = models.CharField(max_length=1000, null=True, blank=True)\n    about = models.TextField( null=True, blank=True)\n    gender = models.CharField(max_length=500, choices=GENDER, null=True, blank=True)\n    country = models.CharField(max_length=1000, null=True, blank=True)\n    city = models.CharField(max_length=500, null=True, blank=True)\n    state = models.CharField(max_length=500, null=True, blank=True)\n    address = models.CharField(max_length=1000, null=True, blank=True)",
        "detail": "backend.userauths.models",
        "documentation": {}
    },
    {
        "label": "user_directory_path",
        "kind": 2,
        "importPath": "backend.userauths.models",
        "description": "backend.userauths.models",
        "peekOfCode": "def user_directory_path(instance, filename):\n    user = None\n    if hasattr(instance, 'user') and instance.user:\n        user = instance.user\n    elif hasattr(instance, 'vendor') and hasattr(instance.vendor, 'user') and instance.vendor.user:\n        user = instance.vendor.user\n    elif hasattr(instance, 'product') and hasattr(instance.product.vendor, 'user') and instance.product.vendor.user:\n        user = instance.product.vendor.user\n    if user:\n        ext = filename.split('.')[-1]",
        "detail": "backend.userauths.models",
        "documentation": {}
    },
    {
        "label": "create_user_profile",
        "kind": 2,
        "importPath": "backend.userauths.models",
        "description": "backend.userauths.models",
        "peekOfCode": "def create_user_profile(sender, instance, created, **kwargs):\n\tif created:\n\t\tProfile.objects.create(user=instance)\ndef save_user_profile(sender, instance, **kwargs):\n\tinstance.profile.save()\npost_save.connect(create_user_profile, sender=User)\npost_save.connect(save_user_profile, sender=User)",
        "detail": "backend.userauths.models",
        "documentation": {}
    },
    {
        "label": "save_user_profile",
        "kind": 2,
        "importPath": "backend.userauths.models",
        "description": "backend.userauths.models",
        "peekOfCode": "def save_user_profile(sender, instance, **kwargs):\n\tinstance.profile.save()\npost_save.connect(create_user_profile, sender=User)\npost_save.connect(save_user_profile, sender=User)",
        "detail": "backend.userauths.models",
        "documentation": {}
    },
    {
        "label": "GENDER",
        "kind": 5,
        "importPath": "backend.userauths.models",
        "description": "backend.userauths.models",
        "peekOfCode": "GENDER = (\n    (\"female\", \"Female\"),\n    (\"male\", \"Male\"),\n)\ndef user_directory_path(instance, filename):\n    user = None\n    if hasattr(instance, 'user') and instance.user:\n        user = instance.user\n    elif hasattr(instance, 'vendor') and hasattr(instance.vendor, 'user') and instance.vendor.user:\n        user = instance.vendor.user",
        "detail": "backend.userauths.models",
        "documentation": {}
    },
    {
        "label": "MyTokenObtainPairSerializer",
        "kind": 6,
        "importPath": "backend.userauths.serializer",
        "description": "backend.userauths.serializer",
        "peekOfCode": "class MyTokenObtainPairSerializer(TokenObtainPairSerializer):\n    '''\n    class MyTokenObtainPairSerializer(TokenObtainPairSerializer):: This line creates a new token serializer called MyTokenObtainPairSerializer that is based on an existing one called TokenObtainPairSerializer. Think of it as customizing the way tokens work.\n    @classmethod: This line indicates that the following function is a class method, which means it belongs to the class itself and not to an instance (object) of the class.\n    def get_token(cls, user):: This is a function (or method) that gets called when we want to create a token for a user. The user is the person who's trying to access something on the website.\n    token = super().get_token(user): Here, it's asking for a regular token from the original token serializer (the one it's based on). This regular token is like a key to enter the website.\n    token['full_name'] = user.full_name, token['email'] = user.email, token['username'] = user.username: This code is customizing the token by adding extra information to it. For example, it's putting the user's full name, email, and username into the token. These are like special notes attached to the key.\n    return token: Finally, the customized token is given back to the user. Now, when this token is used, it not only lets the user in but also carries their full name, email, and username as extra information, which the website can use as needed.\n    '''\n    @classmethod",
        "detail": "backend.userauths.serializer",
        "documentation": {}
    },
    {
        "label": "RegisterSerializer",
        "kind": 6,
        "importPath": "backend.userauths.serializer",
        "description": "backend.userauths.serializer",
        "peekOfCode": "class RegisterSerializer(serializers.ModelSerializer):\n    # Define fields for the serializer, including password and password2\n    password = serializers.CharField(write_only=True, required=True, validators=[validate_password])\n    password2 = serializers.CharField(write_only=True, required=True)\n    class Meta:\n        # Specify the model that this serializer is associated with\n        model = User\n        # Define the fields from the model that should be included in the serializer\n        fields = ('full_name', 'email', 'phone', 'password', 'password2')\n    def validate(self, attrs):",
        "detail": "backend.userauths.serializer",
        "documentation": {}
    },
    {
        "label": "UserSerializer",
        "kind": 6,
        "importPath": "backend.userauths.serializer",
        "description": "backend.userauths.serializer",
        "peekOfCode": "class UserSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = User\n        fields = '__all__'\nclass ProfileSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Profile\n        fields = '__all__'\n    # def __init__(self, *args, **kwargs):\n    #     super(ProfileSerializer, self).__init__(*args, **kwargs)",
        "detail": "backend.userauths.serializer",
        "documentation": {}
    },
    {
        "label": "ProfileSerializer",
        "kind": 6,
        "importPath": "backend.userauths.serializer",
        "description": "backend.userauths.serializer",
        "peekOfCode": "class ProfileSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Profile\n        fields = '__all__'\n    # def __init__(self, *args, **kwargs):\n    #     super(ProfileSerializer, self).__init__(*args, **kwargs)\n    #     # Customize serialization depth based on the request method.\n    #     request = self.context.get('request')\n    #     if request and request.method == 'POST':\n    #         # When creating a new product FAQ, set serialization depth to 0.",
        "detail": "backend.userauths.serializer",
        "documentation": {}
    },
    {
        "label": "PasswordResetSerializer",
        "kind": 6,
        "importPath": "backend.userauths.serializer",
        "description": "backend.userauths.serializer",
        "peekOfCode": "class PasswordResetSerializer(serializers.Serializer):\n    email = serializers.EmailField()",
        "detail": "backend.userauths.serializer",
        "documentation": {}
    },
    {
        "label": "MyTokenObtainPairView",
        "kind": 6,
        "importPath": "backend.userauths.views",
        "description": "backend.userauths.views",
        "peekOfCode": "class MyTokenObtainPairView(TokenObtainPairView):\n    # Here, it specifies the serializer class to be used with this view.\n    serializer_class = MyTokenObtainPairSerializer\n# This code defines another DRF View class called RegisterView, which inherits from generics.CreateAPIView.\nclass RegisterView(generics.CreateAPIView):\n    # It sets the queryset for this view to retrieve all User objects.\n    queryset = User.objects.all()\n    # It specifies that the view allows any user (no authentication required).\n    permission_classes = (AllowAny,)\n    # It sets the serializer class to be used with this view.",
        "detail": "backend.userauths.views",
        "documentation": {}
    },
    {
        "label": "RegisterView",
        "kind": 6,
        "importPath": "backend.userauths.views",
        "description": "backend.userauths.views",
        "peekOfCode": "class RegisterView(generics.CreateAPIView):\n    # It sets the queryset for this view to retrieve all User objects.\n    queryset = User.objects.all()\n    # It specifies that the view allows any user (no authentication required).\n    permission_classes = (AllowAny,)\n    # It sets the serializer class to be used with this view.\n    serializer_class = RegisterSerializer\n# This is a DRF view defined as a Python function using the @api_view decorator.\n@api_view(['GET'])\ndef getRoutes(request):",
        "detail": "backend.userauths.views",
        "documentation": {}
    },
    {
        "label": "ProfileView",
        "kind": 6,
        "importPath": "backend.userauths.views",
        "description": "backend.userauths.views",
        "peekOfCode": "class ProfileView(generics.RetrieveAPIView):\n    permission_classes = (AllowAny,)\n    serializer_class = ProfileSerializer\n    def get_object(self):\n        user_id = self.kwargs['user_id']\n        user = User.objects.get(id=user_id)\n        profile = Profile.objects.get(user=user)\n        return profile\ndef generate_numeric_otp(length=7):\n        # Generate a random 7-digit OTP",
        "detail": "backend.userauths.views",
        "documentation": {}
    },
    {
        "label": "PasswordEmailVerify",
        "kind": 6,
        "importPath": "backend.userauths.views",
        "description": "backend.userauths.views",
        "peekOfCode": "class PasswordEmailVerify(generics.RetrieveAPIView):\n    permission_classes = (AllowAny,)\n    serializer_class = UserSerializer\n    def get_object(self):\n        email = self.kwargs['email']\n        user = User.objects.get(email=email)\n        if user:\n            user.otp = generate_numeric_otp()\n            uidb64 = user.pk\n             # Generate a token and include it in the reset link sent via email",
        "detail": "backend.userauths.views",
        "documentation": {}
    },
    {
        "label": "PasswordChangeView",
        "kind": 6,
        "importPath": "backend.userauths.views",
        "description": "backend.userauths.views",
        "peekOfCode": "class PasswordChangeView(generics.CreateAPIView):\n    permission_classes = (AllowAny,)\n    serializer_class = UserSerializer\n    def create(self, request, *args, **kwargs):\n        payload = request.data\n        otp = payload['otp']\n        uidb64 = payload['uidb64']\n        reset_token = payload['reset_token']\n        password = payload['password']\n        print(\"otp ======\", otp)",
        "detail": "backend.userauths.views",
        "documentation": {}
    },
    {
        "label": "getRoutes",
        "kind": 2,
        "importPath": "backend.userauths.views",
        "description": "backend.userauths.views",
        "peekOfCode": "def getRoutes(request):\n    # It defines a list of API routes that can be accessed.\n    routes = [\n        '/api/token/',\n        '/api/register/',\n        '/api/token/refresh/',\n        '/api/test/'\n    ]\n    # It returns a DRF Response object containing the list of routes.\n    return Response(routes)",
        "detail": "backend.userauths.views",
        "documentation": {}
    },
    {
        "label": "testEndPoint",
        "kind": 2,
        "importPath": "backend.userauths.views",
        "description": "backend.userauths.views",
        "peekOfCode": "def testEndPoint(request):\n    # Check if the HTTP request method is GET.\n    if request.method == 'GET':\n        # If it is a GET request, it constructs a response message including the username.\n        data = f\"Congratulations {request.user}, your API just responded to a GET request.\"\n        # It returns a DRF Response object with the response data and an HTTP status code of 200 (OK).\n        return Response({'response': data}, status=status.HTTP_200_OK)\n    # Check if the HTTP request method is POST.\n    elif request.method == 'POST':\n        try:",
        "detail": "backend.userauths.views",
        "documentation": {}
    },
    {
        "label": "generate_numeric_otp",
        "kind": 2,
        "importPath": "backend.userauths.views",
        "description": "backend.userauths.views",
        "peekOfCode": "def generate_numeric_otp(length=7):\n        # Generate a random 7-digit OTP\n        otp = ''.join([str(random.randint(0, 9)) for _ in range(length)])\n        return otp\nclass PasswordEmailVerify(generics.RetrieveAPIView):\n    permission_classes = (AllowAny,)\n    serializer_class = UserSerializer\n    def get_object(self):\n        email = self.kwargs['email']\n        user = User.objects.get(email=email)",
        "detail": "backend.userauths.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.vendor.migrations.0001_initial",
        "description": "backend.vendor.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Vendor',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "backend.vendor.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.vendor.migrations.0002_vendor_email",
        "description": "backend.vendor.migrations.0002_vendor_email",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('vendor', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='vendor',\n            name='email',\n            field=models.EmailField(blank=True, help_text='Shop Email', max_length=100, null=True),\n        ),",
        "detail": "backend.vendor.migrations.0002_vendor_email",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.vendor.migrations.0003_alter_vendor_description",
        "description": "backend.vendor.migrations.0003_alter_vendor_description",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('vendor', '0002_vendor_email'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='vendor',\n            name='description',\n            field=models.TextField(blank=True, null=True),\n        ),",
        "detail": "backend.vendor.migrations.0003_alter_vendor_description",
        "documentation": {}
    },
    {
        "label": "VendorConfig",
        "kind": 6,
        "importPath": "backend.vendor.apps",
        "description": "backend.vendor.apps",
        "peekOfCode": "class VendorConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'vendor'",
        "detail": "backend.vendor.apps",
        "documentation": {}
    },
    {
        "label": "Vendor",
        "kind": 6,
        "importPath": "backend.vendor.models",
        "description": "backend.vendor.models",
        "peekOfCode": "class Vendor(models.Model):\n    user = models.OneToOneField(\n        User, on_delete=models.SET_NULL, null=True, related_name=\"vendor\"\n    )\n    image = models.ImageField(\n        upload_to=user_directory_path, default=\"shop-image.jpg\", blank=True\n    )\n    name = models.CharField(\n        max_length=100, help_text=\"Shop Name\", null=True, blank=True\n    )",
        "detail": "backend.vendor.models",
        "documentation": {}
    },
    {
        "label": "IDENTITY_TYPE",
        "kind": 5,
        "importPath": "backend.vendor.models",
        "description": "backend.vendor.models",
        "peekOfCode": "IDENTITY_TYPE = (\n    (\"national_id_card\", \"National ID Card\"),\n    (\"drivers_licence\", \"Drives Licence\"),\n    (\"international_passport\", \"International Passport\"),\n)\nGENDER = (\n    (\"male\", \"Male\"),\n    (\"female\", \"Female\"),\n)\nCURRENCY = (",
        "detail": "backend.vendor.models",
        "documentation": {}
    },
    {
        "label": "GENDER",
        "kind": 5,
        "importPath": "backend.vendor.models",
        "description": "backend.vendor.models",
        "peekOfCode": "GENDER = (\n    (\"male\", \"Male\"),\n    (\"female\", \"Female\"),\n)\nCURRENCY = (\n    (\"USD\", \"USD\"),\n    (\"EUR\", \"EUR\"),\n    (\"GBP\", \"GBP\"),\n)\nNOTIFICATION_TYPE = (",
        "detail": "backend.vendor.models",
        "documentation": {}
    },
    {
        "label": "CURRENCY",
        "kind": 5,
        "importPath": "backend.vendor.models",
        "description": "backend.vendor.models",
        "peekOfCode": "CURRENCY = (\n    (\"USD\", \"USD\"),\n    (\"EUR\", \"EUR\"),\n    (\"GBP\", \"GBP\"),\n)\nNOTIFICATION_TYPE = (\n    (\"new_order\", \"New Order\"),\n    (\"new_offer\", \"New Offer\"),\n    (\"new_bidding\", \"New Bidding\"),\n    (\"item_arrived\", \"Item Arrived\"),",
        "detail": "backend.vendor.models",
        "documentation": {}
    },
    {
        "label": "NOTIFICATION_TYPE",
        "kind": 5,
        "importPath": "backend.vendor.models",
        "description": "backend.vendor.models",
        "peekOfCode": "NOTIFICATION_TYPE = (\n    (\"new_order\", \"New Order\"),\n    (\"new_offer\", \"New Offer\"),\n    (\"new_bidding\", \"New Bidding\"),\n    (\"item_arrived\", \"Item Arrived\"),\n    (\"item_shipped\", \"Item Shipped\"),\n    (\"item_delivered\", \"Item Delivered\"),\n    (\"tracking_id_added\", \"Tracking ID Added\"),\n    (\"tracking_id_changed\", \"Tracking ID Changed\"),\n    (\"offer_rejected\", \"Offer Rejected\"),",
        "detail": "backend.vendor.models",
        "documentation": {}
    },
    {
        "label": "PAYOUT_METHOD",
        "kind": 5,
        "importPath": "backend.vendor.models",
        "description": "backend.vendor.models",
        "peekOfCode": "PAYOUT_METHOD = (\n    (\"payout_to_paypal\", \"Payout to Paypal\"),\n    # (\"payout_to_stripe\", \"Payout to Stripe\"),\n    # (\"payout_to_wallet\", \"Payout to Wallet\"),\n)\nDISCOUNT_TYPE = (\n    (\"Percentage\", \"Percentage\"),\n    (\"Flat Rate\", \"Flat Rate\"),\n)\n# Create your models here.",
        "detail": "backend.vendor.models",
        "documentation": {}
    },
    {
        "label": "DISCOUNT_TYPE",
        "kind": 5,
        "importPath": "backend.vendor.models",
        "description": "backend.vendor.models",
        "peekOfCode": "DISCOUNT_TYPE = (\n    (\"Percentage\", \"Percentage\"),\n    (\"Flat Rate\", \"Flat Rate\"),\n)\n# Create your models here.\nclass Vendor(models.Model):\n    user = models.OneToOneField(\n        User, on_delete=models.SET_NULL, null=True, related_name=\"vendor\"\n    )\n    image = models.ImageField(",
        "detail": "backend.vendor.models",
        "documentation": {}
    },
    {
        "label": "DashboardStatsAPIView",
        "kind": 6,
        "importPath": "backend.vendor.views",
        "description": "backend.vendor.views",
        "peekOfCode": "class DashboardStatsAPIView(generics.ListAPIView):\n    serializer_class = SummarySerializer\n    def get_queryset(self):\n        vendor_id = self.kwargs['vendor_id']\n        vendor = Vendor.objects.get(id=vendor_id)\n        # Calculate summary values\n        product_count = Product.objects.filter(vendor=vendor).count()\n        order_count = CartOrder.objects.filter(\n            vendor=vendor, payment_status=\"paid\").count()\n        revenue = CartOrderItem.objects.filter(vendor=vendor, order__payment_status=\"paid\").aggregate(",
        "detail": "backend.vendor.views",
        "documentation": {}
    },
    {
        "label": "ProductsAPIView",
        "kind": 6,
        "importPath": "backend.vendor.views",
        "description": "backend.vendor.views",
        "peekOfCode": "class ProductsAPIView(generics.ListAPIView):\n    serializer_class = ProductSerializer\n    permission_classes = (AllowAny,)\n    def get_queryset(self):\n        vendor_id = self.kwargs['vendor_id']\n        vendor = Vendor.objects.get(id=vendor_id)\n        products = Product.objects.filter(vendor=vendor)\n        return products\nclass OrdersAPIView(generics.ListAPIView):\n    serializer_class = CartOrderSerializer",
        "detail": "backend.vendor.views",
        "documentation": {}
    },
    {
        "label": "OrdersAPIView",
        "kind": 6,
        "importPath": "backend.vendor.views",
        "description": "backend.vendor.views",
        "peekOfCode": "class OrdersAPIView(generics.ListAPIView):\n    serializer_class = CartOrderSerializer\n    permission_classes = (AllowAny,)\n    def get_queryset(self):\n        vendor_id = self.kwargs['vendor_id']\n        vendor = Vendor.objects.get(id=vendor_id)\n        orders = CartOrder.objects.filter(vendor=vendor, payment_status=\"paid\")\n        return orders\nclass RevenueAPIView(generics.ListAPIView):\n    serializer_class = CartOrderItemSerializer",
        "detail": "backend.vendor.views",
        "documentation": {}
    },
    {
        "label": "RevenueAPIView",
        "kind": 6,
        "importPath": "backend.vendor.views",
        "description": "backend.vendor.views",
        "peekOfCode": "class RevenueAPIView(generics.ListAPIView):\n    serializer_class = CartOrderItemSerializer\n    permission_classes = (AllowAny,)\n    def get_queryset(self):\n        vendor_id = self.kwargs['vendor_id']\n        vendor = Vendor.objects.get(id=vendor_id)\n        revenue = CartOrderItem.objects.filter(vendor=vendor, order__payment_status=\"paid\").aggregate(\n            total_revenue=models.Sum(models.F('sub_total') + models.F('shipping_amount')))['total_revenue'] or 0\n        return revenue\nclass YearlyOrderReportChartAPIView(generics.ListAPIView):",
        "detail": "backend.vendor.views",
        "documentation": {}
    },
    {
        "label": "YearlyOrderReportChartAPIView",
        "kind": 6,
        "importPath": "backend.vendor.views",
        "description": "backend.vendor.views",
        "peekOfCode": "class YearlyOrderReportChartAPIView(generics.ListAPIView):\n    serializer_class = CartOrderItemSerializer\n    permission_classes = (AllowAny,)\n    def get_queryset(self):\n        vendor_id = self.kwargs['vendor_id']\n        vendor = Vendor.objects.get(id=vendor_id)\n        # Include the 'product' field in the queryset\n        report = CartOrderItem.objects.filter(\n            vendor=vendor,\n            order__payment_status=\"paid\"",
        "detail": "backend.vendor.views",
        "documentation": {}
    },
    {
        "label": "ProductCreateView",
        "kind": 6,
        "importPath": "backend.vendor.views",
        "description": "backend.vendor.views",
        "peekOfCode": "class ProductCreateView(generics.CreateAPIView):\n    queryset = Product.objects.all()\n    serializer_class = ProductSerializer\n    @transaction.atomic\n    def perform_create(self, serializer):\n        serializer.is_valid(raise_exception=True)\n        serializer.save()\n        product_instance = serializer.instance\n        specifications_data = []\n        colors_data = []",
        "detail": "backend.vendor.views",
        "documentation": {}
    },
    {
        "label": "ProductUpdateAPIView",
        "kind": 6,
        "importPath": "backend.vendor.views",
        "description": "backend.vendor.views",
        "peekOfCode": "class ProductUpdateAPIView(generics.RetrieveUpdateAPIView):\n    queryset = Product.objects.all()\n    serializer_class = ProductSerializer\n    permission_classes = (AllowAny, )\n    def get_object(self):\n        vendor_id = self.kwargs['vendor_id']\n        product_pid = self.kwargs['product_pid']\n        vendor = Vendor.objects.get(id=vendor_id)\n        product = Product.objects.get(vendor=vendor, pid=product_pid)\n        return product",
        "detail": "backend.vendor.views",
        "documentation": {}
    },
    {
        "label": "ProductDeleteAPIView",
        "kind": 6,
        "importPath": "backend.vendor.views",
        "description": "backend.vendor.views",
        "peekOfCode": "class ProductDeleteAPIView(generics.DestroyAPIView):\n    queryset = Product.objects.all()\n    serializer_class = ProductSerializer\n    permission_classes = (AllowAny, )\n    def get_object(self):\n        vendor_id = self.kwargs['vendor_id']\n        product_pid = self.kwargs['product_pid']\n        vendor = Vendor.objects.get(id=vendor_id)\n        product = Product.objects.get(vendor=vendor, pid=product_pid)\n        return product",
        "detail": "backend.vendor.views",
        "documentation": {}
    },
    {
        "label": "FilterProductsAPIView",
        "kind": 6,
        "importPath": "backend.vendor.views",
        "description": "backend.vendor.views",
        "peekOfCode": "class FilterProductsAPIView(generics.ListAPIView):\n    serializer_class = ProductSerializer\n    permission_classes = (AllowAny,)\n    def get_queryset(self):\n        vendor_id = self.kwargs['vendor_id']\n        filter = self.request.GET.get('filter')\n        print(\"filter =======\", filter)\n        vendor = Vendor.objects.get(id=vendor_id)\n        if filter == \"published\":\n            products = Product.objects.filter(",
        "detail": "backend.vendor.views",
        "documentation": {}
    },
    {
        "label": "OrderDetailAPIView",
        "kind": 6,
        "importPath": "backend.vendor.views",
        "description": "backend.vendor.views",
        "peekOfCode": "class OrderDetailAPIView(generics.RetrieveAPIView):\n    serializer_class = CartOrderSerializer\n    permission_classes = (AllowAny,)\n    def get_object(self):\n        vendor_id = self.kwargs['vendor_id']\n        order_oid = self.kwargs['order_oid']\n        vendor = Vendor.objects.get(id=vendor_id)\n        order = CartOrder.objects.get(\n            vendor=vendor, payment_status=\"paid\", oid=order_oid)\n        return order",
        "detail": "backend.vendor.views",
        "documentation": {}
    },
    {
        "label": "Earning",
        "kind": 6,
        "importPath": "backend.vendor.views",
        "description": "backend.vendor.views",
        "peekOfCode": "class Earning(generics.ListAPIView):\n    serializer_class = EarningSummarySerializer\n    def get_queryset(self):\n        vendor_id = self.kwargs['vendor_id']\n        vendor = Vendor.objects.get(id=vendor_id)\n        one_month_ago = datetime.today() - timedelta(days=28)\n        monthly_revenue = CartOrderItem.objects.filter(vendor=vendor, order__payment_status=\"paid\", date__gte=one_month_ago).aggregate(\n            total_revenue=models.Sum(models.F('sub_total') + models.F('shipping_amount')))['total_revenue'] or 0\n        total_revenue = CartOrderItem.objects.filter(vendor=vendor, order__payment_status=\"paid\").aggregate(\n            total_revenue=models.Sum(models.F('sub_total') + models.F('shipping_amount')))['total_revenue'] or 0",
        "detail": "backend.vendor.views",
        "documentation": {}
    },
    {
        "label": "ReviewsListAPIView",
        "kind": 6,
        "importPath": "backend.vendor.views",
        "description": "backend.vendor.views",
        "peekOfCode": "class ReviewsListAPIView(generics.ListAPIView):\n    serializer_class = ReviewSerializer\n    permission_classes = (AllowAny,)\n    def get_queryset(self):\n        vendor_id = self.kwargs['vendor_id']\n        vendor = Vendor.objects.get(id=vendor_id)\n        reviews = Review.objects.filter(product__vendor=vendor)\n        return reviews\nclass ReviewsDetailAPIView(generics.RetrieveUpdateAPIView):\n    serializer_class = ReviewSerializer",
        "detail": "backend.vendor.views",
        "documentation": {}
    },
    {
        "label": "ReviewsDetailAPIView",
        "kind": 6,
        "importPath": "backend.vendor.views",
        "description": "backend.vendor.views",
        "peekOfCode": "class ReviewsDetailAPIView(generics.RetrieveUpdateAPIView):\n    serializer_class = ReviewSerializer\n    permission_classes = (AllowAny,)\n    def get_object(self):\n        vendor_id = self.kwargs['vendor_id']\n        review_id = self.kwargs['review_id']\n        vendor = Vendor.objects.get(id=vendor_id)\n        review = Review.objects.get(product__vendor=vendor, id=review_id)\n        return review\nclass CouponListAPIView(generics.ListAPIView):",
        "detail": "backend.vendor.views",
        "documentation": {}
    },
    {
        "label": "CouponListAPIView",
        "kind": 6,
        "importPath": "backend.vendor.views",
        "description": "backend.vendor.views",
        "peekOfCode": "class CouponListAPIView(generics.ListAPIView):\n    serializer_class = CouponSerializer\n    queryset = Coupon.objects.all()\n    permission_classes = (AllowAny, )\n    def get_queryset(self):\n        vendor_id = self.kwargs['vendor_id']\n        vendor = Vendor.objects.get(id=vendor_id)\n        coupon = Coupon.objects.filter(vendor=vendor)\n        return coupon\nclass CouponCreateAPIView(generics.CreateAPIView):",
        "detail": "backend.vendor.views",
        "documentation": {}
    },
    {
        "label": "CouponCreateAPIView",
        "kind": 6,
        "importPath": "backend.vendor.views",
        "description": "backend.vendor.views",
        "peekOfCode": "class CouponCreateAPIView(generics.CreateAPIView):\n    serializer_class = CouponSerializer\n    queryset = Coupon.objects.all()\n    permission_classes = (AllowAny, )\n    def create(self, request, *args, **kwargs):\n        payload = request.data\n        vendor_id = payload['vendor_id']\n        code = payload['code']\n        discount = payload['discount']\n        active = payload['active']",
        "detail": "backend.vendor.views",
        "documentation": {}
    },
    {
        "label": "CouponDetailAPIView",
        "kind": 6,
        "importPath": "backend.vendor.views",
        "description": "backend.vendor.views",
        "peekOfCode": "class CouponDetailAPIView(generics.RetrieveUpdateDestroyAPIView):\n    serializer_class = CouponSerializer\n    permission_classes = (AllowAny, )\n    def get_object(self):\n        vendor_id = self.kwargs['vendor_id']\n        coupon_id = self.kwargs['coupon_id']\n        vendor = Vendor.objects.get(id=vendor_id)\n        coupon = Coupon.objects.get(vendor=vendor, id=coupon_id)\n        return coupon\nclass CouponStats(generics.ListAPIView):",
        "detail": "backend.vendor.views",
        "documentation": {}
    },
    {
        "label": "CouponStats",
        "kind": 6,
        "importPath": "backend.vendor.views",
        "description": "backend.vendor.views",
        "peekOfCode": "class CouponStats(generics.ListAPIView):\n    serializer_class = CouponSummarySerializer\n    def get_queryset(self):\n        vendor_id = self.kwargs['vendor_id']\n        vendor = Vendor.objects.get(id=vendor_id)\n        total_coupons = Coupon.objects.filter(vendor=vendor).count()\n        active_coupons = Coupon.objects.filter(\n            vendor=vendor, active=True).count()\n        return [{\n            'total_coupons': total_coupons,",
        "detail": "backend.vendor.views",
        "documentation": {}
    },
    {
        "label": "NotificationUnSeenListAPIView",
        "kind": 6,
        "importPath": "backend.vendor.views",
        "description": "backend.vendor.views",
        "peekOfCode": "class NotificationUnSeenListAPIView(generics.ListAPIView):\n    serializer_class = NotificationSerializer\n    queryset = Notification.objects.all()\n    permission_classes = (AllowAny, )\n    def get_queryset(self):\n        vendor_id = self.kwargs['vendor_id']\n        vendor = Vendor.objects.get(id=vendor_id)\n        notifications = Notification.objects.filter(vendor=vendor, seen=False).order_by('seen')\n        return notifications\nclass NotificationSeenListAPIView(generics.ListAPIView):",
        "detail": "backend.vendor.views",
        "documentation": {}
    },
    {
        "label": "NotificationSeenListAPIView",
        "kind": 6,
        "importPath": "backend.vendor.views",
        "description": "backend.vendor.views",
        "peekOfCode": "class NotificationSeenListAPIView(generics.ListAPIView):\n    serializer_class = NotificationSerializer\n    queryset = Notification.objects.all()\n    permission_classes = (AllowAny, )\n    def get_queryset(self):\n        vendor_id = self.kwargs['vendor_id']\n        vendor = Vendor.objects.get(id=vendor_id)\n        notifications = Notification.objects.filter(vendor=vendor, seen=True).order_by('seen')\n        return notifications\nclass NotificationSummaryAPIView(generics.ListAPIView):",
        "detail": "backend.vendor.views",
        "documentation": {}
    },
    {
        "label": "NotificationSummaryAPIView",
        "kind": 6,
        "importPath": "backend.vendor.views",
        "description": "backend.vendor.views",
        "peekOfCode": "class NotificationSummaryAPIView(generics.ListAPIView):\n    serializer_class = NotificationSummarySerializer\n    def get_queryset(self):\n        vendor_id = self.kwargs['vendor_id']\n        vendor = Vendor.objects.get(id=vendor_id)\n        un_read_noti = Notification.objects.filter(vendor=vendor, seen=False).count()\n        read_noti = Notification.objects.filter(vendor=vendor, seen=True).count()\n        all_noti = Notification.objects.filter(vendor=vendor).count()\n        return [{\n            'un_read_noti': un_read_noti,",
        "detail": "backend.vendor.views",
        "documentation": {}
    },
    {
        "label": "NotificationMarkAsSeen",
        "kind": 6,
        "importPath": "backend.vendor.views",
        "description": "backend.vendor.views",
        "peekOfCode": "class NotificationMarkAsSeen(generics.RetrieveUpdateAPIView):\n    serializer_class = NotificationSerializer\n    permission_classes = (AllowAny, )\n    def get_object(self):\n        vendor_id = self.kwargs['vendor_id']\n        noti_id = self.kwargs['noti_id']\n        vendor = Vendor.objects.get(id=vendor_id)\n        notification = Notification.objects.get(vendor=vendor, id=noti_id)\n        notification.seen = True\n        notification.save()",
        "detail": "backend.vendor.views",
        "documentation": {}
    },
    {
        "label": "VendorProfileUpdateView",
        "kind": 6,
        "importPath": "backend.vendor.views",
        "description": "backend.vendor.views",
        "peekOfCode": "class VendorProfileUpdateView(generics.RetrieveUpdateAPIView):\n    queryset = Profile.objects.all()\n    serializer_class = ProfileSerializer\n    permission_classes = (AllowAny, )\n    parser_classes = (MultiPartParser, FormParser)\nclass ShopUpdateView(generics.RetrieveUpdateAPIView):\n    queryset = Vendor.objects.all()\n    serializer_class = VendorSerializer\n    permission_classes = (AllowAny, )      \n    parser_classes = (MultiPartParser, FormParser)",
        "detail": "backend.vendor.views",
        "documentation": {}
    },
    {
        "label": "ShopUpdateView",
        "kind": 6,
        "importPath": "backend.vendor.views",
        "description": "backend.vendor.views",
        "peekOfCode": "class ShopUpdateView(generics.RetrieveUpdateAPIView):\n    queryset = Vendor.objects.all()\n    serializer_class = VendorSerializer\n    permission_classes = (AllowAny, )      \n    parser_classes = (MultiPartParser, FormParser)\nclass ShopAPIView(generics.RetrieveUpdateAPIView):\n    queryset = Product.objects.all()\n    serializer_class = VendorSerializer\n    permission_classes = (AllowAny, )\n    def get_object(self):",
        "detail": "backend.vendor.views",
        "documentation": {}
    },
    {
        "label": "ShopAPIView",
        "kind": 6,
        "importPath": "backend.vendor.views",
        "description": "backend.vendor.views",
        "peekOfCode": "class ShopAPIView(generics.RetrieveUpdateAPIView):\n    queryset = Product.objects.all()\n    serializer_class = VendorSerializer\n    permission_classes = (AllowAny, )\n    def get_object(self):\n        vendor_slug = self.kwargs['vendor_slug']\n        vendor = Vendor.objects.get(slug=vendor_slug)\n        return vendor\nclass ShopProductsAPIView(generics.ListAPIView):\n    serializer_class = ProductSerializer",
        "detail": "backend.vendor.views",
        "documentation": {}
    },
    {
        "label": "ShopProductsAPIView",
        "kind": 6,
        "importPath": "backend.vendor.views",
        "description": "backend.vendor.views",
        "peekOfCode": "class ShopProductsAPIView(generics.ListAPIView):\n    serializer_class = ProductSerializer\n    permission_classes = (AllowAny,)\n    def get_queryset(self):\n        vendor_slug = self.kwargs['vendor_slug']\n        vendor = Vendor.objects.get(slug=vendor_slug)\n        products = Product.objects.filter(vendor=vendor)\n        return products\nclass VendorRegister(generics.CreateAPIView):\n    serializer_class = VendorSerializer",
        "detail": "backend.vendor.views",
        "documentation": {}
    },
    {
        "label": "VendorRegister",
        "kind": 6,
        "importPath": "backend.vendor.views",
        "description": "backend.vendor.views",
        "peekOfCode": "class VendorRegister(generics.CreateAPIView):\n    serializer_class = VendorSerializer\n    queryset = Vendor.objects.all()\n    permission_classes = [AllowAny]\n    def create(self, request, *args, **kwargs):\n        payload = request.data\n        image = payload['image']\n        name = payload['name']\n        email = payload['email']\n        description = payload['description']",
        "detail": "backend.vendor.views",
        "documentation": {}
    },
    {
        "label": "MonthlyOrderChartAPIFBV",
        "kind": 2,
        "importPath": "backend.vendor.views",
        "description": "backend.vendor.views",
        "peekOfCode": "def MonthlyOrderChartAPIFBV(request, vendor_id):\n    vendor = Vendor.objects.get(id=vendor_id)\n    orders = CartOrder.objects.filter(vendor=vendor)\n    orders_by_month = orders.annotate(month=ExtractMonth(\"date\")).values(\n        \"month\").annotate(orders=models.Count(\"id\")).order_by(\"month\")\n    return Response(orders_by_month)\n@api_view(('GET',))\ndef MonthlyProductsChartAPIFBV(request, vendor_id):\n    vendor = Vendor.objects.get(id=vendor_id)\n    products = Product.objects.filter(vendor=vendor)",
        "detail": "backend.vendor.views",
        "documentation": {}
    },
    {
        "label": "MonthlyProductsChartAPIFBV",
        "kind": 2,
        "importPath": "backend.vendor.views",
        "description": "backend.vendor.views",
        "peekOfCode": "def MonthlyProductsChartAPIFBV(request, vendor_id):\n    vendor = Vendor.objects.get(id=vendor_id)\n    products = Product.objects.filter(vendor=vendor)\n    products_by_month = products.annotate(month=ExtractMonth(\"date\")).values(\n        \"month\").annotate(orders=models.Count(\"id\")).order_by(\"month\")\n    return Response(products_by_month)\nclass ProductCreateView(generics.CreateAPIView):\n    queryset = Product.objects.all()\n    serializer_class = ProductSerializer\n    @transaction.atomic",
        "detail": "backend.vendor.views",
        "documentation": {}
    },
    {
        "label": "MonthlyEarningTracker",
        "kind": 2,
        "importPath": "backend.vendor.views",
        "description": "backend.vendor.views",
        "peekOfCode": "def MonthlyEarningTracker(request, vendor_id):\n    vendor = Vendor.objects.get(id=vendor_id)\n    monthly_earning_tracker = (\n        CartOrderItem.objects\n        .filter(vendor=vendor, order__payment_status=\"paid\")\n        .annotate(\n            month=ExtractMonth(\"date\")\n        )\n        .values(\"month\")\n        .annotate(",
        "detail": "backend.vendor.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "backend.manage",
        "description": "backend.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'backend.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "backend.manage",
        "documentation": {}
    },
    {
        "label": "read_xml_value",
        "kind": 2,
        "importPath": "mina_android1.build.windows.x64.extracted.firebase_cpp_sdk_windows.generate_xml_from_google_services_json",
        "description": "mina_android1.build.windows.x64.extracted.firebase_cpp_sdk_windows.generate_xml_from_google_services_json",
        "peekOfCode": "def read_xml_value(xml_node):\n  \"\"\"Utility method for reading values from the plist XML.\n  Args:\n    xml_node: An ElementTree node, that contains a value.\n  Returns:\n    The value of the node, or None, if it could not be read.\n  \"\"\"\n  if xml_node.tag == 'string':\n    return xml_node.text\n  elif xml_node.tag == 'integer':",
        "detail": "mina_android1.build.windows.x64.extracted.firebase_cpp_sdk_windows.generate_xml_from_google_services_json",
        "documentation": {}
    },
    {
        "label": "construct_plist_dictionary",
        "kind": 2,
        "importPath": "mina_android1.build.windows.x64.extracted.firebase_cpp_sdk_windows.generate_xml_from_google_services_json",
        "description": "mina_android1.build.windows.x64.extracted.firebase_cpp_sdk_windows.generate_xml_from_google_services_json",
        "peekOfCode": "def construct_plist_dictionary(xml_root):\n  \"\"\"Constructs a dictionary of values based on the contents of a plist file.\n  Args:\n    xml_root: An ElementTree node, that represents the root of the xml file\n              that is to be parsed.  (Which should be a dictionary containing\n              key-value pairs of the properties that need to be extracted.)\n  Returns:\n    A dictionary, containing key-value pairs for all (supported) entries in the\n    node.\n  \"\"\"",
        "detail": "mina_android1.build.windows.x64.extracted.firebase_cpp_sdk_windows.generate_xml_from_google_services_json",
        "documentation": {}
    },
    {
        "label": "update_dict_keys",
        "kind": 2,
        "importPath": "mina_android1.build.windows.x64.extracted.firebase_cpp_sdk_windows.generate_xml_from_google_services_json",
        "description": "mina_android1.build.windows.x64.extracted.firebase_cpp_sdk_windows.generate_xml_from_google_services_json",
        "peekOfCode": "def update_dict_keys(key_map, input_dict):\n  \"\"\"Creates a dict from input_dict with the same values but new keys.\n  Two dictionaries are passed to this function: the key_map that represents a\n  mapping of source keys to destination keys, and the input_dict that is the\n  dictionary that is to be duplicated, replacing any key that matches a source\n  key with a destination key. Source keys that are not present in the\n  input_dict will not have their destination key represented in the result.\n  In other words, if key_map is `{'old': 'new', 'foo': 'bar'}`, and input_dict\n  is `{'old': 10}`, the result will be `{'new': 10}`.\n  Args:",
        "detail": "mina_android1.build.windows.x64.extracted.firebase_cpp_sdk_windows.generate_xml_from_google_services_json",
        "documentation": {}
    },
    {
        "label": "construct_google_services_json",
        "kind": 2,
        "importPath": "mina_android1.build.windows.x64.extracted.firebase_cpp_sdk_windows.generate_xml_from_google_services_json",
        "description": "mina_android1.build.windows.x64.extracted.firebase_cpp_sdk_windows.generate_xml_from_google_services_json",
        "peekOfCode": "def construct_google_services_json(xml_dict):\n  \"\"\"Constructs a google services json file from a dictionary.\n  Args:\n    xml_dict: A dictionary of all the key/value pairs that are needed for the\n              output json file.\n  Returns:\n    A string representing the output json file.\n  \"\"\"\n  try:\n    json_struct = {",
        "detail": "mina_android1.build.windows.x64.extracted.firebase_cpp_sdk_windows.generate_xml_from_google_services_json",
        "documentation": {}
    },
    {
        "label": "convert_plist_to_json",
        "kind": 2,
        "importPath": "mina_android1.build.windows.x64.extracted.firebase_cpp_sdk_windows.generate_xml_from_google_services_json",
        "description": "mina_android1.build.windows.x64.extracted.firebase_cpp_sdk_windows.generate_xml_from_google_services_json",
        "peekOfCode": "def convert_plist_to_json(plist_string, input_filename):\n  \"\"\"Converts an input plist string into a .json file and saves it.\n  Args:\n    plist_string:    The contents of the loaded plist file.\n    input_filename:  The file name that the plist data was read from.\n  Returns:\n    the converted string, or None if there were errors.\n  \"\"\"\n  try:\n    root = ElementTree.fromstring(plist_string)",
        "detail": "mina_android1.build.windows.x64.extracted.firebase_cpp_sdk_windows.generate_xml_from_google_services_json",
        "documentation": {}
    },
    {
        "label": "gen_string",
        "kind": 2,
        "importPath": "mina_android1.build.windows.x64.extracted.firebase_cpp_sdk_windows.generate_xml_from_google_services_json",
        "description": "mina_android1.build.windows.x64.extracted.firebase_cpp_sdk_windows.generate_xml_from_google_services_json",
        "peekOfCode": "def gen_string(parent, name, text):\n  \"\"\"Generate one <string /> element and put into the list of keeps.\n  Args:\n    parent:  The object that will hold the string.\n    name:    The name to store the string under.\n    text:    The text of the string.\n  \"\"\"\n  if text:\n    prev = parent.get('tools:keep', '')\n    if prev:",
        "detail": "mina_android1.build.windows.x64.extracted.firebase_cpp_sdk_windows.generate_xml_from_google_services_json",
        "documentation": {}
    },
    {
        "label": "indent",
        "kind": 2,
        "importPath": "mina_android1.build.windows.x64.extracted.firebase_cpp_sdk_windows.generate_xml_from_google_services_json",
        "description": "mina_android1.build.windows.x64.extracted.firebase_cpp_sdk_windows.generate_xml_from_google_services_json",
        "peekOfCode": "def indent(elem, level=0):\n  \"\"\"Recurse through XML tree and add indentation.\n  Args:\n    elem:  The element to recurse over\n    level: The current indentation level.\n  \"\"\"\n  i = '\\n' + level*'  '\n  if elem is not None:\n    if not elem.text or not elem.text.strip():\n      elem.text = i + '  '",
        "detail": "mina_android1.build.windows.x64.extracted.firebase_cpp_sdk_windows.generate_xml_from_google_services_json",
        "documentation": {}
    },
    {
        "label": "argv_as_unicode_win32",
        "kind": 2,
        "importPath": "mina_android1.build.windows.x64.extracted.firebase_cpp_sdk_windows.generate_xml_from_google_services_json",
        "description": "mina_android1.build.windows.x64.extracted.firebase_cpp_sdk_windows.generate_xml_from_google_services_json",
        "peekOfCode": "def argv_as_unicode_win32():\n  \"\"\"Returns unicode command line arguments on windows.\n  \"\"\"\n  get_command_line_w = ctypes.cdll.kernel32.GetCommandLineW\n  get_command_line_w.restype = ctypes.wintypes.LPCWSTR\n  # CommandLineToArgvW parses the Unicode command line\n  command_line_to_argv_w = ctypes.windll.shell32.CommandLineToArgvW\n  command_line_to_argv_w.argtypes = [\n      ctypes.wintypes.LPCWSTR,\n      ctypes.POINTER(ctypes.c_int)",
        "detail": "mina_android1.build.windows.x64.extracted.firebase_cpp_sdk_windows.generate_xml_from_google_services_json",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "mina_android1.build.windows.x64.extracted.firebase_cpp_sdk_windows.generate_xml_from_google_services_json",
        "description": "mina_android1.build.windows.x64.extracted.firebase_cpp_sdk_windows.generate_xml_from_google_services_json",
        "peekOfCode": "def main():\n  parser = argparse.ArgumentParser(\n      description=((\n          'Converts a Firebase %s into %s similar to the Gradle plugin, or '\n          'converts a Firebase %s into a %s suitible for use on desktop apps.' %\n          (DEFAULT_INPUT_FILENAME, DEFAULT_OUTPUT_FILENAME,\n           DEFAULT_PLIST_INPUT_FILENAME, DEFAULT_JSON_OUTPUT_FILENAME))))\n  parser.add_argument('-i', help='Override input file name',\n                      metavar='FILE', required=False)\n  parser.add_argument('-o', help='Override destination file name',",
        "detail": "mina_android1.build.windows.x64.extracted.firebase_cpp_sdk_windows.generate_xml_from_google_services_json",
        "documentation": {}
    },
    {
        "label": "__author__",
        "kind": 5,
        "importPath": "mina_android1.build.windows.x64.extracted.firebase_cpp_sdk_windows.generate_xml_from_google_services_json",
        "description": "mina_android1.build.windows.x64.extracted.firebase_cpp_sdk_windows.generate_xml_from_google_services_json",
        "peekOfCode": "__author__ = 'Wouter van Oortmerssen'\nimport argparse\nimport ctypes\nimport json\nimport os\nimport platform\nimport sys\nfrom xml.etree import ElementTree\nif platform.system().lower() == 'windows':\n  import ctypes.wintypes  # pylint: disable=g-import-not-at-top",
        "detail": "mina_android1.build.windows.x64.extracted.firebase_cpp_sdk_windows.generate_xml_from_google_services_json",
        "documentation": {}
    },
    {
        "label": "DEFAULT_INPUT_FILENAME",
        "kind": 5,
        "importPath": "mina_android1.build.windows.x64.extracted.firebase_cpp_sdk_windows.generate_xml_from_google_services_json",
        "description": "mina_android1.build.windows.x64.extracted.firebase_cpp_sdk_windows.generate_xml_from_google_services_json",
        "peekOfCode": "DEFAULT_INPUT_FILENAME = 'app/google-services.json'\n# Output filename if it isn't set.\nDEFAULT_OUTPUT_FILENAME = 'res/values/googleservices.xml'\n# Input filename for .plist files, if it isn't set.\nDEFAULT_PLIST_INPUT_FILENAME = 'GoogleService-Info.plist'\n# Output filename for .json files, if it isn't set.\nDEFAULT_JSON_OUTPUT_FILENAME = 'google-services-desktop.json'\nOAUTH_CLIENT_TYPE_ANDROID_APP = 1\nOAUTH_CLIENT_TYPE_WEB = 3\ndef read_xml_value(xml_node):",
        "detail": "mina_android1.build.windows.x64.extracted.firebase_cpp_sdk_windows.generate_xml_from_google_services_json",
        "documentation": {}
    },
    {
        "label": "DEFAULT_OUTPUT_FILENAME",
        "kind": 5,
        "importPath": "mina_android1.build.windows.x64.extracted.firebase_cpp_sdk_windows.generate_xml_from_google_services_json",
        "description": "mina_android1.build.windows.x64.extracted.firebase_cpp_sdk_windows.generate_xml_from_google_services_json",
        "peekOfCode": "DEFAULT_OUTPUT_FILENAME = 'res/values/googleservices.xml'\n# Input filename for .plist files, if it isn't set.\nDEFAULT_PLIST_INPUT_FILENAME = 'GoogleService-Info.plist'\n# Output filename for .json files, if it isn't set.\nDEFAULT_JSON_OUTPUT_FILENAME = 'google-services-desktop.json'\nOAUTH_CLIENT_TYPE_ANDROID_APP = 1\nOAUTH_CLIENT_TYPE_WEB = 3\ndef read_xml_value(xml_node):\n  \"\"\"Utility method for reading values from the plist XML.\n  Args:",
        "detail": "mina_android1.build.windows.x64.extracted.firebase_cpp_sdk_windows.generate_xml_from_google_services_json",
        "documentation": {}
    },
    {
        "label": "DEFAULT_PLIST_INPUT_FILENAME",
        "kind": 5,
        "importPath": "mina_android1.build.windows.x64.extracted.firebase_cpp_sdk_windows.generate_xml_from_google_services_json",
        "description": "mina_android1.build.windows.x64.extracted.firebase_cpp_sdk_windows.generate_xml_from_google_services_json",
        "peekOfCode": "DEFAULT_PLIST_INPUT_FILENAME = 'GoogleService-Info.plist'\n# Output filename for .json files, if it isn't set.\nDEFAULT_JSON_OUTPUT_FILENAME = 'google-services-desktop.json'\nOAUTH_CLIENT_TYPE_ANDROID_APP = 1\nOAUTH_CLIENT_TYPE_WEB = 3\ndef read_xml_value(xml_node):\n  \"\"\"Utility method for reading values from the plist XML.\n  Args:\n    xml_node: An ElementTree node, that contains a value.\n  Returns:",
        "detail": "mina_android1.build.windows.x64.extracted.firebase_cpp_sdk_windows.generate_xml_from_google_services_json",
        "documentation": {}
    },
    {
        "label": "DEFAULT_JSON_OUTPUT_FILENAME",
        "kind": 5,
        "importPath": "mina_android1.build.windows.x64.extracted.firebase_cpp_sdk_windows.generate_xml_from_google_services_json",
        "description": "mina_android1.build.windows.x64.extracted.firebase_cpp_sdk_windows.generate_xml_from_google_services_json",
        "peekOfCode": "DEFAULT_JSON_OUTPUT_FILENAME = 'google-services-desktop.json'\nOAUTH_CLIENT_TYPE_ANDROID_APP = 1\nOAUTH_CLIENT_TYPE_WEB = 3\ndef read_xml_value(xml_node):\n  \"\"\"Utility method for reading values from the plist XML.\n  Args:\n    xml_node: An ElementTree node, that contains a value.\n  Returns:\n    The value of the node, or None, if it could not be read.\n  \"\"\"",
        "detail": "mina_android1.build.windows.x64.extracted.firebase_cpp_sdk_windows.generate_xml_from_google_services_json",
        "documentation": {}
    },
    {
        "label": "OAUTH_CLIENT_TYPE_ANDROID_APP",
        "kind": 5,
        "importPath": "mina_android1.build.windows.x64.extracted.firebase_cpp_sdk_windows.generate_xml_from_google_services_json",
        "description": "mina_android1.build.windows.x64.extracted.firebase_cpp_sdk_windows.generate_xml_from_google_services_json",
        "peekOfCode": "OAUTH_CLIENT_TYPE_ANDROID_APP = 1\nOAUTH_CLIENT_TYPE_WEB = 3\ndef read_xml_value(xml_node):\n  \"\"\"Utility method for reading values from the plist XML.\n  Args:\n    xml_node: An ElementTree node, that contains a value.\n  Returns:\n    The value of the node, or None, if it could not be read.\n  \"\"\"\n  if xml_node.tag == 'string':",
        "detail": "mina_android1.build.windows.x64.extracted.firebase_cpp_sdk_windows.generate_xml_from_google_services_json",
        "documentation": {}
    },
    {
        "label": "OAUTH_CLIENT_TYPE_WEB",
        "kind": 5,
        "importPath": "mina_android1.build.windows.x64.extracted.firebase_cpp_sdk_windows.generate_xml_from_google_services_json",
        "description": "mina_android1.build.windows.x64.extracted.firebase_cpp_sdk_windows.generate_xml_from_google_services_json",
        "peekOfCode": "OAUTH_CLIENT_TYPE_WEB = 3\ndef read_xml_value(xml_node):\n  \"\"\"Utility method for reading values from the plist XML.\n  Args:\n    xml_node: An ElementTree node, that contains a value.\n  Returns:\n    The value of the node, or None, if it could not be read.\n  \"\"\"\n  if xml_node.tag == 'string':\n    return xml_node.text",
        "detail": "mina_android1.build.windows.x64.extracted.firebase_cpp_sdk_windows.generate_xml_from_google_services_json",
        "documentation": {}
    },
    {
        "label": "_Known",
        "kind": 6,
        "importPath": "react[old].node_modules.flatted.python.flatted",
        "description": "react[old].node_modules.flatted.python.flatted",
        "peekOfCode": "class _Known:\n    def __init__(self):\n        self.key = []\n        self.value = []\nclass _String:\n    def __init__(self, value):\n        self.value = value\ndef _array_keys(value):\n    keys = []\n    i = 0",
        "detail": "react[old].node_modules.flatted.python.flatted",
        "documentation": {}
    },
    {
        "label": "_String",
        "kind": 6,
        "importPath": "react[old].node_modules.flatted.python.flatted",
        "description": "react[old].node_modules.flatted.python.flatted",
        "peekOfCode": "class _String:\n    def __init__(self, value):\n        self.value = value\ndef _array_keys(value):\n    keys = []\n    i = 0\n    for _ in value:\n        keys.append(i)\n        i += 1\n    return keys",
        "detail": "react[old].node_modules.flatted.python.flatted",
        "documentation": {}
    },
    {
        "label": "parse",
        "kind": 2,
        "importPath": "react[old].node_modules.flatted.python.flatted",
        "description": "react[old].node_modules.flatted.python.flatted",
        "peekOfCode": "def parse(value, *args, **kwargs):\n    json = _json.loads(value, *args, **kwargs)\n    wrapped = []\n    for value in json:\n        wrapped.append(_wrap(value))\n    input = []\n    for value in wrapped:\n        if isinstance(value, _String):\n            input.append(value.value)\n        else:",
        "detail": "react[old].node_modules.flatted.python.flatted",
        "documentation": {}
    },
    {
        "label": "stringify",
        "kind": 2,
        "importPath": "react[old].node_modules.flatted.python.flatted",
        "description": "react[old].node_modules.flatted.python.flatted",
        "peekOfCode": "def stringify(value, *args, **kwargs):\n    known = _Known()\n    input = []\n    output = []\n    i = int(_index(known, input, value))\n    while i < len(input):\n        output.append(_transform(known, input, input[i]))\n        i += 1\n    return _json.dumps(output, *args, **kwargs)",
        "detail": "react[old].node_modules.flatted.python.flatted",
        "documentation": {}
    },
    {
        "label": "stringify",
        "kind": 2,
        "importPath": "react[old].node_modules.flatted.python.test",
        "description": "react[old].node_modules.flatted.python.test",
        "peekOfCode": "def stringify(value):\n    return _stringify(value, separators=(',', ':'))\nassert stringify([None, None]) == '[[null,null]]'\na = []\no = {}\nassert stringify(a) == '[[]]'\nassert stringify(o) == '[{}]'\na.append(a)\no['o'] = o\nassert stringify(a) == '[[\"0\"]]'",
        "detail": "react[old].node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "a",
        "kind": 5,
        "importPath": "react[old].node_modules.flatted.python.test",
        "description": "react[old].node_modules.flatted.python.test",
        "peekOfCode": "a = []\no = {}\nassert stringify(a) == '[[]]'\nassert stringify(o) == '[{}]'\na.append(a)\no['o'] = o\nassert stringify(a) == '[[\"0\"]]'\nassert stringify(o) == '[{\"o\":\"0\"}]'\nb = parse(stringify(a))\nassert isinstance(b, list) and b[0] == b",
        "detail": "react[old].node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o",
        "kind": 5,
        "importPath": "react[old].node_modules.flatted.python.test",
        "description": "react[old].node_modules.flatted.python.test",
        "peekOfCode": "o = {}\nassert stringify(a) == '[[]]'\nassert stringify(o) == '[{}]'\na.append(a)\no['o'] = o\nassert stringify(a) == '[[\"0\"]]'\nassert stringify(o) == '[{\"o\":\"0\"}]'\nb = parse(stringify(a))\nassert isinstance(b, list) and b[0] == b\na.append(1)",
        "detail": "react[old].node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o['o']",
        "kind": 5,
        "importPath": "react[old].node_modules.flatted.python.test",
        "description": "react[old].node_modules.flatted.python.test",
        "peekOfCode": "o['o'] = o\nassert stringify(a) == '[[\"0\"]]'\nassert stringify(o) == '[{\"o\":\"0\"}]'\nb = parse(stringify(a))\nassert isinstance(b, list) and b[0] == b\na.append(1)\na.append('two')\na.append(True)\no['one'] = 1\no['two'] = 'two'",
        "detail": "react[old].node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "b",
        "kind": 5,
        "importPath": "react[old].node_modules.flatted.python.test",
        "description": "react[old].node_modules.flatted.python.test",
        "peekOfCode": "b = parse(stringify(a))\nassert isinstance(b, list) and b[0] == b\na.append(1)\na.append('two')\na.append(True)\no['one'] = 1\no['two'] = 'two'\no['three'] = True\nassert stringify(a) == '[[\"0\",1,\"1\",true],\"two\"]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true},\"two\"]'",
        "detail": "react[old].node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o['one']",
        "kind": 5,
        "importPath": "react[old].node_modules.flatted.python.test",
        "description": "react[old].node_modules.flatted.python.test",
        "peekOfCode": "o['one'] = 1\no['two'] = 'two'\no['three'] = True\nassert stringify(a) == '[[\"0\",1,\"1\",true],\"two\"]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true},\"two\"]'\na.append(o)\no['a'] = a\nassert stringify(a) == '[[\"0\",1,\"1\",true,\"2\"],\"two\",{\"o\":\"2\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"0\"}]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"2\"},\"two\",[\"2\",1,\"1\",true,\"0\"]]'\na.append({'test': 'OK'})",
        "detail": "react[old].node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o['two']",
        "kind": 5,
        "importPath": "react[old].node_modules.flatted.python.test",
        "description": "react[old].node_modules.flatted.python.test",
        "peekOfCode": "o['two'] = 'two'\no['three'] = True\nassert stringify(a) == '[[\"0\",1,\"1\",true],\"two\"]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true},\"two\"]'\na.append(o)\no['a'] = a\nassert stringify(a) == '[[\"0\",1,\"1\",true,\"2\"],\"two\",{\"o\":\"2\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"0\"}]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"2\"},\"two\",[\"2\",1,\"1\",true,\"0\"]]'\na.append({'test': 'OK'})\na.append([1, 2, 3])",
        "detail": "react[old].node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o['three']",
        "kind": 5,
        "importPath": "react[old].node_modules.flatted.python.test",
        "description": "react[old].node_modules.flatted.python.test",
        "peekOfCode": "o['three'] = True\nassert stringify(a) == '[[\"0\",1,\"1\",true],\"two\"]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true},\"two\"]'\na.append(o)\no['a'] = a\nassert stringify(a) == '[[\"0\",1,\"1\",true,\"2\"],\"two\",{\"o\":\"2\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"0\"}]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"2\"},\"two\",[\"2\",1,\"1\",true,\"0\"]]'\na.append({'test': 'OK'})\na.append([1, 2, 3])\no['test'] = {'test': 'OK'}",
        "detail": "react[old].node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o['a']",
        "kind": 5,
        "importPath": "react[old].node_modules.flatted.python.test",
        "description": "react[old].node_modules.flatted.python.test",
        "peekOfCode": "o['a'] = a\nassert stringify(a) == '[[\"0\",1,\"1\",true,\"2\"],\"two\",{\"o\":\"2\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"0\"}]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"2\"},\"two\",[\"2\",1,\"1\",true,\"0\"]]'\na.append({'test': 'OK'})\na.append([1, 2, 3])\no['test'] = {'test': 'OK'}\no['array'] = [1, 2, 3]\nassert stringify(a) == '[[\"0\",1,\"1\",true,\"2\",\"3\",\"4\"],\"two\",{\"o\":\"2\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"0\",\"test\":\"3\",\"array\":\"4\"},{\"test\":\"5\"},[1,2,3],\"OK\"]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"2\",\"test\":\"3\",\"array\":\"4\"},\"two\",[\"2\",1,\"1\",true,\"0\",\"3\",\"4\"],{\"test\":\"5\"},[1,2,3],\"OK\"]'\na2 = parse(stringify(a));",
        "detail": "react[old].node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o['test']",
        "kind": 5,
        "importPath": "react[old].node_modules.flatted.python.test",
        "description": "react[old].node_modules.flatted.python.test",
        "peekOfCode": "o['test'] = {'test': 'OK'}\no['array'] = [1, 2, 3]\nassert stringify(a) == '[[\"0\",1,\"1\",true,\"2\",\"3\",\"4\"],\"two\",{\"o\":\"2\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"0\",\"test\":\"3\",\"array\":\"4\"},{\"test\":\"5\"},[1,2,3],\"OK\"]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"2\",\"test\":\"3\",\"array\":\"4\"},\"two\",[\"2\",1,\"1\",true,\"0\",\"3\",\"4\"],{\"test\":\"5\"},[1,2,3],\"OK\"]'\na2 = parse(stringify(a));\no2 = parse(stringify(o));\nassert a2[0] == a2\nassert o2['o'] == o2\nassert a2[1] == 1 and a2[2] == 'two' and a2[3] == True and isinstance(a2[4], dict)\nassert a2[4] == a2[4]['o'] and a2 == a2[4]['o']['a']",
        "detail": "react[old].node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o['array']",
        "kind": 5,
        "importPath": "react[old].node_modules.flatted.python.test",
        "description": "react[old].node_modules.flatted.python.test",
        "peekOfCode": "o['array'] = [1, 2, 3]\nassert stringify(a) == '[[\"0\",1,\"1\",true,\"2\",\"3\",\"4\"],\"two\",{\"o\":\"2\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"0\",\"test\":\"3\",\"array\":\"4\"},{\"test\":\"5\"},[1,2,3],\"OK\"]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"2\",\"test\":\"3\",\"array\":\"4\"},\"two\",[\"2\",1,\"1\",true,\"0\",\"3\",\"4\"],{\"test\":\"5\"},[1,2,3],\"OK\"]'\na2 = parse(stringify(a));\no2 = parse(stringify(o));\nassert a2[0] == a2\nassert o2['o'] == o2\nassert a2[1] == 1 and a2[2] == 'two' and a2[3] == True and isinstance(a2[4], dict)\nassert a2[4] == a2[4]['o'] and a2 == a2[4]['o']['a']\nstr = parse('[{\"prop\":\"1\",\"a\":\"2\",\"b\":\"3\"},{\"value\":123},[\"4\",\"5\"],{\"e\":\"6\",\"t\":\"7\",\"p\":4},{},{\"b\":\"8\"},\"f\",{\"a\":\"9\"},[\"10\"],\"sup\",{\"a\":1,\"d\":2,\"c\":\"7\",\"z\":\"11\",\"h\":1},{\"g\":2,\"a\":\"7\",\"b\":\"12\",\"f\":6},{\"r\":4,\"u\":\"7\",\"c\":5}]')",
        "detail": "react[old].node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "a2",
        "kind": 5,
        "importPath": "react[old].node_modules.flatted.python.test",
        "description": "react[old].node_modules.flatted.python.test",
        "peekOfCode": "a2 = parse(stringify(a));\no2 = parse(stringify(o));\nassert a2[0] == a2\nassert o2['o'] == o2\nassert a2[1] == 1 and a2[2] == 'two' and a2[3] == True and isinstance(a2[4], dict)\nassert a2[4] == a2[4]['o'] and a2 == a2[4]['o']['a']\nstr = parse('[{\"prop\":\"1\",\"a\":\"2\",\"b\":\"3\"},{\"value\":123},[\"4\",\"5\"],{\"e\":\"6\",\"t\":\"7\",\"p\":4},{},{\"b\":\"8\"},\"f\",{\"a\":\"9\"},[\"10\"],\"sup\",{\"a\":1,\"d\":2,\"c\":\"7\",\"z\":\"11\",\"h\":1},{\"g\":2,\"a\":\"7\",\"b\":\"12\",\"f\":6},{\"r\":4,\"u\":\"7\",\"c\":5}]')\nassert str['b']['t']['a'] == 'sup' and str['a'][1]['b'][0]['c'] == str['b']['t']\noo = parse('[{\"a\":\"1\",\"b\":\"0\",\"c\":\"2\"},{\"aa\":\"3\"},{\"ca\":\"4\",\"cb\":\"5\",\"cc\":\"6\",\"cd\":\"7\",\"ce\":\"8\",\"cf\":\"9\"},{\"aaa\":\"10\"},{\"caa\":\"4\"},{\"cba\":\"5\"},{\"cca\":\"2\"},{\"cda\":\"4\"},\"value2\",\"value3\",\"value1\"]');\nassert oo['a']['aa']['aaa'] == 'value1' and oo == oo['b'] and oo['c']['ca']['caa'] == oo['c']['ca']",
        "detail": "react[old].node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o2",
        "kind": 5,
        "importPath": "react[old].node_modules.flatted.python.test",
        "description": "react[old].node_modules.flatted.python.test",
        "peekOfCode": "o2 = parse(stringify(o));\nassert a2[0] == a2\nassert o2['o'] == o2\nassert a2[1] == 1 and a2[2] == 'two' and a2[3] == True and isinstance(a2[4], dict)\nassert a2[4] == a2[4]['o'] and a2 == a2[4]['o']['a']\nstr = parse('[{\"prop\":\"1\",\"a\":\"2\",\"b\":\"3\"},{\"value\":123},[\"4\",\"5\"],{\"e\":\"6\",\"t\":\"7\",\"p\":4},{},{\"b\":\"8\"},\"f\",{\"a\":\"9\"},[\"10\"],\"sup\",{\"a\":1,\"d\":2,\"c\":\"7\",\"z\":\"11\",\"h\":1},{\"g\":2,\"a\":\"7\",\"b\":\"12\",\"f\":6},{\"r\":4,\"u\":\"7\",\"c\":5}]')\nassert str['b']['t']['a'] == 'sup' and str['a'][1]['b'][0]['c'] == str['b']['t']\noo = parse('[{\"a\":\"1\",\"b\":\"0\",\"c\":\"2\"},{\"aa\":\"3\"},{\"ca\":\"4\",\"cb\":\"5\",\"cc\":\"6\",\"cd\":\"7\",\"ce\":\"8\",\"cf\":\"9\"},{\"aaa\":\"10\"},{\"caa\":\"4\"},{\"cba\":\"5\"},{\"cca\":\"2\"},{\"cda\":\"4\"},\"value2\",\"value3\",\"value1\"]');\nassert oo['a']['aa']['aaa'] == 'value1' and oo == oo['b'] and oo['c']['ca']['caa'] == oo['c']['ca']\nprint('OK')",
        "detail": "react[old].node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "str",
        "kind": 5,
        "importPath": "react[old].node_modules.flatted.python.test",
        "description": "react[old].node_modules.flatted.python.test",
        "peekOfCode": "str = parse('[{\"prop\":\"1\",\"a\":\"2\",\"b\":\"3\"},{\"value\":123},[\"4\",\"5\"],{\"e\":\"6\",\"t\":\"7\",\"p\":4},{},{\"b\":\"8\"},\"f\",{\"a\":\"9\"},[\"10\"],\"sup\",{\"a\":1,\"d\":2,\"c\":\"7\",\"z\":\"11\",\"h\":1},{\"g\":2,\"a\":\"7\",\"b\":\"12\",\"f\":6},{\"r\":4,\"u\":\"7\",\"c\":5}]')\nassert str['b']['t']['a'] == 'sup' and str['a'][1]['b'][0]['c'] == str['b']['t']\noo = parse('[{\"a\":\"1\",\"b\":\"0\",\"c\":\"2\"},{\"aa\":\"3\"},{\"ca\":\"4\",\"cb\":\"5\",\"cc\":\"6\",\"cd\":\"7\",\"ce\":\"8\",\"cf\":\"9\"},{\"aaa\":\"10\"},{\"caa\":\"4\"},{\"cba\":\"5\"},{\"cca\":\"2\"},{\"cda\":\"4\"},\"value2\",\"value3\",\"value1\"]');\nassert oo['a']['aa']['aaa'] == 'value1' and oo == oo['b'] and oo['c']['ca']['caa'] == oo['c']['ca']\nprint('OK')",
        "detail": "react[old].node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "oo",
        "kind": 5,
        "importPath": "react[old].node_modules.flatted.python.test",
        "description": "react[old].node_modules.flatted.python.test",
        "peekOfCode": "oo = parse('[{\"a\":\"1\",\"b\":\"0\",\"c\":\"2\"},{\"aa\":\"3\"},{\"ca\":\"4\",\"cb\":\"5\",\"cc\":\"6\",\"cd\":\"7\",\"ce\":\"8\",\"cf\":\"9\"},{\"aaa\":\"10\"},{\"caa\":\"4\"},{\"cba\":\"5\"},{\"cca\":\"2\"},{\"cda\":\"4\"},\"value2\",\"value3\",\"value1\"]');\nassert oo['a']['aa']['aaa'] == 'value1' and oo == oo['b'] and oo['c']['ca']['caa'] == oo['c']['ca']\nprint('OK')",
        "detail": "react[old].node_modules.flatted.python.test",
        "documentation": {}
    }
]